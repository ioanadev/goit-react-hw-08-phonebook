{"version":3,"file":"static/js/351.8a414942.chunk.js","mappings":"gMAKMA,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAC,OAAKA,CAAC,EAC5BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,GCG/BM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhCO,EAAgC,qBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,GAAcZ,EAAAA,EAAAA,eAAc,CAAEa,QAAQ,ICCtCC,EAAc,SAACC,GAAG,OAAKA,EAAIC,QAAQ,kBAAoB,SAASC,aAAa,ECA7EC,EAA+B,QAAUJ,EADjB,kBCFxBK,GACc,EADdA,GAEe,E,oBCFfC,EAAK,WACP,SAAAA,KAAcC,EAAAA,EAAAA,GAAA,KAAAD,GACVE,KAAKC,MAAQ,GACbD,KAAKE,UAAY,IAAIC,GACzB,CAkBC,OAlBAC,EAAAA,EAAAA,GAAAN,EAAA,EAAAO,IAAA,MAAAC,MACD,SAAIC,GACA,IAAKP,KAAKE,UAAUM,IAAID,GAGpB,OAFAP,KAAKE,UAAUO,IAAIF,GACnBP,KAAKC,MAAMS,KAAKH,IACT,CAEf,GAAC,CAAAF,IAAA,SAAAC,MACD,SAAOC,GACH,IAAMI,EAAQX,KAAKC,MAAMW,QAAQL,IAClB,IAAXI,IACAX,KAAKC,MAAMY,OAAOF,EAAO,GACzBX,KAAKE,UAAUY,OAAOP,GAE9B,GAAC,CAAAF,IAAA,QAAAC,MACD,WACIN,KAAKC,MAAMc,OAAS,EACpBf,KAAKE,UAAUc,OACnB,KAAClB,CAAA,CAtBM,GCGX,IAAMmB,EAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAGJ,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EAClBC,EAAQ,CACVC,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAQV,EAAWW,QAAO,SAACC,EAAKxB,GAElC,OADAwB,EAAIxB,GDGZ,SAA0BgB,GAKtB,IAAIS,EAAY,IAAIhC,EAChBiC,EAAY,IAAIjC,EAChBkC,EAAW,EAKXN,GAAe,EACfO,GAAiB,EAIfC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAACC,GAAmD,IACpDC,EADuCC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,IACNd,EACjCgB,EAAQH,EAAoBT,EAAYC,EAO9C,OAT0BS,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,IAItBN,EAAYzB,IAAI6B,GAChBI,EAAMjC,IAAI6B,IAAaC,GAAqBb,IAE5CM,EAAWF,EAAU7B,MAAMc,QAExBuB,CACX,EAIAK,OAAQ,SAACL,GACLP,EAAUa,OAAON,GACjBJ,EAAYpB,OAAOwB,EACvB,EAIA/B,QAAS,SAACsC,GAMN,GAAInB,EACAO,GAAiB,MADrB,CAIAP,GAAe,EAEf,IAAAoB,EADyB,CAACf,EAAWD,GAKrC,GALCA,EAASgB,EAAA,IAAEf,EAASe,EAAA,IAEX9B,QAEVgB,EAAWF,EAAU7B,MAAMc,OAEvB,IAAK,IAAIgC,EAAI,EAAGA,EAAIf,EAAUe,IAAK,CAC/B,IAAMT,EAAWR,EAAU7B,MAAM8C,GAC7Bb,EAAY1B,IAAI8B,KAChBF,EAAKC,SAASC,GACdjB,KAEJiB,EAASO,EACb,CAEJnB,GAAe,EACXO,IACAA,GAAiB,EACjBG,EAAK7B,QAAQsC,GApBjB,CAsBJ,GAEJ,OAAOT,CACX,CChFmBY,EAAiB,kBAAO3B,GAAe,CAAI,IAC/CQ,CACX,GAAG,CAAC,GACEoB,EAAc,SAACC,GACjBvB,EAAMuB,GAAQ3C,QAAQgB,EAC1B,EACM4B,EAAe,SAAfA,IACF,IAAM1B,EAAY5B,EACZ0B,EAAME,UACN2B,YAAYC,MAClBhC,GAAe,EACfE,EAAMC,MAAQF,EACR,IAAO,GACPgC,KAAKC,IAAID,KAAKE,IAAI/B,EAAYF,EAAME,UAvB/B,IAuBuD,GAClEF,EAAME,UAAYA,EAClBF,EAAMG,cAAe,EACrBT,EAAWwC,QAAQR,GACnB1B,EAAMG,cAAe,EACjBL,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBgC,GAE1B,EACMO,EAAO,WACTrC,GAAe,EACfC,GAAoB,EACfC,EAAMG,cACPP,EAAkBgC,EAE1B,EACMd,EAAWpB,EAAWW,QAAO,SAACC,EAAKxB,GACrC,IAAM+B,EAAOT,EAAMtB,GAMnB,OALAwB,EAAIxB,GAAO,SAACE,GAAkD,IAAzCoD,EAASnB,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GAAUoB,EAASpB,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GAG7C,OAFKnB,GACDqC,IACGtB,EAAKC,SAAS9B,EAASoD,EAAWC,EAC7C,EACO/B,CACX,GAAG,CAAC,GAEJ,MAAO,CAAEQ,SAAAA,EAAUM,OADJ,SAACpC,GAAO,OAAKU,EAAWwC,SAAQ,SAACpD,GAAG,OAAKsB,EAAMtB,GAAKsC,OAAOpC,EAAQ,GAAC,EACxDgB,MAAAA,EAAOI,MAAAA,EACtC,CC5DA,IAAAkC,EAAyD3C,EAAoB4C,gBAAgB,GAA3EC,EAASF,EAAnBxB,SAA4CwB,EAAvBlB,OCF7B,SAASqB,EAAYC,GACjB,OAAQA,GACW,kBAARA,GACPC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCDA,SAASK,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEI,KACjB,CCJA,IAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,WAASC,OAAKF,GCLpC,SAASG,EAAsBC,GAC3B,OAAQN,EAAoBM,EAAMC,UAC9BJ,EAAaK,MAAK,SAACC,GAAI,OAAKb,EAAeU,EAAMG,GAAM,GAC/D,CACA,SAASC,EAAcJ,GACnB,OAAOK,QAAQN,EAAsBC,IAAUA,EAAMM,SACzD,CCNA,SAASC,EAAuBP,GAC5B,IAAAQ,ECFJ,SAAgCR,EAAOS,GACnC,GAAIV,EAAsBC,GAAQ,CAC9B,IAAQU,EAAqBV,EAArBU,QAAST,EAAYD,EAAZC,QACjB,MAAO,CACHS,SAAqB,IAAZA,GAAqBpB,EAAeoB,GACvCA,OACAjD,EACNwC,QAASX,EAAeW,GAAWA,OAAUxC,EAErD,CACA,OAAyB,IAAlBuC,EAAMW,QAAoBF,EAAU,CAAC,CAChD,CDTiCG,CAAuBZ,GAAOa,EAAAA,EAAAA,YAAW9G,IAA9D2G,EAAOF,EAAPE,QAAST,EAAOO,EAAPP,QACjB,OAAOa,EAAAA,EAAAA,UAAQ,iBAAO,CAAEJ,QAAAA,EAAST,QAAAA,EAAS,GAAG,CAACc,EAA0BL,GAAUK,EAA0Bd,IAChH,CACA,SAASc,EAA0BC,GAC/B,OAAOxB,MAAMC,QAAQuB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,IAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAAEC,EAAA,SACnBxG,GACPuG,EAAmBvG,GAAO,CACtByG,UAAW,SAAC9B,GAAK,OAAKkB,EAAa7F,GAAK6E,MAAK,SAACC,GAAI,QAAOH,EAAMG,EAAK,GAAC,EACvE,EAHN,IAAK,IAAM9E,KAAO6F,EAAcW,EAArBxG,GCnBX,IAAM0G,GAAqBrI,EAAAA,EAAAA,eAAc,CAAC,GCGpCsI,GAA2BtI,EAAAA,EAAAA,eAAc,CAAC,GCL1CuI,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAqBtE,GAAoF,IAAjFuE,EAAiBvE,EAAjBuE,kBAAmBC,EAAmBxE,EAAnBwE,oBAAqBC,EAASzE,EAATyE,UAAWC,EAAc1E,EAAd0E,eAAgBC,EAAS3E,EAAT2E,UAChGJ,GCtBJ,SAAsBK,GAClB,IAAK,IAAMrH,KAAOqH,EACdd,EAAmBvG,IAAIsH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBf,EAAmBvG,IACnBqH,EAASrH,GAGxB,CDeyBuH,CAAaP,GA2ClC,IAAMQ,GAAsBC,EAAAA,EAAAA,aA1C5B,SAAyB9C,EAAO+C,GAK5B,IAAIC,EACEC,GAAcN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACb9B,EAAAA,EAAAA,YAAWpH,IACXuG,GAAK,IACRkD,SAAUC,EAAYnD,KAElBnG,EAAaoJ,EAAbpJ,SACF4G,EAAUF,EAAuBP,GACjCoD,EAAcZ,EAAexC,EAAOnG,GAC1C,IAAKA,GAAYI,EAAW,CAOxBwG,EAAQ4C,cErCpB,SAA0BZ,EAAWW,EAAapD,EAAOsC,GACrD,IAAuBgB,GAAWzC,EAAAA,EAAAA,YAAW9G,GAArCsJ,cACFE,GAAc1C,EAAAA,EAAAA,YAAWvG,GACzBkJ,GAAkB3C,EAAAA,EAAAA,YAAW7G,GAC7ByJ,GAAsB5C,EAAAA,EAAAA,YAAWpH,GAAqBK,cACtD4J,GAAmBC,EAAAA,EAAAA,UAIzBrB,EAAsBA,GAAuBiB,EAAYK,UACpDF,EAAiBG,SAAWvB,IAC7BoB,EAAiBG,QAAUvB,EAAoBG,EAAW,CACtDW,YAAAA,EACAE,OAAAA,EACAtD,MAAAA,EACAwD,gBAAAA,EACAM,wBAAuBN,IACW,IAA5BA,EAAgB9C,QAEtB+C,oBAAAA,KAGR,IAAMJ,EAAgBK,EAAiBG,SACvCE,EAAAA,EAAAA,qBAAmB,WACfV,GAAiBA,EAAcW,OAAOhE,EAAOwD,EACjD,IAKA,IAAMS,GAAeN,EAAAA,EAAAA,QAAOtD,QAAQL,EAAMpF,KAAkCsJ,OAAOC,kBAgCnF,OA/BAhK,GAA0B,WACjBkJ,IAELtE,EAAUqF,WAAWf,EAAcgB,QAW/BJ,EAAaJ,SAAWR,EAAciB,gBACtCjB,EAAciB,eAAeC,iBAErC,KACAlK,EAAAA,EAAAA,YAAU,WACDgJ,IAELA,EAAcmB,kBACTP,EAAaJ,SAAWR,EAAciB,gBACvCjB,EAAciB,eAAeC,iBAE7BN,EAAaJ,UACbI,EAAaJ,SAAU,EAEvBK,OAAOC,iBAAkB,GAEjC,IACOd,CACX,CF1BoCoB,CAAiBhC,EAAWW,EAAaH,EAAgBX,GAKjF,IAAMoC,GAA2B7D,EAAAA,EAAAA,YAAWmB,GACtC2C,GAAW9D,EAAAA,EAAAA,YAAWvG,GAAaC,OACrCkG,EAAQ4C,gBACRL,EAAgBvC,EAAQ4C,cAAcT,aAEtCK,EAAgB0B,EAAUtC,EAAmBqC,GAErD,CAKA,OAAQE,EAAAA,cAAoB7K,EAAc8K,SAAU,CAAEvJ,MAAOmF,GACzDuC,GAAiBvC,EAAQ4C,cAAiBuB,EAAAA,cAAoB5B,GAAaL,EAAAA,EAAAA,GAAA,CAAIU,cAAe5C,EAAQ4C,eAAkBJ,IAAqB,KAC7IV,EAAUE,EAAWzC,EG1DjC,SAAsBoD,EAAaC,EAAeN,GAC9C,OAAO+B,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAY3B,EAAY4B,OAAS5B,EAAY4B,MAAMD,GAC/C1B,IACA0B,EACM1B,EAAc2B,MAAMD,GACpB1B,EAAc4B,WAEpBlC,IAC2B,oBAAhBA,EACPA,EAAYgC,GAEP/F,EAAY+D,KACjBA,EAAYc,QAAUkB,GAGlC,GAMA,CAAC1B,GACL,CHmCwC6B,CAAa9B,EAAa3C,EAAQ4C,cAAeN,GAAcK,EAAavJ,EAAU4G,EAAQ4C,eAClI,IAGA,OADAR,EAAoBZ,GAAyBQ,EACtCI,CACX,CACA,SAASM,EAAWgC,GAAe,IAAZjC,EAAQiC,EAARjC,SACbkC,GAAgBvE,EAAAA,EAAAA,YAAWkB,GAAoBsD,GACrD,OAAOD,QAA8B3H,IAAbyF,EAClBkC,EAAgB,IAAMlC,EACtBA,CACV,CI5DA,SAASoC,EAAkBC,GACvB,SAASC,EAAO/C,GAA6C,IAAlCgD,EAA2BjI,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtD,OAAO4E,EAAsBmD,EAAa9C,EAAWgD,GACzD,CACA,GAAqB,qBAAVC,MACP,OAAOF,EAMX,IAAMG,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBK,IAAK,SAACC,EAASzK,GAOX,OAHKsK,EAAenK,IAAIH,IACpBsK,EAAeI,IAAI1K,EAAKmK,EAAOnK,IAE5BsK,EAAeE,IAAIxK,EAC9B,GAER,CCxCA,IAAM2K,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAexD,GACpB,MAKqB,kBAAdA,IAIHA,EAAUyD,SAAS,SAOvBF,EAAqBpK,QAAQ6G,IAAc,GAIvC,QAAS0D,KAAK1D,GAItB,CC3BA,IAAM2D,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAInL,IAAIkL,GCtB/B,SAASE,EAAoBlL,EAAGyC,GAAwB,IAApB6D,EAAM7D,EAAN6D,OAAQuB,EAAQpF,EAARoF,SACxC,OAAQoD,EAAe9K,IAAIH,IACvBA,EAAImL,WAAW,YACb7E,QAAuBlE,IAAbyF,OACLkD,EAAgB/K,IAAgB,YAARA,EACvC,CCRA,IAAMoL,EAAgB,SAACnL,GAAK,OAAK+E,QAAQ/E,GAASA,EAAMoL,YAAY,ECE9DC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBX,EAAmBtK,OCRzC,IAAMkL,EAAwB,SAACC,GAAK,OAAK,SAAC7L,GAAG,MAAoB,kBAARA,GAAoBA,EAAImL,WAAWU,EAAM,GAC5FC,EAAoBF,EAAsB,MAC1CG,EAAwBH,EAAsB,UAC9CI,EAAqB,SAAC/L,GAExB,QADwB8L,EAAsB9L,IAIvCgM,GAAuBnB,KAAK7K,EAAMiM,MAAM,MAAM,GAAGC,OAC5D,EACMF,GAAyB,0jBCPzBG,GAAiB,SAACnM,EAAOoM,GAC3B,OAAOA,GAAyB,kBAAVpM,EAChBoM,EAAKC,UAAUrM,GACfA,CACV,ECPMsM,GAAQ,SAACpJ,EAAKD,EAAKgB,GACrB,OAAIA,EAAIhB,EACGA,EACPgB,EAAIf,EACGA,EACJe,CACX,ECJMsI,GAAS,CACX1B,KAAM,SAAC5G,GAAC,MAAkB,kBAANA,CAAc,EAClCuI,MAAOC,WACPJ,UAAW,SAACpI,GAAC,OAAKA,CAAC,GAEjByI,IAAKrF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJkF,IAAM,IACTF,UAAW,SAACpI,GAAC,OAAKqI,GAAM,EAAG,EAAGrI,EAAE,IAE9B0I,IAAKtF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJkF,IAAM,IACTK,QAAS,ICPPC,GAAW,SAAC5I,GAAC,OAAKjB,KAAK8J,MAAU,IAAJ7I,GAAc,GAAM,EACjD8I,GAAa,yCACbC,GAAa,kVACbC,GAAmB,mVACzB,SAASC,GAASjJ,GACd,MAAoB,kBAANA,CAClB,CCVA,IAAMkJ,GAAiB,SAACC,GAAI,MAAM,CAC9BvC,KAAM,SAAC5G,GAAC,OAAKiJ,GAASjJ,IAAMA,EAAEoJ,SAASD,IAAiC,IAAxBnJ,EAAEgI,MAAM,KAAKxL,MAAY,EACzE+L,MAAOC,WACPJ,UAAW,SAACpI,GAAC,SAAAO,OAAQP,GAACO,OAAG4I,EAAI,EAChC,EACKE,GAAUH,GAAe,OACzBI,GAAUJ,GAAe,KACzBK,GAAKL,GAAe,MACpBM,GAAKN,GAAe,MACpBO,GAAKP,GAAe,MACpBQ,IAAkBtG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBkG,IAAO,IACVf,MAAO,SAACvI,GAAC,OAAKsJ,GAAQf,MAAMvI,GAAK,GAAG,EACpCoI,UAAW,SAACpI,GAAC,OAAKsJ,GAAQlB,UAAc,IAAJpI,EAAQ,ICb1C2J,IAAGvG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFkF,IAAM,IACTF,UAAWrJ,KAAK8J,QCAde,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,GACRuC,QAASvC,GACTwC,QAASxC,GACTyC,QAASzC,GACTX,MAAAA,GACAqD,OAAQrD,GACRsD,OAAQtD,GACRuD,OAAQvD,GACRwD,KAAM7C,GACN8C,MAAO9C,GACP+C,MAAO/C,GACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZlC,EAAGkC,GACHjC,EAAGiC,GACHhC,EAAGgC,GACHkD,YAAalD,GACb/B,qBAAsB+B,GACtBmD,QAASjE,GACTkE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GACRoD,oBAAqBxD,GACrByD,oBAAqBzD,GAErB0D,YAAaxE,GACbyE,cAAezE,GACf0E,WAAYxD,IChEhB,SAASyD,GAAgBpQ,EAAOqQ,EAAcC,EAASC,GACnD,IAAQC,EAA4CxQ,EAA5CwQ,MAAOC,EAAqCzQ,EAArCyQ,KAAMrF,EAA+BpL,EAA/BoL,UAAWsF,EAAoB1Q,EAApB0Q,gBAE5BC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAM/R,KAAOuR,EAAc,CAC5B,IAAMtR,EAAQsR,EAAavR,GAI3B,GAAI8L,EAAkB9L,GAClB2R,EAAK3R,GAAOC,MADhB,CAKA,IAAM+R,EAAYlE,GAAiB9N,GAC7BiS,EAAc7F,GAAenM,EAAO+R,GAC1C,GAAI/G,EAAe9K,IAAIH,GAAM,CAKzB,GAHA6R,GAAe,EACfvF,EAAUtM,GAAOiS,GAEZF,EACD,SAEA9R,KAAW+R,EAAUnF,SAAW,KAChCkF,GAAkB,EAC1B,MACS/R,EAAImL,WAAW,WAEpB2G,GAAqB,EACrBF,EAAgB5R,GAAOiS,GAGvBP,EAAM1R,GAAOiS,CArBjB,CAuBJ,CAiBA,GAhBKV,EAAajF,YACVuF,GAAgBJ,EAChBC,EAAMpF,UTtClB,SAAwBA,EAAS7J,EAAqEyP,EAAoBT,GAOtH,IAPyI,IAAAU,EAAA1P,EAAxG2P,2BAAAA,OAA0B,IAAAD,GAAOA,EAAAE,EAAA5P,EAAE6P,mBAAAA,OAAkB,IAAAD,GAAOA,EAEzFE,EAAkB,GAKb7P,EAAI,EAAGA,EAAIiJ,EAAejJ,IAAK,CACpC,IAAM1C,EAAMgL,EAAmBtI,QACRN,IAAnBkK,EAAUtM,KAEVuS,GAAmB,GAAJ9N,OADO6G,EAAetL,IAAQA,EACV,KAAAyE,OAAI6H,EAAUtM,GAAI,MAE7D,CAaA,OAZIoS,IAA+B9F,EAAUb,IACzC8G,GAAmB,iBAEvBA,EAAkBA,EAAgBpG,OAG9BsF,EACAc,EAAkBd,EAAkBnF,EAAW4F,EAAqB,GAAKK,GAEpED,GAAsBJ,IAC3BK,EAAkB,QAEfA,CACX,CSW8BC,CAAetR,EAAMoL,UAAWkF,EAASO,EAAiBN,GAEvEC,EAAMpF,YAKXoF,EAAMpF,UAAY,SAOtBwF,EAAoB,CACpB,IAAAW,EAA2Db,EAAnDf,QAAAA,OAAO,IAAA4B,EAAG,MAAKA,EAAAC,EAAoCd,EAAlCd,QAAAA,OAAO,IAAA4B,EAAG,MAAKA,EAAAC,EAAmBf,EAAjBb,QAAAA,OAAO,IAAA4B,EAAG,EAACA,EACrDjB,EAAME,gBAAkB,GAAHnN,OAAMoM,EAAO,KAAApM,OAAIqM,EAAO,KAAArM,OAAIsM,EACrD,CACJ,CCvEA,IAAM6B,GAAwB,WAAH,MAAU,CACjClB,MAAO,CAAC,EACRpF,UAAW,CAAC,EACZsF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,EACV,ECCD,SAASkB,GAAkBC,EAAQC,EAAQpO,GACvC,IAAK,IAAM3E,KAAO+S,EACT3H,EAAc2H,EAAO/S,KAAUkL,EAAoBlL,EAAK2E,KACzDmO,EAAO9S,GAAO+S,EAAO/S,GAGjC,CAQA,SAASgT,GAASrO,EAAOoD,EAAavJ,GAClC,IACMkT,EAAQ,CAAC,EAMf,OAFAmB,GAAkBnB,EALA/M,EAAM+M,OAAS,CAAC,EAKE/M,GACpCd,OAAOoP,OAAOvB,EAdlB,SAA+BjP,EAAwBsF,EAAavJ,GAAU,IAA5CiT,EAAiBhP,EAAjBgP,kBAC9B,OAAOhM,EAAAA,EAAAA,UAAQ,WACX,IAAMvE,EDfuB,CACjCwQ,MAAO,CAAC,EACRpF,UAAW,CAAC,EACZsF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,GCaH,OADAL,GAAgBpQ,EAAO6G,EAAa,CAAEqK,4BAA6B5T,GAAYiT,GACxE5N,OAAOoP,OAAO,CAAC,EAAG/R,EAAMyQ,KAAMzQ,EAAMwQ,MAC/C,GAAG,CAAC3J,GACR,CAQyBmL,CAAuBvO,EAAOoD,EAAavJ,IACzDkT,CACX,CACA,SAASyB,GAAaxO,EAAOoD,EAAavJ,GAEtC,IAAM4U,EAAY,CAAC,EACb1B,EAAQsB,GAASrO,EAAOoD,EAAavJ,GAoB3C,OAnBImG,EAAMqB,OAA+B,IAAvBrB,EAAM0O,eAEpBD,EAAUE,WAAY,EAEtB5B,EAAM6B,WACF7B,EAAM8B,iBACF9B,EAAM+B,mBACF,OAEZ/B,EAAMgC,aACa,IAAf/O,EAAMqB,KACA,OAAM,OAAAvB,OACgB,MAAfE,EAAMqB,KAAe,IAAM,WAEzB5D,IAAnBuC,EAAMgP,WACLhP,EAAMiP,OAASjP,EAAMkP,YAAclP,EAAMmP,YAC1CV,EAAUO,SAAW,GAEzBP,EAAU1B,MAAQA,EACX0B,CACX,CChDA,IAAMW,GAAmB,IAAIjU,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASkU,GAAkBhU,GACvB,OAAQA,EAAImL,WAAW,UAClBnL,EAAImL,WAAW,SAAmB,cAARnL,GAC3BA,EAAImL,WAAW,WACfnL,EAAImL,WAAW,UACfnL,EAAImL,WAAW,UACfnL,EAAImL,WAAW,aACf4I,GAAiB5T,IAAIH,EAC7B,CCpDA,IACiCiU,GAD7BC,GAAgB,SAAClU,GAAG,OAAMgU,GAAkBhU,EAAI,EAoBpD,KAnBiCiU,GAyBLE,QAAQ,0BAA0BtH,WArB1DqH,GAAgB,SAAClU,GAAG,OAAKA,EAAImL,WAAW,OAAS6I,GAAkBhU,GAAOiU,GAAYjU,EAAI,EAwB1F,CADJ,MAAOoU,IACH,CAEJ,SAASC,GAAY1P,EAAO2P,EAAOC,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAMxU,KAAO2E,EAQF,WAAR3E,GAA4C,kBAAjB2E,EAAM8P,SAEjCP,GAAclU,KACU,IAAvBuU,GAA+BP,GAAkBhU,KAChDsU,IAAUN,GAAkBhU,IAE7B2E,EAAiB,WAAK3E,EAAImL,WAAW,aACtCqJ,EAAcxU,GAAO2E,EAAM3E,IAGnC,OAAOwU,CACX,C,eCpDA,SAASE,GAAWC,EAAQC,EAAQ9F,GAChC,MAAyB,kBAAX6F,EACRA,EACAlH,GAAGnB,UAAUsI,EAAS9F,EAAO6F,EACvC,CCJA,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,iGCDX,SAASE,GAAc9T,EAAKuB,EAEf+O,EAASyD,EAAUxD,GAAmB,IAFnByD,EAAKzS,EAALyS,MAAOC,EAAK1S,EAAL0S,MAAOC,EAAS3S,EAAT2S,UAAWvE,EAAOpO,EAAPoO,QAASC,EAAOrO,EAAPqO,QAASuE,EAAU5S,EAAV4S,WAAUC,EAAA7S,EAAE8S,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAA/S,EAAEgT,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAQlH,GALAlE,GAAgBpQ,GADXwU,EAAAA,GAAAA,GAAAjT,EAAAkT,IAC0BnE,EAASC,GAKpCwD,EACI/T,EAAMwQ,MAAMkE,UACZ1U,EAAM2U,MAAMD,QAAU1U,EAAMwQ,MAAMkE,aAF1C,CAMA1U,EAAM2U,MAAQ3U,EAAMwQ,MACpBxQ,EAAMwQ,MAAQ,CAAC,EACf,IAAQmE,EAA6B3U,EAA7B2U,MAAOnE,EAAsBxQ,EAAtBwQ,MAAOoE,EAAe5U,EAAf4U,WAKlBD,EAAMvJ,YACFwJ,IACApE,EAAMpF,UAAYuJ,EAAMvJ,kBACrBuJ,EAAMvJ,WAGbwJ,SACa1T,IAAZyO,QAAqCzO,IAAZ0O,GAAyBY,EAAMpF,aACzDoF,EAAME,gBFzBd,SAAgCkE,EAAYjF,EAASC,GACjD,IAAMiF,EAAYrB,GAAW7D,EAASiF,EAAWvK,EAAGuK,EAAWpH,OACzDsH,EAAYtB,GAAW5D,EAASgF,EAAWtK,EAAGsK,EAAWlH,QAC/D,MAAO,GAAPnK,OAAUsR,EAAS,KAAAtR,OAAIuR,EAC3B,CEqBgCC,CAAuBH,OAAwB1T,IAAZyO,EAAwBA,EAAU,QAAiBzO,IAAZ0O,EAAwBA,EAAU,UAG1H1O,IAAV8S,IACAW,EAAMtK,EAAI2J,QACA9S,IAAV+S,IACAU,EAAMrK,EAAI2J,QACI/S,IAAdgT,IACAS,EAAMjJ,MAAQwI,QAEChT,IAAfiT,GD7BR,SAAsBQ,EAAOnV,GAAqD,IAA7CwV,EAAO/T,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGyS,EAAMzS,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGgU,IAAWhU,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,KAAAA,UAAA,GAErE0T,EAAMR,WAAa,EAGnB,IAAMe,EAAOD,EAActB,GAAWE,GAEtCc,EAAMO,EAAKxB,QAAUnH,GAAGnB,WAAWsI,GAEnC,IAAMS,EAAa5H,GAAGnB,UAAU5L,GAC1B6U,EAAc9H,GAAGnB,UAAU4J,GACjCL,EAAMO,EAAKtB,OAAS,GAAHrQ,OAAM4Q,EAAU,KAAA5Q,OAAI8Q,EACzC,CCkBQc,CAAaR,EAAOR,EAAYE,EAAaE,GAAY,EA3B7D,CA6BJ,CC/CA,IAAMa,GAAuB,WAAH,OAAAhP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GPFW,CACjCoK,MAAO,CAAC,EACRpF,UAAW,CAAC,EACZsF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,IODmB,IAC1BkE,MAAO,CAAC,GAAC,ECJPZ,GAAW,SAACsB,GAAG,MAAoB,kBAARA,GAA0C,QAAtBA,EAAIjX,aAAuB,ECMhF,SAASkX,GAAY7R,EAAOoD,EAAa0O,EAAWrP,GAChD,IAAMsP,GAAcjR,EAAAA,EAAAA,UAAQ,WACxB,IAAMvE,EAAQoV,KAEd,OADAtB,GAAc9T,EAAO6G,EAAa,CAAEqK,4BAA4B,GAAS6C,GAAS7N,GAAYzC,EAAM8M,oBACpGnK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOpG,EAAM2U,OAAK,IACdnE,OAAKpK,EAAAA,EAAAA,GAAA,GAAOpG,EAAMwQ,QAE1B,GAAG,CAAC3J,IACJ,GAAIpD,EAAM+M,MAAO,CACb,IAAMiF,EAAY,CAAC,EACnB9D,GAAkB8D,EAAWhS,EAAM+M,MAAO/M,GAC1C+R,EAAYhF,OAAKpK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQqP,GAAcD,EAAYhF,MACvD,CACA,OAAOgF,CACX,CCdA,SAASE,KAA4C,IAA5BrC,EAAkBpS,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GACjC+E,EAAY,SAACE,EAAWzC,EAAOf,EAAGnB,EAAoBjE,GAAa,IAA7B+S,EAAY9O,EAAZ8O,aAIlCmF,GAHiB9L,EAAexD,GAChCoP,GACArD,IAC6BxO,EAAO4M,EAAc/S,EAAU4I,GAC5DoN,EAAgBH,GAAY1P,EAA4B,kBAAdyC,EAAwBmN,GAClEsC,EAAezP,IAAc0P,EAAAA,UAAQxP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChCkN,GAAkBkC,GAAW,IAAE9S,IAAAA,IACpC,CAAC,EAMCmT,EAAapS,EAAboS,SACFC,GAAmBvR,EAAAA,EAAAA,UAAQ,kBAAO2F,EAAc2L,GAAYA,EAASvM,MAAQuM,CAAQ,GAAG,CAACA,IAC/F,OAAOE,EAAAA,EAAAA,eAAc7P,GAASE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBuP,GAAY,IACfE,SAAUC,IAElB,EACA,OAAO9P,CACX,CC9BA,SAASgQ,GAAWC,EAAO1U,EAAmB2U,EAAWC,GAAY,IAAtC3F,EAAKjP,EAALiP,MAAOC,EAAIlP,EAAJkP,KAGlC,IAAK,IAAM3R,KAFX6D,OAAOoP,OAAOkE,EAAQzF,MAAOA,EAAO2F,GAAcA,EAAWC,oBAAoBF,IAE/DzF,EACdwF,EAAQzF,MAAM6F,YAAYvX,EAAK2R,EAAK3R,GAE5C,CCHA,IAAMwX,GAAsB,IAAI1X,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS2X,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAMrX,KADXkX,GAAWC,EAASO,OAAatV,EAAWiV,GAC1BK,EAAY7B,MAC1BsB,EAAQS,aAAcJ,GAAoBrX,IAAIH,GAA0BA,EAAnBb,EAAYa,GAAY0X,EAAY7B,MAAM7V,GAEvG,CCNA,SAAS6X,GAA4BlT,EAAOmT,GACxC,IAAQpG,EAAU/M,EAAV+M,MACFqG,EAAY,CAAC,EACnB,IAAK,IAAM/X,KAAO0R,GACVtG,EAAcsG,EAAM1R,KACnB8X,EAAUpG,OAAStG,EAAc0M,EAAUpG,MAAM1R,KAClDkL,EAAoBlL,EAAK2E,MACzBoT,EAAU/X,GAAO0R,EAAM1R,IAG/B,OAAO+X,CACX,CCVA,SAASF,GAA4BlT,EAAOmT,GACxC,IAAMC,EAAYC,GAA8BrT,EAAOmT,GACvD,IAAK,IAAM9X,KAAO2E,EAAO,CACrB,GAAIyG,EAAczG,EAAM3E,KAASoL,EAAc0M,EAAU9X,IAIrD+X,GAHuD,IAArC/M,EAAmBzK,QAAQP,GACvC,OAASA,EAAIiY,OAAO,GAAGC,cAAgBlY,EAAImY,UAAU,GACrDnY,GACiB2E,EAAM3E,EAErC,CACA,OAAO+X,CACX,CCfA,SAASK,GAAwBzT,EAAO0T,EAAYlO,GAAkD,IAA1CmO,EAAanW,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoW,EAAepW,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAfkW,IACPA,EAAaA,OAAsBjW,IAAX+H,EAAuBA,EAASxF,EAAMwF,OAAQmO,EAAeC,IAM/D,kBAAfF,IACPA,EAAa1T,EAAMM,UAAYN,EAAMM,SAASoT,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBjW,IAAX+H,EAAuBA,EAASxF,EAAMwF,OAAQmO,EAAeC,IAElFF,CACX,CCvBA,IAAMG,GAAoB,SAACtU,GACvB,OAAOC,MAAMC,QAAQF,EACzB,ECMA,SAASuU,GAAmBxY,GACxB,ICPmBiE,EDObwU,EAAiBtN,EAAcnL,GAASA,EAAMuK,MAAQvK,EAC5D,OCRmBiE,EDQEwU,ECPd1T,QAAQd,GAAkB,kBAANA,GAAkBA,EAAEyU,KAAOzU,EAAE0U,SDQlDF,EAAeE,UACfF,CACV,C,sCEMA,IAAMG,GAAqB,SAACC,GAAM,OAAK,SAACnU,EAAOnG,GAC3C,IAAM4G,GAAUI,EAAAA,EAAAA,YAAW9G,GACrByJ,GAAkB3C,EAAAA,EAAAA,YAAW7G,GAC7Boa,EAAO,WAAH,OAbd,SAAkBtW,EAA+DkC,EAAOS,EAAS+C,GAAiB,IAA7F0P,EAA2BpV,EAA3BoV,4BAA6BmB,EAAiBvW,EAAjBuW,kBAAmBC,EAAOxW,EAAPwW,QAC3D/X,EAAQ,CACVqQ,aAAc2H,GAAiBvU,EAAOS,EAAS+C,EAAiB0P,GAChEH,YAAasB,KAKjB,OAHIC,IACA/X,EAAMyI,MAAQ,SAACD,GAAQ,OAAKuP,EAAQtU,EAAO+E,EAAUxI,EAAM,GAExDA,CACX,CAIuBiY,CAAUL,EAAQnU,EAAOS,EAAS+C,EAAgB,EACrE,OAAO3J,EAAWua,ICdtB,SAAqBK,GACjB,IAAMxV,GAAM0E,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhB1E,EAAI4E,UACJ5E,EAAI4E,QAAU4Q,KAEXxV,EAAI4E,OACf,CDQ+B6Q,CAAYN,EAC3C,CAAC,EACD,SAASG,GAAiBvU,EAAOS,EAAS+C,EAAiBmR,GACvD,IAAM7E,EAAS,CAAC,EACV8E,EAAeD,EAAmB3U,EAAO,CAAC,GAChD,IAAK,IAAM3E,KAAOuZ,EACd9E,EAAOzU,GAAOyY,GAAmBc,EAAavZ,IAElD,IAAMqF,EAAqBV,EAArBU,QAAST,EAAYD,EAAZC,QACT4U,EAA0B9U,EAAsBC,GAChD8U,EAAkB1U,EAAcJ,GAClCS,GACAqU,IACCD,IACiB,IAAlB7U,EAAMW,eACUlD,IAAZiD,IACAA,EAAUD,EAAQC,cACNjD,IAAZwC,IACAA,EAAUQ,EAAQR,UAE1B,IAAI8U,IAA4BvR,IACE,IAA5BA,EAAgB9C,QAGhBsU,GADND,EAA4BA,IAAyC,IAAZrU,GACRT,EAAUS,EACvDsU,GACwB,mBAAjBA,IACNtV,EAAoBsV,KACRxV,MAAMC,QAAQuV,GAAgBA,EAAe,CAACA,IACtDvW,SAAQ,SAACiV,GACV,IAAMuB,EAAWxB,GAAwBzT,EAAO0T,GAChD,GAAKuB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8B/G,GAAW8G,EAA1BE,YAAqBpE,EAAAA,GAAAA,GAAKkE,EAAQjE,KACzD,IAAK,IAAM3V,KAAO8S,EAAQ,CACtB,IAAIiH,EAAcjH,EAAO9S,GACzB,GAAImE,MAAMC,QAAQ2V,GAQdA,EAAcA,EAHAL,EACRK,EAAYrZ,OAAS,EACrB,GAGU,OAAhBqZ,IACAtF,EAAOzU,GAAO+Z,EAEtB,CACA,IAAK,IAAM/Z,KAAO6Z,EACdpF,EAAOzU,GAAO6Z,EAAc7Z,EAnBtB,CAoBd,IAEJ,OAAOyU,CACX,CE9EA,IAAMuF,GAAO,SAACC,GAAG,OAAKA,CAAG,ECGzBzW,GAA2E3C,EAAqD,qBAA1BqZ,sBAAwCA,sBAAwBF,IAAM,GAA1JG,GAAK3W,GAAfxB,SAAyBoY,GAAW5W,GAAnBlB,OAA4BE,GAASgB,GAAhBtC,MAAkBI,GAAKkC,GAALlC,MCK1D+Y,GAAkB,CACpBlT,eAAgB0R,GAAmB,CAC/BhB,4BAA6BA,GAC7BmB,kBAAmB1C,GACnB2C,QAAS,SAACtU,EAAO+E,EAAQjH,GAAoC,IAAhCiV,EAAWjV,EAAXiV,YAAanG,EAAY9O,EAAZ8O,aACtC4I,GAAAA,MAAW,WACP,IACIzC,EAAY5B,WAEJ,oBADGpM,EAAS4Q,QAEV5Q,EAAS4Q,UACT5Q,EAAS6Q,uBAUvB,CARA,MAAOC,GAEH9C,EAAY5B,WAAa,CACrBvK,EAAG,EACHC,EAAG,EACHkD,MAAO,EACPE,OAAQ,EAEhB,CACJ,IACAuL,GAAAA,QAAa,WACTnF,GAAc0C,EAAanG,EAAc,CAAEa,4BAA4B,GAAS6C,GAASvL,EAAS+Q,SAAU9V,EAAM8M,mBAClHgG,GAAU/N,EAAUgO,EACxB,GACJ,KC/BFgD,GAAmB,CACrBvT,eAAgB0R,GAAmB,CAC/BhB,4BAAAA,GACAmB,kBAAmBpG,M,yBCP3B,SAAS+H,GAAY7H,EAAQ8H,EAAWC,GAAsC,IAA7BrJ,EAAOrP,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAE2Y,SAAS,GAElE,OADAhI,EAAOiI,iBAAiBH,EAAWC,EAASrJ,GACrC,kBAAMsB,EAAOkI,oBAAoBJ,EAAWC,EAAQ,CAC/D,CCHA,IAAMI,GAAmB,SAACC,GACtB,MAA0B,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,SAErB,ECbA,SAASC,GAAiBJ,GAA2B,IAApBK,EAASpZ,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHqZ,MAAO,CACHjQ,EAAG2P,EAAMK,EAAY,KACrB/P,EAAG0P,EAAMK,EAAY,MAGjC,CCNA,SAASE,GAAgB3I,EAAQ8H,EAAWC,EAASrJ,GACjD,OAAOmJ,GAAY7H,EAAQ8H,EDMR,SAACC,GACpB,OAAO,SAACK,GAAK,OAAKD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,GAAO,CACxF,CCR0CQ,CAAeb,GAAUrJ,EACnE,CCEA,IAAMmK,GAAmB,SAACC,EAAGC,GAAC,OAAK,SAAC3X,GAAC,OAAK2X,EAAED,EAAE1X,GAAG,GAC3C4X,GAAO,WAAH,QAAAC,EAAA5Z,UAAAzB,OAAOsb,EAAY,IAAA7X,MAAA4X,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAA9Z,UAAA8Z,GAAA,OAAKD,EAAaza,OAAOoa,GAAiB,ECRvE,SAASO,GAAWpX,GAChB,IAAIqX,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAOrX,EAJM,WACbqX,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAActW,GACnB,IAAImW,GAAO,EACX,GAAa,MAATnW,EACAmW,EAAOE,UAEN,GAAa,MAATrW,EACLmW,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOL,CACX,CACA,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,C,IClDMC,GAAO,WACT,SAAAA,EAAYC,IAAMld,EAAAA,EAAAA,GAAA,KAAAid,GACdhd,KAAKkd,WAAY,EACjBld,KAAKid,KAAOA,CAChB,CACY,OADX7c,EAAAA,EAAAA,GAAA4c,EAAA,EAAA3c,IAAA,SAAAC,MACD,WAAW,KAAC0c,CAAA,CALH,GCKb,SAASG,GAAcF,EAAMG,GACzB,IAAMnC,EAAY,WAAamC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOtB,GAAgBmB,EAAKpU,QAASoS,GAXjB,SAACM,EAAO+B,GACxB,GAA0B,UAAtB/B,EAAMC,cAA2BsB,KAArC,CAEA,IAAM9X,EAAQiY,EAAKM,WACfN,EAAK3T,gBAAkBtE,EAAMwY,YAC7BP,EAAK3T,eAAemU,UAAU,aAAcL,GAE5CpY,EAAMqY,IACNrY,EAAMqY,GAAc9B,EAAO+B,EANrB,CAQd,GAC6D,CACzDnC,SAAU8B,EAAKM,WAAWF,IAElC,CAAC,IACKK,GAAY,SAAAC,IAAAC,EAAAA,GAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAA3d,EAAAA,EAAAA,GAAA,KAAA2d,GAAAG,EAAAE,MAAA,KAAAvb,UAAA,CAID,OAJCpC,EAAAA,EAAAA,GAAAsd,EAAA,EAAArd,IAAA,QAAAC,MACd,WACIN,KAAKiK,QAAUkS,GAAKgB,GAAcnd,KAAKid,MAAM,GAAOE,GAAcnd,KAAKid,MAAM,GACjF,GAAC,CAAA5c,IAAA,UAAAC,MACD,WAAY,KAACod,CAAA,CAJC,CAASV,ICnBrBgB,GAAY,SAAAL,IAAAC,EAAAA,GAAAA,GAAAI,EAAAL,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAE,GACd,SAAAA,IAAc,IAAAC,EAEY,OAFZle,EAAAA,EAAAA,GAAA,KAAAie,IACVC,EAAAJ,EAAAE,MAAA,KAASvb,YACJ4a,UAAW,EAAMa,CAC1B,CA6Ba,OA7BZ7d,EAAAA,EAAAA,GAAA4d,EAAA,EAAA3d,IAAA,UAAAC,MACD,WACI,IAAI4d,GAAiB,EAOrB,IACIA,EAAiBle,KAAKid,KAAKpU,QAAQsV,QAAQ,iBAI/C,CAFA,MAAOtD,GACHqD,GAAiB,CACrB,CACKA,GAAmBle,KAAKid,KAAK3T,iBAElCtJ,KAAKid,KAAK3T,eAAemU,UAAU,cAAc,GACjDzd,KAAKod,UAAW,EACpB,GAAC,CAAA/c,IAAA,SAAAC,MACD,WACSN,KAAKod,UAAapd,KAAKid,KAAK3T,iBAEjCtJ,KAAKid,KAAK3T,eAAemU,UAAU,cAAc,GACjDzd,KAAKod,UAAW,EACpB,GAAC,CAAA/c,IAAA,QAAAC,MACD,WAAQ,IAAA8d,EAAA,KACJpe,KAAKiK,QAAUkS,GAAKnB,GAAYhb,KAAKid,KAAKpU,QAAS,SAAS,kBAAMuV,EAAKC,SAAS,IAAGrD,GAAYhb,KAAKid,KAAKpU,QAAS,QAAQ,kBAAMuV,EAAKE,QAAQ,IACjJ,GAAC,CAAAje,IAAA,UAAAC,MACD,WAAY,KAAC0d,CAAA,CAjCC,CAAShB,ICGrBuB,GAAgB,SAAhBA,EAAiBjW,EAAQkW,GAC3B,QAAKA,IAGIlW,IAAWkW,GAITD,EAAcjW,EAAQkW,EAAMC,eAE3C,ECRA,SAASC,GAA0BvZ,EAAM+V,GACrC,GAAKA,EAAL,CAEA,IAAMyD,EAAwB,IAAIC,aAAa,UAAYzZ,GAC3D+V,EAAQyD,EAAuBhD,GAAiBgD,GAFtC,CAGd,CAAC,IACKE,GAAY,SAAAlB,IAAAC,EAAAA,GAAAA,GAAAiB,EAAAlB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAe,GACd,SAAAA,IAAc,IAAAZ,EAuDR,OAvDQle,EAAAA,EAAAA,GAAA,KAAA8e,IACVZ,EAAAJ,EAAAE,MAAA,KAASvb,YACJsc,qBAAuBzE,GAC5B4D,EAAKc,mBAAqB1E,GAC1B4D,EAAKe,0BAA4B3E,GACjC4D,EAAKgB,kBAAoB,SAACC,EAAYC,GAClC,IAAIlB,EAAKmB,WAAT,CAEAnB,EAAKc,qBACL,IAAM/Z,EAAQiZ,EAAKhB,KAAKM,WAclB8B,EAA0BvD,GAAgB5S,OAAQ,aAbhC,SAACoW,EAAUC,GAC/B,GAAKtB,EAAKuB,gBAAV,CAEA,IAAAC,EAAgDxB,EAAKhB,KAAKM,WAAlDtJ,EAAKwL,EAALxL,MAAOyL,EAAWD,EAAXC,YAA4BD,EAAfE,iBAMvBpB,GAAcN,EAAKhB,KAAKpU,QAASyW,EAASnM,QAEzCc,GAASA,EAAMqL,EAAUC,GADzBG,GAAeA,EAAYJ,EAAUC,EARjC,CAUd,GACsF,CAAEpE,UAAWnW,EAAMiP,OAASjP,EAAmB,eAC/H4a,EAA8B9D,GAAgB5S,OAAQ,iBAAiB,SAAC2W,EAAaC,GAAU,OAAK7B,EAAK8B,YAAYF,EAAaC,EAAW,GAAE,CAAE3E,UAAWnW,EAAM0a,aAAe1a,EAAuB,mBAC9MiZ,EAAKc,mBAAqB5C,GAAKkD,EAAyBO,GACxD3B,EAAK+B,WAAWd,EAAYC,EAnBlB,CAoBd,EACAlB,EAAKgC,qBAAuB,WACxB,IAkBMC,EAAwBlF,GAAYiD,EAAKhB,KAAKpU,QAAS,WAlBvC,SAACsX,GACnB,GAAyB,UAArBA,EAAa9f,MAAmB4d,EAAKmB,WAAzC,CAWAnB,EAAKc,qBACLd,EAAKc,mBAAqB/D,GAAYiD,EAAKhB,KAAKpU,QAAS,SAVrC,SAACuX,GACM,UAAnBA,EAAW/f,KAAoB4d,EAAKuB,iBAExCd,GAA0B,MAAM,SAACnD,EAAO+B,GACpC,IAAQrJ,EAAUgK,EAAKhB,KAAKM,WAApBtJ,MACJA,GACAA,EAAMsH,EAAO+B,EACrB,GACJ,IAGAoB,GAA0B,QAAQ,SAACnD,EAAO+B,GACtCW,EAAK+B,WAAWzE,EAAO+B,EAC3B,GAdU,CAed,IAOM+C,EAAqBrF,GAAYiD,EAAKhB,KAAKpU,QAAS,QALvC,WACVoV,EAAKmB,YAEVV,GAA0B,UAAU,SAACmB,EAAaC,GAAU,OAAK7B,EAAK8B,YAAYF,EAAaC,EAAW,GAC9G,IAEA7B,EAAKe,0BAA4B7C,GAAK+D,EAAuBG,EACjE,EAAEpC,CACN,CAwCC,OAxCA7d,EAAAA,EAAAA,GAAAye,EAAA,EAAAxe,IAAA,aAAAC,MACD,SAAWib,EAAO+B,GACdtd,KAAKof,YAAa,EAClB,IAAAkB,EAAiCtgB,KAAKid,KAAKM,WAAnCrJ,EAAUoM,EAAVpM,WAAoBoM,EAARnM,UAIJnU,KAAKid,KAAK3T,gBACtBtJ,KAAKid,KAAK3T,eAAemU,UAAU,YAAY,GAE/CvJ,GACAA,EAAWqH,EAAO+B,EAE1B,GAAC,CAAAjd,IAAA,gBAAAC,MACD,WAOI,OANAN,KAAK+e,qBACL/e,KAAKof,YAAa,EACJpf,KAAKid,KAAKM,WACdpJ,UAAYnU,KAAKid,KAAK3T,gBAC5BtJ,KAAKid,KAAK3T,eAAemU,UAAU,YAAY,IAE3CX,IACZ,GAAC,CAAAzc,IAAA,cAAAC,MACD,SAAYib,EAAO+B,GACf,GAAKtd,KAAKwf,gBAAV,CAEA,IAAQE,EAAgB1f,KAAKid,KAAKM,WAA1BmC,YACJA,GACAA,EAAYnE,EAAO+B,EAHb,CAId,GAAC,CAAAjd,IAAA,QAAAC,MACD,WACI,IAAM0E,EAAQhF,KAAKid,KAAKM,WAClBgD,EAAwBzE,GAAgB9W,EAAM2a,gBAAkBzW,OAASlJ,KAAKid,KAAKpU,QAAS,cAAe7I,KAAKif,kBAAmB,CAAE9D,UAAWnW,EAAMkP,YAAclP,EAAsB,kBAC1Lwb,EAAsBxF,GAAYhb,KAAKid,KAAKpU,QAAS,QAAS7I,KAAKigB,sBACzEjgB,KAAK8e,qBAAuB3C,GAAKoE,EAAuBC,EAC5D,GAAC,CAAAngB,IAAA,UAAAC,MACD,WACIN,KAAK8e,uBACL9e,KAAK+e,qBACL/e,KAAKgf,2BACT,KAACH,CAAA,CAjGa,CAAS7B,I,YCVrByD,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMve,EAAWme,GAAkB5V,IAAIgW,EAAM1N,QAC7C7Q,GAAYA,EAASue,EACzB,EACMC,GAA2B,SAACC,GAC9BA,EAAQtd,QAAQmd,GACpB,EAoBA,SAASI,GAAoBxJ,EAAS3F,EAASvP,GAC3C,IAAM2e,EApBV,SAAiCne,GAAuB,IAApBoe,EAAIpe,EAAJoe,KAASrP,GAAOkE,EAAAA,GAAAA,GAAAjT,EAAAkT,IAC1CmL,EAAaD,GAAQhiB,SAItByhB,GAAUngB,IAAI2gB,IACfR,GAAU5V,IAAIoW,EAAY,CAAC,GAE/B,IAAMC,EAAgBT,GAAU9V,IAAIsW,GAC9B9gB,EAAMghB,KAAKC,UAAUzP,GAQ3B,OAHKuP,EAAc/gB,KACf+gB,EAAc/gB,GAAO,IAAIkhB,qBAAqBT,IAAwBnZ,EAAAA,EAAAA,GAAA,CAAIuZ,KAAAA,GAASrP,KAEhFuP,EAAc/gB,EACzB,CAEsCmhB,CAAyB3P,GAG3D,OAFA4O,GAAkB1V,IAAIyM,EAASlV,GAC/B2e,EAA0BQ,QAAQjK,GAC3B,WACHiJ,GAAkB3f,OAAO0W,GACzByJ,EAA0BS,UAAUlK,EACxC,CACJ,CC3CA,IAAMmK,GAAiB,CACnBzc,KAAM,EACN0c,IAAK,GAEHC,GAAa,SAAAlE,IAAAC,EAAAA,GAAAA,GAAAiE,EAAAlE,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA+D,GACf,SAAAA,IAAc,IAAA5D,EAGY,OAHZle,EAAAA,EAAAA,GAAA,KAAA8hB,IACV5D,EAAAJ,EAAAE,MAAA,KAASvb,YACJsf,gBAAiB,EACtB7D,EAAK8D,UAAW,EAAM9D,CAC1B,CAqDa,OArDZ7d,EAAAA,EAAAA,GAAAyhB,EAAA,EAAAxhB,IAAA,gBAAAC,MACD,WAAgB,IAAA8d,EAAA,KACZpe,KAAKiK,UACL,IAA8C+X,EAApBhiB,KAAKid,KAAKM,WAA5B0E,SAAAA,OAAQ,IAAAD,EAAG,CAAC,EAACA,EACbd,EAAoDe,EAApDf,KAAcgB,EAAsCD,EAA9CpS,OAAMsS,EAAwCF,EAA1BG,OAAAA,OAAM,IAAAD,EAAG,OAAMA,EAAEE,EAASJ,EAATI,KAC7CxQ,EAAU,CACZqP,KAAMA,EAAOA,EAAKrY,aAAUpG,EAC5Byf,WAAAA,EACAI,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOpB,GAAoBhhB,KAAKid,KAAKpU,QAASgJ,GA7BjB,SAACgP,GAC1B,IAAQ0B,EAAmB1B,EAAnB0B,eAIR,GAAInE,EAAK2D,WAAaQ,IAEtBnE,EAAK2D,SAAWQ,GAKZF,GAASE,IAAkBnE,EAAK0D,gBAApC,CAGSS,IACLnE,EAAK0D,gBAAiB,GAEtB1D,EAAKnB,KAAK3T,gBACV8U,EAAKnB,KAAK3T,eAAemU,UAAU,cAAe8E,GAMtD,IAAAC,EAA6CpE,EAAKnB,KAAKM,WAA/CkF,EAAeD,EAAfC,gBAAiBC,EAAeF,EAAfE,gBACnBpgB,EAAWigB,EAAiBE,EAAkBC,EACpDpgB,GAAYA,EAASue,EAVrB,CAWJ,GAEJ,GAAC,CAAAxgB,IAAA,QAAAC,MACD,WACIN,KAAK2iB,eACT,GAAC,CAAAtiB,IAAA,SAAAC,MACD,WACI,GAAoC,qBAAzBihB,qBAAX,CAEA,IAAAqB,EAA6B5iB,KAAKid,KAA1BjY,EAAK4d,EAAL5d,MAAOmT,EAASyK,EAATzK,UACT0K,EAAoB,CAAC,SAAU,SAAU,QAAQ3d,KAO/D,SAAiCpC,GAA0D,IAAAggB,EAAAhgB,EAAvDmf,SAAAA,OAAQ,IAAAa,EAAG,CAAC,EAACA,EAAwCC,GAAxCvgB,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAsC,CAAC,GAAjCyf,SAAUe,OAAY,IAAAD,EAAG,CAAC,EAACA,EAC9E,OAAO,SAAC5d,GAAI,OAAK8c,EAAS9c,KAAU6d,EAAa7d,EAAK,CAC1D,CAToE8d,CAAyBje,EAAOmT,IACxF0K,GACA7iB,KAAK2iB,eAJC,CAMd,GAAC,CAAAtiB,IAAA,UAAAC,MACD,WAAY,KAACuhB,CAAA,CA1DE,CAAS7E,ICF5B,IAAMkG,GAAoB,CACtBxc,OAAQ,CACJsW,QAAS6E,IAEbrb,IAAK,CACDwW,QAAS6B,IAEbvY,MAAO,CACH0W,QAASgB,IAEbzX,MAAO,CACHyW,QAASU,K,WChBjB,SAASyF,GAAeC,EAAMC,GAC1B,IAAK7e,MAAMC,QAAQ4e,GACf,OAAO,EACX,IAAMC,EAAaD,EAAKtiB,OACxB,GAAIuiB,IAAeF,EAAKriB,OACpB,OAAO,EACX,IAAK,IAAIgC,EAAI,EAAGA,EAAIugB,EAAYvgB,IAC5B,GAAIsgB,EAAKtgB,KAAOqgB,EAAKrgB,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASwgB,GAAelb,EAAeqQ,EAAYlO,GAC/C,IAAMxF,EAAQqD,EAAckV,WAC5B,OAAO9E,GAAwBzT,EAAO0T,OAAuBjW,IAAX+H,EAAuBA,EAASxF,EAAMwF,OAf5F,SAAoBnC,GAChB,IAAMQ,EAAU,CAAC,EAEjB,OADAR,EAAcyM,OAAOrR,SAAQ,SAACnD,EAAOD,GAAG,OAAMwI,EAAQxI,GAAOC,EAAMuK,KAAK,IACjEhC,CACX,CAWoG2a,CAAWnb,GAP/G,SAAqBA,GACjB,IAAMob,EAAW,CAAC,EAElB,OADApb,EAAcyM,OAAOrR,SAAQ,SAACnD,EAAOD,GAAG,OAAMojB,EAASpjB,GAAOC,EAAMoL,aAAa,IAC1E+X,CACX,CAG+H/X,CAAYrD,GAC3I,CCfA,IAAMqb,GAAwB,SAACC,GAAO,OAAe,IAAVA,CAAc,EACnDC,GAAwB,SAACC,GAAY,OAAKA,EAAe,GAAI,ECL7DC,GAAoB,CACtBpX,KAAM,SACNqX,UAAW,IACXC,QAAS,GACTC,UAAW,IAQTC,GAAsB,CACxBxX,KAAM,YACNyX,SAAU,IAMRC,GAAO,CACT1X,KAAM,YACN0X,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBD,SAAU,IAERE,GAAuB,SAACC,EAAQxhB,GAAoB,IAAhByhB,EAASzhB,EAATyhB,UACtC,OAAIA,EAAUxjB,OAAS,EACZmjB,GAEF5Y,EAAe9K,IAAI8jB,GACjBA,EAAS9Y,WAAW,SAxBS,CACxCkB,KAAM,SACNqX,UAAW,IACXC,QAAoB,IAsBaO,EAAU,GAtBnB,EAAIjhB,KAAKkhB,KAAK,KAAO,GAC7CP,UAAW,IAsBDH,GAEHM,EACX,E,8HChCA,SAASK,GAAmB3hB,GAAOA,EAAJ4hB,KAAmB5hB,EAAb6hB,MAA4B7hB,EAAb8hB,cAA8B9hB,EAAf+hB,gBAAiC/hB,EAAhBgiB,iBAAwBhiB,EAANiiB,OAAkBjiB,EAAVkiB,WAAuBliB,EAAXmiB,YAAiBniB,EAAJoiB,KAAapiB,EAAPqiB,QAA0B,IAAdhL,GAAUpE,EAAAA,GAAAA,GAAAjT,EAAAkT,IAC/J,QAAS9R,OAAOuS,KAAK0D,GAAYpZ,MACrC,CACA,SAASqkB,GAAmBjL,EAAY9Z,GACpC,OAAO8Z,EAAW9Z,IAAQ8Z,EAAoB,SAAKA,CACvD,CCVA,ICGI9W,GDHEgiB,IACO,EEDPC,GAAY,SAAChlB,GAAK,OAAe,OAAVA,CAAc,EAC3C,SAASilB,GAAiBhB,EAASzhB,EAAmC0iB,GAAe,IAA9CT,EAAMjiB,EAANiiB,OAAMU,EAAA3iB,EAAEkiB,WAAAA,OAAU,IAAAS,EAAG,OAAMA,EACxDC,EAAoBnB,EAAUoB,OAAOL,IACrC3kB,EAAQokB,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EAC1D,EACAW,EAAkB3kB,OAAS,EACjC,OAAQJ,QAA2B8B,IAAlB+iB,EAEXA,EADAE,EAAkB/kB,EAE5B,CDLA,SAASilB,KACLviB,QAAMZ,CACV,CASA,IAAMojB,GAAO,CACTxiB,IAAK,WAMD,YALYZ,IAARY,IACAwiB,GAAK9a,IAAIlI,GAAUnB,cAAgB7B,EAC7BgD,GAAUpB,UACV2B,YAAYC,OAEfA,EACX,EACA0H,IAAK,SAAC+a,GACFziB,GAAMyiB,EACNhiB,eAAe8hB,GACnB,G,iCExBEG,GAAoB,SAACxhB,GAAC,MAAK,0FAAc4G,KAAK5G,EAAE,ECDtD,IAAIyhB,GAAU3L,GACV4L,GAAY5L,GCAhB,IAAM6L,GAAoB,SAAC3hB,GAAC,MAAK,0CAA+B4G,KAAK5G,EAAE,ECUjE4hB,GAEN,0FACA,SAASC,GAAiBvd,GACtB,IAAMwd,EAAQF,GAAsBG,KAAKzd,GACzC,IAAKwd,EACD,MAAO,CAAC,GACZ,IAAAE,GAAAC,EAAAA,GAAAA,GAAqCH,EAAK,GAAjCI,EAAMF,EAAA,GAAEG,EAAMH,EAAA,GAAEI,EAAQJ,EAAA,GACjC,MAAO,CAAC,KAADzhB,OAAiB,OAAX2hB,QAA8B,IAAXA,EAAoBA,EAASC,GAAUC,EAC3E,CAEA,SAASC,GAAiB/d,EAAS2O,GAAoB,IAAXqP,EAAKrkB,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAChDyjB,GAAUY,GAFG,EAEgB,yDAAF/hB,OAA2D+D,EAAO,yDAC7F,IAAAie,EAA0BV,GAAiBvd,GAAQke,GAAAP,EAAAA,GAAAA,GAAAM,EAAA,GAA5C5a,EAAK6a,EAAA,GAAEJ,EAAQI,EAAA,GAEtB,GAAK7a,EAAL,CAGA,IAAM+N,EAAW/Q,OAAO8d,iBAAiBxP,GAASyP,iBAAiB/a,GACnE,GAAI+N,EAAU,CACV,IAAMiN,EAAUjN,EAASzN,OACzB,OAAO0Z,GAAkBgB,GAAWna,WAAWma,GAAWA,CAC9D,CACA,OAAO7a,EAAmBsa,GACpBC,GAAiBD,EAAUnP,EAASqP,EAAQ,GAC5CF,CATI,CAUd,CCnCA,IAAMQ,GAAiB,IAAIhnB,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEinB,GAAgB,SAAC7iB,GAAC,OAAKA,IAAMsI,IAAUtI,IAAMuJ,EAAE,EAC/CuZ,GAAmB,SAACC,EAAQC,GAAG,OAAKxa,WAAWua,EAAO/a,MAAM,MAAMgb,GAAK,EACvEC,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAK7kB,GAAoB,IAAhB6J,EAAS7J,EAAT6J,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMib,EAAWjb,EAAU0Z,MAAM,mLACjC,GAAIuB,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAAS3a,EAAU0Z,MAAM,iLAC/B,OAAIiB,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGnB,CAAC,EACKI,GAAgB,IAAI1nB,IAAI,CAAC,IAAK,IAAK,MACnC2nB,GAAgCzc,EAAmBsa,QAAO,SAACtlB,GAAG,OAAMwnB,GAAcrnB,IAAIH,EAAI,IAChG,SAAS0nB,GAAgC1f,GACrC,IAAM2f,EAAoB,GAQ1B,OAPAF,GAA8BrkB,SAAQ,SAACpD,GACnC,IAAMC,EAAQ+H,EAAc4f,SAAS5nB,QACvBoC,IAAVnC,IACA0nB,EAAkBtnB,KAAK,CAACL,EAAKC,EAAMuK,QACnCvK,EAAMyK,IAAI1K,EAAImL,WAAW,SAAW,EAAI,GAEhD,IACOwc,CACX,CACA,IAAME,GAAmB,CAErBnZ,MAAO,SAAA5E,EAAAge,GAAA,IAAGvc,EAACzB,EAADyB,EAACwc,EAAAD,EAAMvY,YAAAA,OAAW,IAAAwY,EAAG,IAAGA,EAAAC,EAAAF,EAAEzY,aAAAA,OAAY,IAAA2Y,EAAG,IAAGA,EAAA,OAAOzc,EAAErI,IAAMqI,EAAEpI,IAAMuJ,WAAW6C,GAAe7C,WAAW2C,EAAa,EAC/HT,OAAQ,SAAAqZ,EAAAC,GAAA,IAAG1c,EAACyc,EAADzc,EAAC2c,EAAAD,EAAM9Y,WAAAA,OAAU,IAAA+Y,EAAG,IAAGA,EAAAC,EAAAF,EAAE5Y,cAAAA,OAAa,IAAA8Y,EAAG,IAAGA,EAAA,OAAO5c,EAAEtI,IAAMsI,EAAErI,IAAMuJ,WAAW0C,GAAc1C,WAAW4C,EAAc,EAChIP,IAAK,SAACuY,EAAKe,GAAA,IAAItZ,EAAGsZ,EAAHtZ,IAAG,OAAOrC,WAAWqC,EAAI,EACxCG,KAAM,SAACoY,EAAKgB,GAAA,IAAIpZ,EAAIoZ,EAAJpZ,KAAI,OAAOxC,WAAWwC,EAAK,EAC3CD,OAAQ,SAAAsZ,EAAAC,GAAA,IAAGhd,EAAC+c,EAAD/c,EAAOuD,EAAGyZ,EAAHzZ,IAAG,OAAOrC,WAAWqC,IAAQvD,EAAEtI,IAAMsI,EAAErI,IAAI,EAC7D6L,MAAO,SAAAyZ,EAAAC,GAAA,IAAGnd,EAACkd,EAADld,EAAO2D,EAAIwZ,EAAJxZ,KAAI,OAAOxC,WAAWwC,IAAS3D,EAAErI,IAAMqI,EAAEpI,IAAI,EAE9DoI,EAAG4b,GAAuB,EAAG,IAC7B3b,EAAG2b,GAAuB,EAAG,KAGjCU,GAAiBrX,WAAaqX,GAAiBtc,EAC/Csc,GAAiBpX,WAAaoX,GAAiBrc,EC3D/C,IAAMmd,GAAgB,SAACzkB,GAAC,OAAK,SAACmI,GAAI,OAAKA,EAAKvB,KAAK5G,EAAE,GCK7C0kB,GAAsB,CAACpc,GAAQiB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT5C,KAAM,SAAC5G,GAAC,MAAW,SAANA,CAAY,EACzBuI,MAAO,SAACvI,GAAC,OAAKA,CAAC,IDOb2kB,GAAyB,SAAC3kB,GAAC,OAAK0kB,GAAoBE,KAAKH,GAAczkB,GAAG,EET1E6kB,GAAY,IAAIjpB,IAClBkpB,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACL,GAAID,GAAqB,CACrB,IAAME,EAAqBhlB,MAAM0gB,KAAKkE,IAAWzD,QAAO,SAAC8D,GAAQ,OAAKA,EAASC,gBAAgB,IACzFC,EAAoB,IAAIxpB,IAAIqpB,EAAmBI,KAAI,SAACH,GAAQ,OAAKA,EAASjS,OAAO,KACjFqS,EAAsB,IAAIjf,IAKhC+e,EAAkBlmB,SAAQ,SAAC+T,GACGuQ,GAAgCvQ,GACnCzW,SAEvB8oB,EAAoB9e,IAAIyM,EAASuQ,GAAgCvQ,IACjEA,EAAQnO,SACZ,IAEAmgB,EAAmB/lB,SAAQ,SAACgmB,GAAQ,OAAKA,EAASK,qBAAqB,IAEvEH,EAAkBlmB,SAAQ,SAAC+T,GACvBA,EAAQnO,QACZ,IAEAmgB,EAAmB/lB,SAAQ,SAACgmB,GAAQ,OAAKA,EAASM,iBAAiB,IAEnEP,EAAmB/lB,SAAQ,SAACgmB,QACUhnB,IAA9BgnB,EAASO,kBACT9gB,OAAO+gB,SAAS,EAAGR,EAASO,iBAEpC,GACJ,CACAV,IAAsB,EACtBD,IAAc,EACdD,GAAU3lB,SAAQ,SAACgmB,GAAQ,OAAKA,EAASS,UAAU,IACnDd,GAAUpoB,OACd,CACA,SAASmpB,KACLf,GAAU3lB,SAAQ,SAACgmB,GACfA,EAASW,gBACLX,EAASC,mBACTJ,IAAsB,EAE9B,GACJ,CAIC,IACKe,GAAgB,WAClB,SAAAA,EAAYC,EAAqBC,EAAYplB,EAAMqlB,EAAahT,GAA0B,IAAjBiT,EAAOjoB,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,IAAQzC,EAAAA,EAAAA,GAAA,KAAAsqB,GAKpFrqB,KAAK0qB,YAAa,EAMlB1qB,KAAKyqB,SAAU,EAKfzqB,KAAK0pB,kBAAmB,EAKxB1pB,KAAKqpB,aAAc,EACnBrpB,KAAKsqB,qBAAmBK,EAAAA,GAAAA,GAAOL,GAC/BtqB,KAAKuqB,WAAaA,EAClBvqB,KAAKmF,KAAOA,EACZnF,KAAKwqB,YAAcA,EACnBxqB,KAAKwX,QAAUA,EACfxX,KAAKyqB,QAAUA,CACnB,CAsEC,OAtEArqB,EAAAA,EAAAA,GAAAiqB,EAAA,EAAAhqB,IAAA,kBAAAC,MACD,WACIN,KAAKqpB,aAAc,EACfrpB,KAAKyqB,SACLrB,GAAU3oB,IAAIT,MACTqpB,KACDA,IAAc,EACd7O,GAAAA,KAAW2P,IACX3P,GAAAA,iBAAuB+O,OAI3BvpB,KAAKoqB,gBACLpqB,KAAKkqB,WAEb,GAAC,CAAA7pB,IAAA,gBAAAC,MACD,WAMI,IALA,IAAQgqB,EAAoDtqB,KAApDsqB,oBAAqBnlB,EAA+BnF,KAA/BmF,KAAMqS,EAAyBxX,KAAzBwX,QAASgT,EAAgBxqB,KAAhBwqB,YAKnCznB,EAAI,EAAGA,EAAIunB,EAAoBvpB,OAAQgC,IAC5C,GAA+B,OAA3BunB,EAAoBvnB,GAIpB,GAAU,IAANA,EAAS,CACT,IAAM6nB,EAA+B,OAAhBJ,QAAwC,IAAhBA,OAAyB,EAASA,EAAY3f,MACrF2a,EAAgB8E,EAAoBA,EAAoBvpB,OAAS,GACvE,QAAqB0B,IAAjBmoB,EACAN,EAAoB,GAAKM,OAExB,GAAIpT,GAAWrS,EAAM,CACtB,IAAM0lB,EAAcrT,EAAQsT,UAAU3lB,EAAMqgB,QACxB/iB,IAAhBooB,GAA6C,OAAhBA,IAC7BP,EAAoB,GAAKO,EAEjC,MAC+BpoB,IAA3B6nB,EAAoB,KACpBA,EAAoB,GAAK9E,GAEzBgF,QAAgC/nB,IAAjBmoB,GACfJ,EAAYzf,IAAIuf,EAAoB,GAE5C,MAEIA,EAAoBvnB,GAAKunB,EAAoBvnB,EAAI,EAIjE,GAAC,CAAA1C,IAAA,mBAAAC,MACD,WAAqB,GAAC,CAAAD,IAAA,sBAAAC,MACtB,WAAwB,GAAC,CAAAD,IAAA,kBAAAC,MACzB,WAAoB,GAAC,CAAAD,IAAA,kBAAAC,MACrB,WAAoB,GAAC,CAAAD,IAAA,WAAAC,MACrB,WACIN,KAAK0qB,YAAa,EAClB1qB,KAAKuqB,WAAWvqB,KAAKsqB,oBAAqBtqB,KAAKwlB,eAC/C4D,GAAUtoB,OAAOd,KACrB,GAAC,CAAAK,IAAA,SAAAC,MACD,WACSN,KAAK0qB,aACN1qB,KAAKqpB,aAAc,EACnBD,GAAUtoB,OAAOd,MAEzB,GAAC,CAAAK,IAAA,SAAAC,MACD,WACSN,KAAK0qB,YACN1qB,KAAK+qB,iBACb,KAACV,CAAA,CAnGiB,G,sBChDhBW,GAAgB,SAACte,EAAMue,GAAQ,OAAK,SAAC1mB,GACvC,OAAOc,QAASmI,GAASjJ,IAAMgJ,GAAiBpC,KAAK5G,IAAMA,EAAEiH,WAAWkB,IACnEue,GAAY/mB,OAAOC,UAAUC,eAAeC,KAAKE,EAAG0mB,GAC7D,CAAC,EACKC,GAAa,SAACC,EAAOC,EAAOC,GAAK,OAAK,SAAC9mB,GAAM,IAAAzB,EAC/C,IAAK0K,GAASjJ,GACV,OAAOA,EACX,IAAA+mB,EAAyB/mB,EAAE8hB,MAAMhZ,IAAWke,GAAA/E,EAAAA,GAAAA,GAAA8E,EAAA,GAArCrP,EAACsP,EAAA,GAAErP,EAACqP,EAAA,GAAEC,EAACD,EAAA,GAAEve,EAAKue,EAAA,GACrB,OAAAzoB,EAAA,IAAA2oB,EAAAA,GAAAA,GAAA3oB,EACKqoB,EAAQpe,WAAWkP,KAAEwP,EAAAA,GAAAA,GAAA3oB,EACrBsoB,EAAQre,WAAWmP,KAAEuP,EAAAA,GAAAA,GAAA3oB,EACrBuoB,EAAQte,WAAWye,KAAEC,EAAAA,GAAAA,GAAA3oB,EAAA,aACLL,IAAVuK,EAAsBD,WAAWC,GAAS,GAAClK,CAE1D,CAAC,ECdK4oB,IAAO/jB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNkF,IAAM,IACTF,UAAW,SAACpI,GAAC,OAAKjB,KAAK8J,MAHN,SAAC7I,GAAC,OAAKqI,GAAM,EAAG,IAAKrI,EAAE,CAGXonB,CAAapnB,GAAG,IAE3CqnB,GAAO,CACTzgB,KAAM6f,GAAc,MAAO,OAC3Ble,MAAOoe,GAAW,MAAO,QAAS,QAClCve,UAAW,SAAA7J,GAAA,IAAG+oB,EAAG/oB,EAAH+oB,IAAKC,EAAKhpB,EAALgpB,MAAOC,EAAIjpB,EAAJipB,KAAIC,EAAAlpB,EAAEkK,MAAOif,OAAO,IAAAD,EAAG,EAACA,EAAA,MAAO,QACrDN,GAAQ/e,UAAUkf,GAClB,KACAH,GAAQ/e,UAAUmf,GAClB,KACAJ,GAAQ/e,UAAUof,GAClB,KACA5e,GAASH,GAAML,UAAUsf,IACzB,GAAG,GCYX,IAAMC,GAAM,CACR/gB,KAAM6f,GAAc,KACpBle,MAhCJ,SAAkBvI,GACd,IAAI4nB,EAAI,GACJC,EAAI,GACJlQ,EAAI,GACJD,EAAI,GAmBR,OAjBI1X,EAAExD,OAAS,GACXorB,EAAI5nB,EAAEiU,UAAU,EAAG,GACnB4T,EAAI7nB,EAAEiU,UAAU,EAAG,GACnB0D,EAAI3X,EAAEiU,UAAU,EAAG,GACnByD,EAAI1X,EAAEiU,UAAU,EAAG,KAInB2T,EAAI5nB,EAAEiU,UAAU,EAAG,GACnB4T,EAAI7nB,EAAEiU,UAAU,EAAG,GACnB0D,EAAI3X,EAAEiU,UAAU,EAAG,GACnByD,EAAI1X,EAAEiU,UAAU,EAAG,GACnB2T,GAAKA,EACLC,GAAKA,EACLlQ,GAAKA,EACLD,GAAKA,GAEF,CACH4P,IAAKQ,SAASF,EAAG,IACjBL,MAAOO,SAASD,EAAG,IACnBL,KAAMM,SAASnQ,EAAG,IAClBlP,MAAOiP,EAAIoQ,SAASpQ,EAAG,IAAM,IAAM,EAE3C,EAIItP,UAAWif,GAAKjf,WC/Bd2f,GAAO,CACTnhB,KAAM6f,GAAc,MAAO,OAC3Ble,MAAOoe,GAAW,MAAO,aAAc,aACvCve,UAAW,SAAA7J,GAAwD,IAArDypB,EAAGzpB,EAAHypB,IAAKC,EAAU1pB,EAAV0pB,WAAYC,EAAS3pB,EAAT2pB,UAAST,EAAAlpB,EAAEkK,MAAOif,OAAO,IAAAD,EAAG,EAACA,EACxD,MAAQ,QACJ1oB,KAAK8J,MAAMmf,GACX,KACA1e,GAAQlB,UAAUQ,GAASqf,IAC3B,KACA3e,GAAQlB,UAAUQ,GAASsf,IAC3B,KACAtf,GAASH,GAAML,UAAUsf,IACzB,GACR,GCbES,GAAQ,CACVvhB,KAAM,SAAC5G,GAAC,OAAKqnB,GAAKzgB,KAAK5G,IAAM2nB,GAAI/gB,KAAK5G,IAAM+nB,GAAKnhB,KAAK5G,EAAE,EACxDuI,MAAO,SAACvI,GACJ,OAAIqnB,GAAKzgB,KAAK5G,GACHqnB,GAAK9e,MAAMvI,GAEb+nB,GAAKnhB,KAAK5G,GACR+nB,GAAKxf,MAAMvI,GAGX2nB,GAAIpf,MAAMvI,EAEzB,EACAoI,UAAW,SAACpI,GACR,OAAOiJ,GAASjJ,GACVA,EACAA,EAAEH,eAAe,OACbwnB,GAAKjf,UAAUpI,GACf+nB,GAAK3f,UAAUpI,EAC7B,GCbJ,IAAMooB,GAAe,SACfC,GAAc,QAKdC,GAAe,kjCACrB,SAASC,GAAoBxsB,GACzB,IAAMysB,EAAgBzsB,EAAM0sB,WACtBlY,EAAS,GACTmY,EAAU,CACZP,MAAO,GACP7f,OAAQ,GACRqgB,IAAK,IAEHC,EAAQ,GACVpqB,EAAI,EAoBFwJ,EAnBYwgB,EAAcrtB,QAAQmtB,IAAc,SAACO,GAiBnD,OAhBIV,GAAMvhB,KAAKiiB,IACXH,EAAQP,MAAMhsB,KAAKqC,GACnBoqB,EAAMzsB,KAAKksB,IACX9X,EAAOpU,KAAKgsB,GAAM5f,MAAMsgB,KAEnBA,EAAY5hB,WApBF,SAqBfyhB,EAAQC,IAAIxsB,KAAKqC,GACjBoqB,EAAMzsB,KAvBA,OAwBNoU,EAAOpU,KAAK0sB,KAGZH,EAAQpgB,OAAOnM,KAAKqC,GACpBoqB,EAAMzsB,KAAKisB,IACX7X,EAAOpU,KAAKqM,WAAWqgB,OAEzBrqB,EA7BU,KA+BhB,IACwBwJ,MAhCR,OAiChB,MAAO,CAAEuI,OAAAA,EAAQvI,MAAAA,EAAO0gB,QAAAA,EAASE,MAAAA,EACrC,CACA,SAASE,GAAkB9oB,GACvB,OAAOuoB,GAAoBvoB,GAAGuQ,MAClC,CACA,SAASwY,GAAkBla,GACvB,IAAAma,EAAyBT,GAAoB1Z,GAArC7G,EAAKghB,EAALhhB,MAAO4gB,EAAKI,EAALJ,MACTK,EAAcjhB,EAAMxL,OAC1B,OAAO,SAACwD,GAEJ,IADA,IAAIkpB,EAAS,GACJ1qB,EAAI,EAAGA,EAAIyqB,EAAazqB,IAE7B,GADA0qB,GAAUlhB,EAAMxJ,QACHN,IAAT8B,EAAExB,GAAkB,CACpB,IAAM2J,EAAOygB,EAAMpqB,GAEf0qB,GADA/gB,IAASigB,GACCxf,GAAS5I,EAAExB,IAEhB2J,IAASkgB,GACJF,GAAM/f,UAAUpI,EAAExB,IAGlBwB,EAAExB,EAEpB,CAEJ,OAAO0qB,CACX,CACJ,CACA,IAAMC,GAAuB,SAACnpB,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAMopB,GAAU,CACZxiB,KAhFJ,SAAc5G,GACV,IAAIkQ,EAAImZ,EACR,OAAQC,MAAMtpB,IACViJ,GAASjJ,MACwB,QAA9BkQ,EAAKlQ,EAAE8hB,MAAMhZ,WAAgC,IAAPoH,OAAgB,EAASA,EAAG1T,SAAW,KAC3C,QAA9B6sB,EAAKrpB,EAAE8hB,MAAM/Y,WAAgC,IAAPsgB,OAAgB,EAASA,EAAG7sB,SAAW,GAChF,CACZ,EA0EI+L,MAAOugB,GACPC,kBAAAA,GACAQ,kBATJ,SAA2BvpB,GACvB,IAAMwpB,EAASV,GAAkB9oB,GAEjC,OADoB+oB,GAAkB/oB,EAC/BypB,CAAYD,EAAOnE,IAAI8D,IAClC,GC3EMO,GAAc,IAAI9tB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS+tB,GAAmB3pB,GACxB,IAAA4pB,EAAsB5pB,EAAE6pB,MAAM,GAAI,GAAG7hB,MAAM,KAAI8hB,GAAA7H,EAAAA,GAAAA,GAAA2H,EAAA,GAAxChpB,EAAIkpB,EAAA,GAAE/tB,EAAK+tB,EAAA,GAClB,GAAa,gBAATlpB,EACA,OAAOZ,EACX,IAAAzB,EAAiBxC,EAAM+lB,MAAMhZ,KAAe,GAArCR,GAAuC2Z,EAAAA,GAAAA,GAAA1jB,EAAA,GAAjC,GACb,IAAK+J,EACD,OAAOtI,EACX,IAAMmJ,EAAOpN,EAAMZ,QAAQmN,EAAQ,IAC/ByhB,EAAeL,GAAYztB,IAAI2E,GAAQ,EAAI,EAG/C,OAFI0H,IAAWvM,IACXguB,GAAgB,KACbnpB,EAAO,IAAMmpB,EAAe5gB,EAAO,GAC9C,CACA,IAAM6gB,GAAgB,sLAChB5I,IAAMhe,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLgmB,IAAO,IACVG,kBAAmB,SAACvpB,GAChB,IAAMiqB,EAAYjqB,EAAE8hB,MAAMkI,IAC1B,OAAOC,EAAYA,EAAU5E,IAAIsE,IAAoBjoB,KAAK,KAAO1B,CACrE,ICnBEkqB,IAAiB9mB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBwG,IAAgB,IAEnBue,MAAAA,GACAgC,gBAAiBhC,GACjBiC,aAAcjC,GACdkC,KAAMlC,GACNmC,OAAQnC,GAERoC,YAAapC,GACbqC,eAAgBrC,GAChBsC,iBAAkBtC,GAClBuC,kBAAmBvC,GACnBwC,gBAAiBxC,GACjB/G,OAAAA,GACAwJ,aAAcxJ,KAKZyJ,GAAsB,SAAC/uB,GAAG,OAAKouB,GAAkBpuB,EAAI,ECvB3D,SAASytB,GAAkBztB,EAAKC,GAC5B,IAAI+uB,EAAmBD,GAAoB/uB,GAI3C,OAHIgvB,IAAqB1J,KACrB0J,EAAmB1B,IAEhB0B,EAAiBvB,kBAClBuB,EAAiBvB,kBAAkBxtB,QACnCmC,CACV,CCNqF,IAE/E6sB,GAAoB,SAAAC,IAAA3R,EAAAA,GAAAA,GAAA0R,EAAAC,GAAA,IAAA1R,GAAAC,EAAAA,GAAAA,GAAAwR,GACtB,SAAAA,EAAYhF,EAAqBC,EAAYplB,EAAMqlB,GAAa,OAAAzqB,EAAAA,EAAAA,GAAA,KAAAuvB,GAAAzR,EAAAxZ,KAAA,KACtDimB,EAAqBC,EAAYplB,EAAMqlB,EAA6B,OAAhBA,QAAwC,IAAhBA,OAAyB,EAASA,EAAYgF,OAAO,EAC3I,CAuGC,OAvGApvB,EAAAA,EAAAA,GAAAkvB,EAAA,EAAAjvB,IAAA,gBAAAC,MACD,WACI,IAAQgqB,EAAuCtqB,KAAvCsqB,oBAAqB9S,EAAkBxX,KAAlBwX,QAASrS,EAASnF,KAATmF,KACtC,GAAKqS,EAAQ3O,QAAb,EAEA4mB,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,GAAAJ,EAAAnrB,WAAA,sBAAAE,KAAA,MAIA,IAAK,IAAItB,EAAI,EAAGA,EAAIunB,EAAoBvpB,OAAQgC,IAAK,CACjD,IAAM4sB,EAAWrF,EAAoBvnB,GACrC,GAAwB,kBAAb4sB,GAAyBtjB,EAAmBsjB,GAAW,CAC9D,IAAM1V,EAAW2M,GAAiB+I,EAAUnY,EAAQ3O,cACnCpG,IAAbwX,IACAqQ,EAAoBvnB,GAAKkX,EAEjC,CACJ,CAOA,IAAKkN,GAAe3mB,IAAI2E,IAAwC,IAA/BmlB,EAAoBvpB,OACjD,OAAOf,KAAK4vB,uBAEhB,IAAAC,GAAArJ,EAAAA,GAAAA,GAAyB8D,EAAmB,GAArCtV,EAAM6a,EAAA,GAAE1c,EAAM0c,EAAA,GACfC,EAAa5G,GAAuBlU,GACpC+a,EAAa7G,GAAuB/V,GAI1C,GAAI2c,IAAeC,EAMnB,GAAI3I,GAAc0I,IAAe1I,GAAc2I,GAC3C,IAAK,IAAIhtB,EAAI,EAAGA,EAAIunB,EAAoBvpB,OAAQgC,IAAK,CACjD,IAAMzC,EAAQgqB,EAAoBvnB,GACb,kBAAVzC,IACPgqB,EAAoBvnB,GAAKgK,WAAWzM,GAE5C,MAMAN,KAAK0pB,kBAAmB,CA/ClB,CAiDd,GAAC,CAAArpB,IAAA,uBAAAC,MACD,WAGI,IAFA,IChEQA,EDgEAgqB,EAA8BtqB,KAA9BsqB,oBAAqBnlB,EAASnF,KAATmF,KACvB6qB,EAAsB,GACnBjtB,EAAI,EAAGA,EAAIunB,EAAoBvpB,OAAQgC,KCjE/B,kBADTzC,EDmEOgqB,EAAoBvnB,ICjElB,IAAVzC,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,GAAiBylB,GAAkBzlB,KD+DtD0vB,EAAoBtvB,KAAKqC,GAG7BitB,EAAoBjvB,QEjEhC,SAAqCupB,EAAqB0F,EAAqB7qB,GAG3E,IAFA,IAAIpC,EAAI,EACJktB,OAAqBxtB,EAClBM,EAAIunB,EAAoBvpB,SAAWkvB,GACA,kBAA3B3F,EAAoBvnB,IACA,SAA3BunB,EAAoBvnB,IACO,MAA3BunB,EAAoBvnB,KACpBktB,EAAqB3F,EAAoBvnB,IAE7CA,IAEJ,GAAIktB,GAAsB9qB,EAAM,KACe+qB,EADfC,GAAAC,EAAAA,GAAAA,GACJJ,GAAmB,IAA3C,IAAAG,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MACIjG,EADgB4F,EAAA5vB,OACiBwtB,GAAkB3oB,EAAM8qB,EAC5D,OAAAO,GAAAL,EAAAtV,EAAA2V,EAAA,SAAAL,EAAAM,GAAA,CACL,CACJ,CFkDYC,CAA4BpG,EAAqB0F,EAAqB7qB,EAE9E,GAAC,CAAA9E,IAAA,sBAAAC,MACD,WACI,IAAQkX,EAAuCxX,KAAvCwX,QAAS8S,EAA8BtqB,KAA9BsqB,oBAAqBnlB,EAASnF,KAATmF,KACtC,GAAKqS,EAAQ3O,QAAb,CAEa,WAAT1D,IACAnF,KAAKgqB,iBAAmB9gB,OAAOynB,aAEnC3wB,KAAK4wB,eAAiB1I,GAAiB/iB,GAAMqS,EAAQqZ,qBAAsB3nB,OAAO8d,iBAAiBxP,EAAQ3O,UAC3GyhB,EAAoB,GAAKtqB,KAAK4wB,eAE9B,IAAME,EAAkBxG,EAAoBA,EAAoBvpB,OAAS,QACjD0B,IAApBquB,GACAtZ,EAAQyQ,SAAS9iB,EAAM2rB,GAAiBC,KAAKD,GAAiB,EATxD,CAWd,GAAC,CAAAzwB,IAAA,kBAAAC,MACD,WACI,IAAImU,EACI+C,EAAuCxX,KAAvCwX,QAASrS,EAA8BnF,KAA9BmF,KAAMmlB,EAAwBtqB,KAAxBsqB,oBACvB,GAAK9S,EAAQ3O,QAAb,CAEA,IAAMvI,EAAQkX,EAAQyQ,SAAS9iB,GAC/B7E,GAASA,EAAMywB,KAAK/wB,KAAK4wB,gBAAgB,GACzC,IAAMI,EAAqB1G,EAAoBvpB,OAAS,EAClDykB,EAAgB8E,EAAoB0G,GAC1C1G,EAAoB0G,GAAsB9I,GAAiB/iB,GAAMqS,EAAQqZ,qBAAsB3nB,OAAO8d,iBAAiBxP,EAAQ3O,UACzG,OAAlB2c,IACAxlB,KAAKwlB,cAAgBA,IAGa,QAAjC/Q,EAAKzU,KAAKgoB,yBAAsC,IAAPvT,OAAgB,EAASA,EAAG1T,SACtEf,KAAKgoB,kBAAkBvkB,SAAQ,SAAAX,GAA+C,IAAAqH,GAAAqc,EAAAA,GAAAA,GAAA1jB,EAAA,GAA7CmuB,EAAkB9mB,EAAA,GAAE+mB,EAAmB/mB,EAAA,GACpEqN,EACKyQ,SAASgJ,GACTlmB,IAAImmB,EACb,IAEJlxB,KAAK4vB,sBAjBK,CAkBd,KAACN,CAAA,CA1GqB,CAASjF,IGGnC,IAAM8G,GAAe,SAAC7wB,EAAO6E,GAEzB,MAAa,WAATA,MAKiB,kBAAV7E,IAAsBkE,MAAMC,QAAQnE,OAE1B,kBAAVA,IACNqtB,GAAQxiB,KAAK7K,IAAoB,MAAVA,GACvBA,EAAMkL,WAAW,SAK1B,E,uECtBM4lB,GAAa,WACf,SAAAA,EAAAtuB,GAA8H,IAAAuuB,EAAAvuB,EAAhHwuB,SAAAA,OAAQ,IAAAD,GAAOA,EAAAE,EAAAzuB,EAAE6hB,MAAAA,OAAK,IAAA4M,EAAG,EAACA,EAAAC,EAAA1uB,EAAE4J,KAAAA,OAAI,IAAA8kB,EAAG,YAAWA,EAAAC,EAAA3uB,EAAEiiB,OAAAA,OAAM,IAAA0M,EAAG,EAACA,EAAAC,EAAA5uB,EAAEmiB,YAAAA,OAAW,IAAAyM,EAAG,EAACA,EAAAjM,EAAA3iB,EAAEkiB,WAAAA,OAAU,IAAAS,EAAG,OAAMA,EAAK5T,GAAOkE,EAAAA,GAAAA,GAAAjT,EAAAkT,KAAAjW,EAAAA,EAAAA,GAAA,KAAAqxB,GAEtHpxB,KAAK2xB,WAAY,EACjB3xB,KAAK6R,SAAOlK,EAAAA,EAAAA,GAAA,CACR2pB,SAAAA,EACA3M,MAAAA,EACAjY,KAAAA,EACAqY,OAAAA,EACAE,YAAAA,EACAD,WAAAA,GACGnT,GAEP7R,KAAK4xB,uBACT,CA0DC,OAzDDxxB,EAAAA,EAAAA,GAAAgxB,EAAA,EAAA/wB,IAAA,WAAAwK,IAKA,WAGI,OAFK7K,KAAK6xB,YdyBd1H,KACAZ,McxBWvpB,KAAK6xB,SAChB,GACA,CAAAxxB,IAAA,sBAAAC,MAKA,SAAoBikB,EAAWiB,GAC3B,IAAAsM,EAA8D9xB,KAAK6R,QAA3D1M,EAAI2sB,EAAJ3sB,KAAMuH,EAAIolB,EAAJplB,KAAM+W,EAAQqO,EAARrO,SAAUkB,EAAKmN,EAALnN,MAAO4F,EAAUuH,EAAVvH,WAAYwH,EAAQD,EAARC,SAKjD,IC7BR,SAAoBxN,EAAWpf,EAAMuH,EAAM+W,GAMvC,IAAMuO,EAAiBzN,EAAU,GACjC,GAAuB,OAAnByN,EACA,OAAO,EACX,IAAMC,EAAiB1N,EAAUA,EAAUxjB,OAAS,GAC9CmxB,EAAqBf,GAAaa,EAAgB7sB,GAClDgtB,EAAqBhB,GAAac,EAAgB9sB,GAGxD,OAFA6gB,GAAQkM,IAAuBC,EAAoB,6BAAFrtB,OAA+BK,EAAI,WAAAL,OAAUktB,EAAc,UAAAltB,OAASmtB,EAAc,OAAAntB,OAAMktB,EAAc,+DAAAltB,OAA8DktB,EAAc,8BAAAltB,OAA6BmtB,EAAc,kCAEzQC,IAAuBC,KAvBhC,SAA6B5N,GACzB,IAAM1b,EAAU0b,EAAU,GAC1B,GAAyB,IAArBA,EAAUxjB,OACV,OAAO,EACX,IAAK,IAAIgC,EAAI,EAAGA,EAAIwhB,EAAUxjB,OAAQgC,IAClC,GAAIwhB,EAAUxhB,KAAO8F,EACjB,OAAO,CAEnB,CAkBWupB,CAAoB7N,IAAwB,WAAT7X,GAAqB+W,EACnE,CDWa4O,CAAW9N,EAAWpf,EAAMuH,EAAM+W,GAAW,CAE9C,GAAI4B,KAAkCV,EAIlC,OAHa,OAAboN,QAAkC,IAAbA,GAA+BA,EAASxM,GAAiBhB,EAAWvkB,KAAK6R,QAAS2T,IACxF,OAAf+E,QAAsC,IAAfA,GAAiCA,SACxDvqB,KAAKsyB,yBAKLtyB,KAAK6R,QAAQsS,SAAW,CAEhC,CACA,IAAMoO,EAAoBvyB,KAAKwyB,aAAajO,EAAWiB,IAC7B,IAAtB+M,IAEJvyB,KAAK6xB,WAASlqB,EAAAA,EAAAA,GAAA,CACV4c,UAAAA,EACAiB,cAAAA,GACG+M,GAEPvyB,KAAKyyB,iBACT,GAAC,CAAApyB,IAAA,iBAAAC,MACD,WAAmB,GACnB,CAAAD,IAAA,OAAAC,MAKA,SAAKoyB,EAASC,GACV,OAAO3yB,KAAK4yB,uBAAuBC,KAAKH,EAASC,EACrD,GAAC,CAAAtyB,IAAA,wBAAAC,MACD,WAAwB,IAAA2d,EAAA,KACpBje,KAAK4yB,uBAAyB,IAAIE,SAAQ,SAACJ,GACvCzU,EAAKqU,uBAAyBI,CAClC,GACJ,KAACtB,CAAA,CAxEc,GECnB,SAAS2B,GAAkBtP,EAAUuP,GACjC,OAAOA,EAAgBvP,GAAY,IAAOuP,GAAiB,CAC/D,CCLA,SAASC,GAAsBC,EAAcC,EAAGtqB,GAC5C,IAAMuqB,EAAQ9vB,KAAKC,IAAI4vB,EAFI,EAEwB,GACnD,OAAOJ,GAAkBlqB,EAAUqqB,EAAaE,GAAQD,EAAIC,EAChE,CCFA,IAAMC,GAAU,KAKhB,SAASC,GAAUxwB,GAA6D,IACxEywB,EACAC,EAFwEC,EAAA3wB,EAA1DqhB,SAAAA,OAAQ,IAAAsP,EAAG,IAAGA,EAAAC,EAAA5wB,EAAE6wB,OAAAA,OAAM,IAAAD,EAAG,IAAIA,EAAAE,EAAA9wB,EAAE2gB,SAAAA,OAAQ,IAAAmQ,EAAG,EAACA,EAAAC,EAAA/wB,EAAEgxB,KAAAA,OAAI,IAAAD,EAAG,EAACA,EAGvE7N,GAAQ7B,GAAYT,GANJ,IAMwC,8CACxD,IAAIqQ,EAAe,EAAIJ,EAIvBI,EAAennB,GAVA,IACA,EAS8BmnB,GAC7C5P,EAAWvX,GAbK,IACA,GAY2BgX,GAAsBO,IAC7D4P,EAAe,GAIfR,EAAW,SAACS,GACR,IAAMC,EAAmBD,EAAeD,EAClCvyB,EAAQyyB,EAAmB9P,EAC3BlI,EAAIgY,EAAmBxQ,EACvBvH,EAAIgY,GAAgBF,EAAcD,GAClCvI,EAAIloB,KAAK6wB,KAAK3yB,GACpB,OAAO6xB,GAAWpX,EAAIC,EAAKsP,CAC/B,EACAgI,EAAa,SAACQ,GACV,IACMxyB,EADmBwyB,EAAeD,EACP5P,EAC3BiQ,EAAI5yB,EAAQiiB,EAAWA,EACvB5I,EAAIvX,KAAK+wB,IAAIN,EAAc,GAAKzwB,KAAK+wB,IAAIL,EAAc,GAAK7P,EAC5DsM,EAAIntB,KAAK6wB,KAAK3yB,GACd4qB,EAAI8H,GAAgB5wB,KAAK+wB,IAAIL,EAAc,GAAID,GAErD,QADgBR,EAASS,GAAgBX,GAAU,GAAK,EAAI,KACzCe,EAAIvZ,GAAK4V,GAAMrE,CACtC,IAMAmH,EAAW,SAACS,GAGR,OAFU1wB,KAAK6wB,KAAKH,EAAe7P,KACxB6P,EAAevQ,GAAYU,EAAW,GAC1C,IACX,EACAqP,EAAa,SAACQ,GAGV,OAFU1wB,KAAK6wB,KAAKH,EAAe7P,IACIA,EAAWA,GAAvCV,EAAWuQ,GAE1B,GAEJ,IACMA,EAmBV,SAAyBT,EAAUC,EAAYc,GAE3C,IADA,IAAIC,EAASD,EACJvxB,EAAI,EAAGA,EAHG,GAGiBA,IAChCwxB,GAAkBhB,EAASgB,GAAUf,EAAWe,GAEpD,OAAOA,CACX,CAzByBC,CAAgBjB,EAAUC,EAD1B,EAAIrP,GAGzB,GADAA,EAAWT,GAAsBS,GAC7B0J,MAAMmG,GACN,MAAO,CACHjQ,UAAW,IACXC,QAAS,GACTG,SAAAA,GAIJ,IAAMJ,EAAYzgB,KAAK+wB,IAAIL,EAAc,GAAKF,EAC9C,MAAO,CACH/P,UAAAA,EACAC,QAAwB,EAAf+P,EAAmBzwB,KAAKkhB,KAAKsP,EAAO/P,GAC7CI,SAAAA,EAGZ,CASA,SAAS+P,GAAgBF,EAAcD,GACnC,OAAOC,EAAe1wB,KAAKkhB,KAAK,EAAIuP,EAAeA,EACvD,C,6CClFMU,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa9iB,EAAS4E,GAC3B,OAAOA,EAAKvR,MAAK,SAAC7E,GAAG,YAAsBoC,IAAjBoP,EAAQxR,EAAkB,GACxD,CAuBA,SAASu0B,GAAM9xB,GAAkD,IA0BzD+xB,EA1BUtQ,EAASzhB,EAATyhB,UAAWuQ,EAAShyB,EAATgyB,UAAW7Q,EAASnhB,EAATmhB,UAAcpS,GAAOkE,EAAAA,GAAAA,GAAAjT,EAAAkT,IACnDhB,EAASuP,EAAU,GACnBpR,EAASoR,EAAUA,EAAUxjB,OAAS,GAKtCQ,EAAQ,CAAEgvB,MAAM,EAAOjwB,MAAO0U,GACpC+f,EA9BJ,SAA0BljB,GACtB,IAAImjB,GAAartB,EAAAA,EAAAA,GAAA,CACb8b,SAAU,EACVM,UAAW,IACXC,QAAS,GACT8P,KAAM,EACNmB,wBAAwB,GACrBpjB,GAGP,IAAK8iB,GAAa9iB,EAAS6iB,KACvBC,GAAa9iB,EAAS4iB,IAAe,CACrC,IAAMS,EAAU5B,GAAWzhB,IAC3BmjB,GAAartB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNqtB,GACAE,GAAO,IACVpB,KAAM,KAEImB,wBAAyB,CAC3C,CACA,OAAOD,CACX,CASsFG,EAAgBxtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC7FkK,GAAO,IACV4R,UAAWG,GAAsB/R,EAAQ4R,UAAY,MAFjDM,EAASgR,EAAThR,UAAWC,EAAO+Q,EAAP/Q,QAAS8P,EAAIiB,EAAJjB,KAAM3P,EAAQ4Q,EAAR5Q,SAAUV,EAAQsR,EAARtR,SAAUwR,EAAsBF,EAAtBE,uBAIhDG,EAAkB3R,GAAY,EAC9BsQ,EAAe/P,GAAW,EAAI1gB,KAAKkhB,KAAKT,EAAY+P,IACpDuB,EAAeliB,EAAS6B,EACxBsgB,EAAsB1R,GAAsBtgB,KAAKkhB,KAAKT,EAAY+P,IAQlEyB,EAAkBjyB,KAAKkyB,IAAIH,GAAgB,EAIjD,GAHApR,IAAcA,EAAYsR,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhDxB,EAAe,EAAG,CAClB,IAAM0B,EAAcvB,GAAgBoB,EAAqBvB,GAEzDc,EAAgB,SAAC1B,GACb,IAAMI,EAAWjwB,KAAK6wB,KAAKJ,EAAeuB,EAAsBnC,GAChE,OAAQhgB,EACJogB,IACO6B,EACCrB,EAAeuB,EAAsBD,GACrCI,EACAnyB,KAAKoyB,IAAID,EAActC,GACvBkC,EAAe/xB,KAAKqyB,IAAIF,EAActC,GACtD,CACJ,MACK,GAAqB,IAAjBY,EAELc,EAAgB,SAAC1B,GAAC,OAAKhgB,EACnB7P,KAAK6wB,KAAKmB,EAAsBnC,IAC3BkC,GACID,EAAkBE,EAAsBD,GAAgBlC,EAAE,MAEtE,CAED,IAAMyC,EAAoBN,EAAsBhyB,KAAKkhB,KAAKuP,EAAeA,EAAe,GACxFc,EAAgB,SAAC1B,GACb,IAAMI,EAAWjwB,KAAK6wB,KAAKJ,EAAeuB,EAAsBnC,GAE1D0C,EAAWvyB,KAAKE,IAAIoyB,EAAoBzC,EAAG,KACjD,OAAQhgB,EACHogB,IACK6B,EACErB,EAAeuB,EAAsBD,GACrC/xB,KAAKwyB,KAAKD,GACVD,EACIP,EACA/xB,KAAKyyB,KAAKF,IAClBD,CACZ,CACJ,CACA,MAAO,CACHI,mBAAoBf,GAAyB9Q,GAAmB,KAChEf,KAAM,SAAC+P,GACH,IAAMtqB,EAAUgsB,EAAc1B,GAC9B,GAAK8B,EAqBD1zB,EAAMgvB,KAAO4C,GAAKhP,MArBO,CACzB,IAAIvL,EAAkBwc,EACZ,IAANjC,IAOIva,EADAmb,EAAe,EACGd,GAAsB4B,EAAe1B,EAAGtqB,GAGxC,GAG1B,IAAMotB,EAA2B3yB,KAAKkyB,IAAI5c,IAAoBqL,EACxDiS,EAA+B5yB,KAAKkyB,IAAIriB,EAAStK,IAAYisB,EACnEvzB,EAAMgvB,KACF0F,GAA4BC,CACpC,CAKA,OADA30B,EAAMjB,MAAQiB,EAAMgvB,KAAOpd,EAAStK,EAC7BtH,CACX,EAER,CC7HA,SAAS40B,GAAOrzB,GAAiK,IAA9JyhB,EAASzhB,EAATyhB,UAASqP,EAAA9wB,EAAE2gB,SAAAA,OAAQ,IAAAmQ,EAAG,EAAGA,EAAAwC,EAAAtzB,EAAEuzB,MAAAA,OAAK,IAAAD,EAAG,GAAGA,EAAAE,EAAAxzB,EAAEyzB,aAAAA,OAAY,IAAAD,EAAG,IAAGA,EAAAE,EAAA1zB,EAAE2zB,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EAAAE,EAAA5zB,EAAE6zB,gBAAAA,OAAe,IAAAD,EAAG,IAAGA,EAAEE,EAAY9zB,EAAZ8zB,aAAcpzB,EAAGV,EAAHU,IAAKD,EAAGT,EAAHS,IAAGszB,EAAA/zB,EAAEgyB,UAAAA,OAAS,IAAA+B,EAAG,GAAGA,EAAE5S,EAASnhB,EAATmhB,UACzJjP,EAASuP,EAAU,GACnBhjB,EAAQ,CACVgvB,MAAM,EACNjwB,MAAO0U,GAGL8hB,EAAkB,SAACvyB,GACrB,YAAY9B,IAARe,EACOD,OACCd,IAARc,GAEGD,KAAKkyB,IAAIhyB,EAAMe,GAAKjB,KAAKkyB,IAAIjyB,EAAMgB,GAD/Bf,EAC0CD,CACzD,EACIwzB,EAAYV,EAAQ5S,EAClBuT,EAAQhiB,EAAS+hB,EACjB5jB,OAA0B1Q,IAAjBm0B,EAA6BI,EAAQJ,EAAaI,GAK7D7jB,IAAW6jB,IACXD,EAAY5jB,EAAS6B,GACzB,IAcIiiB,EACAC,EAfEC,EAAY,SAAChE,GAAC,OAAM4D,EAAYzzB,KAAK6wB,KAAKhB,EAAIoD,EAAa,EAC3Da,EAAa,SAACjE,GAAC,OAAKhgB,EAASgkB,EAAUhE,EAAE,EACzCkE,EAAgB,SAAClE,GACnB,IAAM3xB,EAAQ21B,EAAUhE,GAClBmE,EAASF,EAAWjE,GAC1B5xB,EAAMgvB,KAAOjtB,KAAKkyB,IAAIh0B,IAAUszB,EAChCvzB,EAAMjB,MAAQiB,EAAMgvB,KAAOpd,EAASmkB,CACxC,EASMC,EAAqB,SAACpE,GAjCN,IAAC5uB,KAkCAhD,EAAMjB,WAlCSmC,IAARe,GAAqBe,EAAIf,QAAiBf,IAARc,GAAqBgB,EAAIhB,KAoCrF0zB,EAAsB9D,EACtB+D,EAAWtC,GAAO,CACdrQ,UAAW,CAAChjB,EAAMjB,MAAOw2B,EAAgBv1B,EAAMjB,QAC/CmjB,SAAUwP,GAAsBmE,EAAYjE,EAAG5xB,EAAMjB,OACrD0jB,QAASyS,EACT1S,UAAW4S,EACX7B,UAAAA,EACA7Q,UAAAA,IAER,EAEA,OADAsT,EAAmB,GACZ,CACHvB,mBAAoB,KACpB5S,KAAM,SAAC+P,GAOH,IAAIqE,GAAkB,EAUtB,OATKN,QAAoCz0B,IAAxBw0B,IACbO,GAAkB,EAClBH,EAAclE,GACdoE,EAAmBpE,SAMK1wB,IAAxBw0B,GAAqC9D,GAAK8D,EACnCC,EAAS9T,KAAK+P,EAAI8D,KAGxBO,GAAmBH,EAAclE,GAC3B5xB,EAEf,EAER,CChEA,IAAMk2B,GAAa,SAACtE,EAAGuE,EAAIC,GAAE,SAAQ,EAAM,EAAMA,EAAK,EAAMD,GAAMvE,GAAK,EAAMwE,EAAK,EAAMD,IAAOvE,EAAI,EAAMuE,GACrGvE,CAAC,EAoBL,SAASyE,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO3d,GACX,IAAM4d,EAAW,SAACC,GAAE,OArBxB,SAAyBtsB,EAAGusB,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAv1B,EAAI,EACR,IAEIs1B,EAAWZ,GADXa,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAOnsB,GAC7B,EACXwsB,EAAaE,EAGbH,EAAaG,QAEZh1B,KAAKkyB,IAAI6C,GAfO,QAgBnBt1B,EAfuB,IAgB7B,OAAOu1B,CACX,CAK6BC,CAAgBL,EAAI,EAAG,EAAGL,EAAKE,EAAI,EAE5D,OAAO,SAAC5E,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAIsE,GAAWQ,EAAS9E,GAAI2E,EAAKE,EAAI,CAC5E,CC9CA,IAAMQ,GAASZ,GAAY,IAAM,EAAG,EAAG,GACjCa,GAAUb,GAAY,EAAG,EAAG,IAAM,GAClCc,GAAYd,GAAY,IAAM,EAAG,IAAM,GCFvCe,GAAe,SAACC,GAAM,OAAK,SAACh6B,GAAC,OAAKA,GAAK,GAAMg6B,EAAO,EAAIh6B,GAAK,GAAK,EAAIg6B,EAAO,GAAK,EAAIh6B,KAAO,CAAC,GCA9Fi6B,GAAgB,SAACD,GAAM,OAAK,SAACh6B,GAAC,OAAK,EAAIg6B,EAAO,EAAIh6B,EAAE,GCCpDk6B,GAAS,SAACl6B,GAAC,OAAK,EAAI0E,KAAKoyB,IAAIpyB,KAAKy1B,KAAKn6B,GAAG,EAC1Co6B,GAAUH,GAAcC,IACxBG,GAAYN,GAAaG,ICDzBI,GAAUtB,GAAY,IAAM,KAAM,IAAM,KACxCuB,GAASN,GAAcK,IACvBE,GAAYT,GAAaQ,ICEzBE,GAAe,CACjBC,OAAQjf,GACRme,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAK,OAAAA,GACAG,UAAAA,GACAD,QAAAA,GACAG,OAAAA,GACAC,UAAAA,GACAF,QAAAA,GACAK,WCjBe,SAAC36B,GAAC,OAAMA,GAAK,GAAK,EAAI,GAAMu6B,GAAOv6B,GAAK,IAAO,EAAI0E,KAAK+wB,IAAI,GAAI,IAAMz1B,EAAI,IAAI,GDmB3F46B,GAA6B,SAAC9gB,GAChC,GAAIlU,MAAMC,QAAQiU,GAAa,CAE3BuN,GAAgC,IAAtBvN,EAAW3X,OAAc,2DACnC,IAAA04B,GAAAjT,EAAAA,GAAAA,GAAyB9N,EAAU,GACnC,OAAOkf,GADE6B,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAEzB,CACK,MAA0B,kBAAf/gB,GAEZuN,QAAuCxjB,IAA7B42B,GAAa3gB,GAA2B,wBAAF5T,OAA0B4T,EAAU,MAC7E2gB,GAAa3gB,IAEjBA,CACX,EEtBMghB,GAAW,SAACxU,EAAMyU,EAAIr5B,GACxB,IAAMs5B,EAAmBD,EAAKzU,EAC9B,OAA4B,IAArB0U,EAAyB,GAAKt5B,EAAQ4kB,GAAQ0U,CACzD,ECMMC,GAAY,SAAC3U,EAAMyU,EAAID,GACzB,OAAOxU,GAAQyU,EAAKzU,GAAQwU,CAChC,ECtBA,SAASI,GAASl7B,EAAGm7B,EAAG5G,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDv0B,EAAc,GAATm7B,EAAIn7B,GAASu0B,EACzBA,EAAI,GACG4G,EACP5G,EAAI,EAAI,EACDv0B,GAAKm7B,EAAIn7B,IAAM,EAAI,EAAIu0B,GAAK,EAChCv0B,CACX,CCHA,IAAMo7B,GAAiB,SAAC9U,EAAMyU,EAAIp1B,GAC9B,IAAM01B,EAAW/U,EAAOA,EAClBgV,EAAO31B,GAAKo1B,EAAKA,EAAKM,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAI52B,KAAKkhB,KAAK0V,EACpC,EACMC,GAAa,CAACjO,GAAKN,GAAMU,IAE/B,SAAS8N,GAAO1N,GACZ,IAFkBnoB,EAEZmI,GAFYnI,EAEQmoB,EAFFyN,GAAWhR,MAAK,SAACzc,GAAI,OAAKA,EAAKvB,KAAK5G,EAAE,KAG9D0hB,GAAU5gB,QAAQqH,GAAO,IAAF5H,OAAM4nB,EAAK,yEAClC,IAAI2N,EAAQ3tB,EAAKI,MAAM4f,GAKvB,OAJIhgB,IAAS4f,KAET+N,EDTR,SAAmBv3B,GAAwC,IAArCypB,EAAGzpB,EAAHypB,IAAKC,EAAU1pB,EAAV0pB,WAAYC,EAAS3pB,EAAT2pB,UAAWzf,EAAKlK,EAALkK,MAC9Cuf,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,IAAMuN,EAAItN,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC5tB,EAAI,EAAI6tB,EAAYsN,EAC1BlO,EAAMiO,GAASl7B,EAAGm7B,EAAGxN,EAAM,EAAI,GAC/BT,EAAQgO,GAASl7B,EAAGm7B,EAAGxN,GACvBR,EAAO+N,GAASl7B,EAAGm7B,EAAGxN,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAKvoB,KAAK8J,MAAY,IAANye,GAChBC,MAAOxoB,KAAK8J,MAAc,IAAR0e,GAClBC,KAAMzoB,KAAK8J,MAAa,IAAP2e,GACjB/e,MAAAA,EAER,CChBgBstB,CAAWD,IAEhBA,CACX,CACA,IAAME,GAAW,SAACrV,EAAMyU,GACpB,IAAMa,EAAWJ,GAAOlV,GAClBuV,EAASL,GAAOT,GAChBe,GAAO/yB,EAAAA,EAAAA,GAAA,GAAQ6yB,GACrB,OAAO,SAACj2B,GAKJ,OAJAm2B,EAAQ7O,IAAMmO,GAAeQ,EAAS3O,IAAK4O,EAAO5O,IAAKtnB,GACvDm2B,EAAQ5O,MAAQkO,GAAeQ,EAAS1O,MAAO2O,EAAO3O,MAAOvnB,GAC7Dm2B,EAAQ3O,KAAOiO,GAAeQ,EAASzO,KAAM0O,EAAO1O,KAAMxnB,GAC1Dm2B,EAAQ1tB,MAAQ6sB,GAAUW,EAASxtB,MAAOytB,EAAOztB,MAAOzI,GACjDqnB,GAAKjf,UAAU+tB,EAC1B,CACJ,EC9BA,SAASC,GAAa1e,EAAGC,GACrB,OAAO,SAACtd,GAAC,OAAMA,EAAI,EAAIsd,EAAID,CAAC,CAChC,CACA,SAAS4d,GAAU5d,EAAGC,GAClB,OAAO,SAACtd,GAAC,OAAKg8B,GAAY3e,EAAGC,EAAGtd,EAAE,CACtC,CACA,SAASi8B,GAAS5e,GACd,MAAiB,kBAANA,EACA4d,GAEW,kBAAN5d,EACL5P,EAAmB4P,GACpB0e,GACAjO,GAAMvhB,KAAK8Q,GACPse,GACAO,GAELt2B,MAAMC,QAAQwX,GACZ8e,GAEW,kBAAN9e,EACLyQ,GAAMvhB,KAAK8Q,GAAKse,GAAWS,GAE/BL,EACX,CACA,SAASI,GAAS9e,EAAGC,GACjB,IAAMuR,GAAM9C,EAAAA,GAAAA,GAAO1O,GACbgf,EAAYxN,EAAO1sB,OACnBm6B,EAAajf,EAAE2N,KAAI,SAACrlB,EAAGxB,GAAC,OAAK83B,GAASt2B,EAATs2B,CAAYt2B,EAAG2X,EAAEnZ,GAAG,IACvD,OAAO,SAACnE,GACJ,IAAK,IAAImE,EAAI,EAAGA,EAAIk4B,EAAWl4B,IAC3B0qB,EAAO1qB,GAAKm4B,EAAWn4B,GAAGnE,GAE9B,OAAO6uB,CACX,CACJ,CACA,SAASuN,GAAU/e,EAAGC,GAClB,IAAMuR,GAAM9lB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQsU,GAAMC,GACpBgf,EAAa,CAAC,EACpB,IAAK,IAAM76B,KAAOotB,OACChrB,IAAXwZ,EAAE5b,SAAiCoC,IAAXyZ,EAAE7b,KAC1B66B,EAAW76B,GAAOw6B,GAAS5e,EAAE5b,GAAXw6B,CAAiB5e,EAAE5b,GAAM6b,EAAE7b,KAGrD,OAAO,SAACkE,GACJ,IAAK,IAAMlE,KAAO66B,EACdzN,EAAOptB,GAAO66B,EAAW76B,GAAKkE,GAElC,OAAOkpB,CACX,CACJ,CAcA,IAAMqN,GAAa,SAAC9lB,EAAQ7B,GACxB,IAAMgoB,EAAWxN,GAAQL,kBAAkBna,GACrCioB,EAActO,GAAoB9X,GAClCqmB,EAAcvO,GAAoB3Z,GAIxC,OAHuBioB,EAAYnO,QAAQC,IAAInsB,SAAWs6B,EAAYpO,QAAQC,IAAInsB,QAC9Eq6B,EAAYnO,QAAQP,MAAM3rB,SAAWs6B,EAAYpO,QAAQP,MAAM3rB,QAC/Dq6B,EAAYnO,QAAQpgB,OAAO9L,QAAUs6B,EAAYpO,QAAQpgB,OAAO9L,OAEzDob,GAAK4e,GArBpB,SAAoB/lB,EAAQ7B,GAIxB,IAHA,IAAIsB,EACE6mB,EAAgB,GAChBC,EAAW,CAAE7O,MAAO,EAAGQ,IAAK,EAAGrgB,OAAQ,GACpC9J,EAAI,EAAGA,EAAIoQ,EAAO2B,OAAO/T,OAAQgC,IAAK,CAC3C,IAAM2J,EAAOyG,EAAOga,MAAMpqB,GACpBy4B,EAAcxmB,EAAOiY,QAAQvgB,GAAM6uB,EAAS7uB,IAC5C+uB,EAAoD,QAArChnB,EAAKO,EAAOF,OAAO0mB,UAAiC,IAAP/mB,EAAgBA,EAAK,EACvF6mB,EAAcv4B,GAAK04B,EACnBF,EAAS7uB,IACb,CACA,OAAO4uB,CACX,CAS6BI,CAAWN,EAAaC,GAAcA,EAAYvmB,QAASqmB,IAGhFnV,IAAQ,EAAM,mBAAFlhB,OAAqBkQ,EAAM,WAAAlQ,OAAUqO,EAAM,6KAChDwnB,GAAa3lB,EAAQ7B,GAEpC,ECnFA,SAAS6F,GAAIkM,EAAMyU,EAAI/6B,GACnB,MAAoB,kBAATsmB,GACO,kBAAPyU,GACM,kBAAN/6B,EACAi7B,GAAU3U,EAAMyU,EAAI/6B,GAEjBi8B,GAAS3V,EAChByW,CAAMzW,EAAMyU,EACvB,CCJA,SAASiC,GAAanO,EAAQrJ,EAAMyX,GAIhC,IAHA,IAAMC,EAAS,GACTC,EAAeF,GAAe7iB,GAC9BgjB,EAAYvO,EAAO1sB,OAAS,EACzBgC,EAAI,EAAGA,EAAIi5B,EAAWj5B,IAAK,CAChC,IAAI44B,EAAQI,EAAatO,EAAO1qB,GAAI0qB,EAAO1qB,EAAI,IAC/C,GAAIqhB,EAAM,CACN,IAAM6X,EAAiBz3B,MAAMC,QAAQ2f,GAAQA,EAAKrhB,IAAMsX,GAAO+J,EAC/DuX,EAAQxf,GAAK8f,EAAgBN,EACjC,CACAG,EAAOp7B,KAAKi7B,EAChB,CACA,OAAOG,CACX,CClBA,SAASI,GAAcC,GACnB,IAAMlnB,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQmnB,GAExB,IADA,IAAM54B,EAAMyR,EAAOA,EAAOlU,OAAS,GAC1BgC,EAAI,EAAGA,GAAKq5B,EAAWr5B,IAAK,CACjC,IAAMs5B,EAAiB3C,GAAS,EAAG0C,EAAWr5B,GAC9CkS,EAAOvU,KAAKm5B,GAAUr2B,EAAK,EAAG64B,GAClC,CACJ,CDLIC,CAAWrnB,EAAQknB,EAAIp7B,OAAS,GACzBkU,CACX,CEIA,SAASsP,GAASzhB,GAA4E,IAHvEgS,EAAQ8jB,EAG+DnF,EAAA3wB,EAAzEqhB,SAAAA,OAAQ,IAAAsP,EAAG,IAAGA,EAAa8I,EAAcz5B,EAAzByhB,UAA2BiY,EAAK15B,EAAL05B,MAAKC,EAAA35B,EAAEshB,KAAAA,OAAI,IAAAqY,EAAG,YAAWA,EAK/EC,ECfY,SAACtY,GACnB,OAAO5f,MAAMC,QAAQ2f,IAA4B,kBAAZA,EAAK,EAC9C,CDa4BuY,CAAcvY,GAChCA,EAAKwF,IAAI4P,IACTA,GAA2BpV,GAK3B7iB,EAAQ,CACVgvB,MAAM,EACNjwB,MAAOi8B,EAAe,IAKpBK,EE7BV,SAA8B3nB,EAAQkP,GAClC,OAAOlP,EAAO2U,KAAI,SAACiT,GAAC,OAAKA,EAAI1Y,CAAQ,GACzC,CF2B0B2Y,CAGtBN,GAASA,EAAMz7B,SAAWw7B,EAAex7B,OACnCy7B,EACAN,GAAcK,GAAiBpY,GAC/B4Y,EHKV,SAAqBC,EAAOvP,GAAqD,IAAA3qB,EAAAN,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACy6B,EAAAn6B,EAAzC8J,MAAOswB,OAAO,IAAAD,GAAOA,EAAE7Y,EAAIthB,EAAJshB,KAAMuX,EAAK74B,EAAL64B,MACzDwB,EAAcH,EAAMj8B,OAM1B,GALAklB,GAAUkX,IAAgB1P,EAAO1sB,OAAQ,wDAKrB,IAAhBo8B,EACA,OAAO,kBAAM1P,EAAO,EAAE,EAC1B,GAAoB,IAAhB0P,GAAqBH,EAAM,KAAOA,EAAM,GACxC,OAAO,kBAAMvP,EAAO,EAAE,EAEtBuP,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,GAAQrS,EAAAA,GAAAA,GAAIqS,GAAOI,UACnB3P,GAAS9C,EAAAA,GAAAA,GAAI8C,GAAQ2P,WAEzB,IAAMtB,EAASF,GAAanO,EAAQrJ,EAAMuX,GACpCK,EAAYF,EAAO/6B,OACnBs8B,EAAe,SAAC94B,GAClB,IAAIxB,EAAI,EACR,GAAIi5B,EAAY,EACZ,KAAOj5B,EAAIi6B,EAAMj8B,OAAS,KAClBwD,EAAIy4B,EAAMj6B,EAAI,IADOA,KAKjC,IAAMu6B,EAAkB5D,GAASsD,EAAMj6B,GAAIi6B,EAAMj6B,EAAI,GAAIwB,GACzD,OAAOu3B,EAAO/4B,GAAGu6B,EACrB,EACA,OAAOJ,EACD,SAAC34B,GAAC,OAAK84B,EAAazwB,GAAMowB,EAAM,GAAIA,EAAMG,EAAc,GAAI54B,GAAG,EAC/D84B,CACV,CGrC8BE,CAAYX,EAAeL,EAAgB,CACjEnY,KAAM5f,MAAMC,QAAQi4B,GACdA,GA9BS5nB,EA+BKynB,EA/BG3D,EA+Ba8D,EA9BjC5nB,EAAO8U,KAAI,kBAAMgP,GAAUF,EAAS,IAAE73B,OAAO,EAAGiU,EAAO/T,OAAS,MAgCvE,MAAO,CACHi1B,mBAAoB7R,EACpBf,KAAM,SAAC+P,GAGH,OAFA5xB,EAAMjB,MAAQy8B,EAAkB5J,GAChC5xB,EAAMgvB,KAAO4C,GAAKhP,EACX5iB,CACX,EAER,CG7CA,IAAMi8B,GAAkB,SAACx0B,GACrB,IAAMy0B,EAAgB,SAAH36B,GAAA,IAAMrB,EAASqB,EAATrB,UAAS,OAAOuH,EAAOvH,EAAU,EAC1D,MAAO,CACHkD,MAAO,kBAAM6V,GAAAA,OAAaijB,GAAe,EAAK,EAC9CC,KAAM,kBAAMjjB,GAAYgjB,EAAc,EAKtCp6B,IAAK,kBAAOR,GAAUnB,aAAemB,GAAUpB,UAAYokB,GAAKxiB,KAAK,EAE7E,E,wBCAMs6B,GAAa,CACfC,MAAOzH,GACPA,QAAAA,GACA0H,MAAOtZ,GACPA,UAAWA,GACXqQ,OAAAA,IAEEkJ,GAAoB,SAACjwB,GAAO,OAAKA,EAAU,GAAG,EAM9CkwB,GAAmB,SAAAC,IAAApgB,EAAAA,GAAAA,GAAAmgB,EAAAC,GAAA,IAAAngB,GAAAC,EAAAA,GAAAA,GAAAigB,GACrB,SAAAA,EAAAj7B,GAAqF,IAAAmb,EAAAggB,EAAAn7B,EAAvEunB,iBAAkB6T,OAAkB,IAAAD,EAAG5T,GAAgB4T,EAAKpsB,GAAOkE,EAAAA,GAAAA,GAAAjT,EAAAkT,KAAAjW,EAAAA,EAAAA,GAAA,KAAAg+B,IAC7E9f,EAAAJ,EAAAxZ,KAAA,KAAMwN,IAIDssB,SAAW,KAIhBlgB,EAAKmgB,UAAY,KAIjBngB,EAAKogB,WAAa,KAIlBpgB,EAAKqgB,YAAc,EAInBrgB,EAAKsgB,cAAgB,EAMrBtgB,EAAKugB,iBAAmB,UACxBvgB,EAAK1c,MAAQ,OACb,IAAAuwB,EAAyC7T,EAAKpM,QAAtC1M,EAAI2sB,EAAJ3sB,KAAMqlB,EAAWsH,EAAXtH,YAAajG,EAASuN,EAATvN,UACrBka,EAAa,SAAC/Y,EAAmBF,GAAa,OAAKvH,EAAKygB,oBAAoBhZ,EAAmBF,EAAc,EAOnF,OAN5BrgB,GAAQqlB,GAAeA,EAAYgF,MACnCvR,EAAKwL,SAAWe,EAAYgF,MAAMmP,iBAAiBpa,EAAWka,EAAYt5B,EAAMqlB,GAGhFvM,EAAKwL,SAAW,IAAIyU,EAAmB3Z,EAAWka,EAAYt5B,EAAMqlB,GAExEvM,EAAKwL,SAASsB,kBAAkB9M,CACpC,CAgTC,OAhTA7d,EAAAA,EAAAA,GAAA29B,EAAA,EAAA19B,IAAA,eAAAC,MACD,SAAas+B,GACT,IAQIC,EACAC,EATJC,EAAuF/+B,KAAK6R,QAAOmtB,EAAAD,EAA3FryB,KAAAA,OAAI,IAAAsyB,EAAG,YAAWA,EAAAC,EAAAF,EAAEha,OAAAA,OAAM,IAAAka,EAAG,EAACA,EAAAC,EAAAH,EAAE9Z,YAAAA,OAAW,IAAAia,EAAG,EAACA,EAAEla,EAAU+Z,EAAV/Z,WAAUma,EAAAJ,EAAEtb,SAAAA,OAAQ,IAAA0b,EAAG,EAACA,EAC3EC,EAAmBzB,GAAWjxB,IAAS6X,GASzC6a,IAAqB7a,IACK,kBAAnBqa,EAAY,KAInBC,EAAwB1iB,GAAK2hB,GAAmB9kB,GAAI4lB,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,IAAMS,EAAYD,GAAgBz3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI3H,KAAK6R,SAAO,IAAE0S,UAAWqa,KAK9C,WAAf5Z,IACA8Z,EAAoBM,GAAgBz3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B3H,KAAK6R,SAAO,IACf0S,WAAWoG,EAAAA,GAAAA,GAAIiU,GAAaxB,UAC5B3Z,UAAWA,MAWkB,OAAjC4b,EAAUrJ,qBACVqJ,EAAUrJ,mBCtGtB,SAA+BqJ,GAI3B,IAHA,IAAIlb,EAAW,EAEX5iB,EAAQ89B,EAAUjc,KAAKe,IACnB5iB,EAAMgvB,MAAQpM,EALG,KAMrBA,GAHa,GAIb5iB,EAAQ89B,EAAUjc,KAAKe,GAE3B,OAAOA,GATkB,IASiBmb,IAAWnb,CACzD,CD6F2Cob,CAAsBF,IAEzD,IAAQrJ,EAAuBqJ,EAAvBrJ,mBACFwJ,EAAmBxJ,EAAqB/Q,EAE9C,MAAO,CACHoa,UAAAA,EACAP,kBAAAA,EACAD,sBAAAA,EACA7I,mBAAAA,EACAwJ,iBAAAA,EACAC,cAPkBD,GAAoBza,EAAS,GAAKE,EAS5D,GAAC,CAAA5kB,IAAA,iBAAAC,MACD,WACI,IAAAo/B,EAA4B1/B,KAAK6R,QAAzByf,SAAAA,OAAQ,IAAAoO,GAAOA,EACvB1/B,KAAK2/B,OACyB,WAA1B3/B,KAAKw+B,kBAAkClN,EAIvCtxB,KAAKuB,MAAQvB,KAAKw+B,iBAHlBx+B,KAAK4/B,OAKb,GAAC,CAAAv/B,IAAA,OAAAC,MACD,SAAKmB,GAA2B,IAAhBo+B,EAAMr9B,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GACVyX,EAAaja,KAAbia,SAER,IAAKA,EAAU,CACX,IAAQsK,EAAcvkB,KAAK6R,QAAnB0S,UACR,MAAO,CAAEgM,MAAM,EAAMjwB,MAAOikB,EAAUA,EAAUxjB,OAAS,GAC7D,CACA,IAAQykB,EAAwIvL,EAAxIuL,cAAe6Z,EAAyHplB,EAAzHolB,UAAWP,EAA8G7kB,EAA9G6kB,kBAAmBD,EAA2F5kB,EAA3F4kB,sBAAuBta,EAAoEtK,EAApEsK,UAAWyR,EAAyD/b,EAAzD+b,mBAAoByJ,EAAqCxlB,EAArCwlB,cAAeD,EAAsBvlB,EAAtBulB,iBAC1H,GAAuB,OAAnBx/B,KAAKo+B,UACL,OAAOiB,EAAUjc,KAAK,GAC1B,IAAA0c,EAA6D9/B,KAAK6R,QAA1D8S,EAAKmb,EAALnb,MAAOI,EAAM+a,EAAN/a,OAAQC,EAAU8a,EAAV9a,WAAYC,EAAW6a,EAAX7a,YAAa8M,EAAQ+N,EAAR/N,SAO5C/xB,KAAK+/B,MAAQ,EACb//B,KAAKo+B,UAAY96B,KAAKE,IAAIxD,KAAKo+B,UAAW38B,GAErCzB,KAAK+/B,MAAQ,IAClB//B,KAAKo+B,UAAY96B,KAAKE,IAAI/B,EAAYg+B,EAAgBz/B,KAAK+/B,MAAO//B,KAAKo+B,YAGvEyB,EACA7/B,KAAKs+B,YAAc78B,EAEI,OAAlBzB,KAAKm+B,SACVn+B,KAAKs+B,YAAct+B,KAAKm+B,SAMxBn+B,KAAKs+B,YACDh7B,KAAK8J,MAAM3L,EAAYzB,KAAKo+B,WAAap+B,KAAK+/B,MAGtD,IAAMC,EAAmBhgC,KAAKs+B,YAAc3Z,GAAS3kB,KAAK+/B,OAAS,EAAI,GAAK,GACtEE,EAAiBjgC,KAAK+/B,OAAS,EAC/BC,EAAmB,EACnBA,EAAmBP,EACzBz/B,KAAKs+B,YAAch7B,KAAKC,IAAIy8B,EAAkB,GAE3B,aAAfhgC,KAAKuB,OAA0C,OAAlBvB,KAAKm+B,WAClCn+B,KAAKs+B,YAAcmB,GAEvB,IAAIta,EAAUnlB,KAAKs+B,YACf4B,EAAiBb,EACrB,GAAIta,EAAQ,CAMR,IAAM2U,EAAWp2B,KAAKE,IAAIxD,KAAKs+B,YAAamB,GAAiBD,EAKzDW,EAAmB78B,KAAK88B,MAAM1G,GAK9B2G,EAAoB3G,EAAW,GAK9B2G,GAAqB3G,GAAY,IAClC2G,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB78B,KAAKE,IAAI28B,EAAkBpb,EAAS,GAIvD,IAAMub,EAAiBj7B,QAAQ86B,EAAmB,GAC9CG,IACmB,YAAftb,GACAqb,EAAoB,EAAIA,EACpBpb,IACAob,GAAqBpb,EAAcua,IAGnB,WAAfxa,IACLkb,EAAiBpB,IAGzB3Z,EAAUvY,GAAM,EAAG,EAAGyzB,GAAqBb,CAC/C,CAMA,IAAMj+B,EAAQ0+B,EACR,CAAE1P,MAAM,EAAOjwB,MAAOikB,EAAU,IAChC2b,EAAe9c,KAAK+B,GACtB0Z,IACAt9B,EAAMjB,MAAQu+B,EAAsBt9B,EAAMjB,QAE9C,IAAMiwB,EAAShvB,EAATgvB,KACD0P,GAAyC,OAAvBjK,IACnBzF,EACIvwB,KAAK+/B,OAAS,EACR//B,KAAKs+B,aAAemB,EACpBz/B,KAAKs+B,aAAe,GAElC,IAAMiC,EAAwC,OAAlBvgC,KAAKm+B,WACb,aAAfn+B,KAAKuB,OAAwC,YAAfvB,KAAKuB,OAAuBgvB,GAU/D,OATIgQ,QAAyC99B,IAAlB+iB,IACvBjkB,EAAMjB,MAAQilB,GAAiBhB,EAAWvkB,KAAK6R,QAAS2T,IAExDuM,GACAA,EAASxwB,EAAMjB,OAEfigC,GACAvgC,KAAKwgC,SAEFj/B,CACX,GAAC,CAAAlB,IAAA,WAAAwK,IACD,WACI,IAAQoP,EAAaja,KAAbia,SACR,OAAOA,EAAW2J,GAAsB3J,EAAS+b,oBAAsB,CAC3E,GAAC,CAAA31B,IAAA,OAAAwK,IACD,WACI,OAAO+Y,GAAsB5jB,KAAKs+B,YACtC,EAACvzB,IACD,SAAS+a,GACLA,EAAUpC,GAAsBoC,GAChC9lB,KAAKs+B,YAAcxY,EACG,OAAlB9lB,KAAKm+B,UAAoC,IAAfn+B,KAAK+/B,MAC/B//B,KAAKm+B,SAAWrY,EAEX9lB,KAAKygC,SACVzgC,KAAKo+B,UAAYp+B,KAAKygC,OAAOp9B,MAAQyiB,EAAU9lB,KAAK+/B,MAE5D,GAAC,CAAA1/B,IAAA,QAAAwK,IACD,WACI,OAAO7K,KAAKu+B,aAChB,EAACxzB,IACD,SAAU21B,GACN,IAAMC,EAAa3gC,KAAKu+B,gBAAkBmC,EAC1C1gC,KAAKu+B,cAAgBmC,EACjBC,IACA3gC,KAAK6lB,KAAOjC,GAAsB5jB,KAAKs+B,aAE/C,GAAC,CAAAj+B,IAAA,OAAAC,MACD,WAAO,IAAA8d,EAAA,KAIH,GAHKpe,KAAKypB,SAASJ,aACfrpB,KAAKypB,SAASmX,SAEb5gC,KAAK6xB,WAIV,IAAI7xB,KAAK2xB,UAAT,CAEA,IAAAkP,EAA6C7gC,KAAK6R,QAAOivB,EAAAD,EAAjDJ,OAAAA,OAAM,IAAAK,EAAGtD,GAAesD,EAAEC,EAAMF,EAANE,OAC7B/gC,KAAKygC,SACNzgC,KAAKygC,OAASA,GAAO,SAACh/B,GAAS,OAAK2c,EAAK4iB,KAAKv/B,EAAU,KAE5Ds/B,GAAUA,IACV,IAAM19B,EAAMrD,KAAKygC,OAAOp9B,MACF,OAAlBrD,KAAKm+B,SACLn+B,KAAKo+B,UAAY/6B,EAAMrD,KAAKm+B,SAEtBn+B,KAAKo+B,WAA4B,aAAfp+B,KAAKuB,QAC7BvB,KAAKo+B,UAAY/6B,GAEF,aAAfrD,KAAKuB,OACLvB,KAAK4xB,wBAET5xB,KAAKq+B,WAAar+B,KAAKo+B,UACvBp+B,KAAKm+B,SAAW,KAKhBn+B,KAAKuB,MAAQ,UACbvB,KAAKygC,OAAO97B,OAvBF,OAJN3E,KAAKw+B,iBAAmB,SA4BhC,GAAC,CAAAn+B,IAAA,QAAAC,MACD,WACI,IAAImU,EACCzU,KAAK6xB,WAIV7xB,KAAKuB,MAAQ,SACbvB,KAAKm+B,SAAuC,QAA3B1pB,EAAKzU,KAAKs+B,mBAAgC,IAAP7pB,EAAgBA,EAAK,GAJrEzU,KAAKw+B,iBAAmB,QAKhC,GAAC,CAAAn+B,IAAA,OAAAC,MACD,WAGI,GAFAN,KAAKypB,SAAS9mB,SACd3C,KAAK2xB,WAAY,EACE,SAAf3xB,KAAKuB,MAAT,CAEAvB,KAAKihC,WACL,IAAQC,EAAWlhC,KAAK6R,QAAhBqvB,OACRA,GAAUA,GAHA,CAId,GAAC,CAAA7gC,IAAA,WAAAC,MACD,WACuB,YAAfN,KAAKuB,OACLvB,KAAK2/B,OAET3/B,KAAKw+B,iBAAmBx+B,KAAKuB,MAAQ,WACrCvB,KAAKm+B,SAAW,IACpB,GAAC,CAAA99B,IAAA,SAAAC,MACD,WACIN,KAAKihC,WACLjhC,KAAKuB,MAAQ,WACb,IAAQgpB,EAAevqB,KAAK6R,QAApB0Y,WACRA,GAAcA,GAClB,GAAC,CAAAlqB,IAAA,SAAAC,MACD,WAC4B,OAApBN,KAAKq+B,YACLr+B,KAAKghC,KAAKhhC,KAAKq+B,YAEnBr+B,KAAKihC,WACLjhC,KAAK4xB,uBACT,GAAC,CAAAvxB,IAAA,WAAAC,MACD,WACIN,KAAKuB,MAAQ,OACbvB,KAAKmhC,aACLnhC,KAAKsyB,yBACLtyB,KAAK4xB,wBACL5xB,KAAKo+B,UAAYp+B,KAAKq+B,WAAa,KACnCr+B,KAAKypB,SAAS9mB,QAClB,GAAC,CAAAtC,IAAA,aAAAC,MACD,WACSN,KAAKygC,SAEVzgC,KAAKygC,OAAO/C,OACZ19B,KAAKygC,YAASh+B,EAClB,GAAC,CAAApC,IAAA,SAAAC,MACD,SAAOulB,GAEH,OADA7lB,KAAKo+B,UAAY,EACVp+B,KAAKghC,KAAKnb,GAAM,EAC3B,KAACkY,CAAA,CAvVoB,CAAS3M,IE3BlC,IAAMgQ,GAAqB,SAACxI,GAAM,OAAKp0B,MAAMC,QAAQm0B,IAAgC,kBAAdA,EAAO,EAAe,ECE7F,SAASyI,GAAuBzI,GAC5B,OAAOvzB,SAASuzB,GACO,kBAAXA,GAAuB0I,GAAqB1I,IACpDwI,GAAmBxI,IAClBp0B,MAAMC,QAAQm0B,IAAWA,EAAO2I,MAAMF,IAC/C,CACA,IAAMG,GAAsB,SAAH1+B,GAAA,IAAAqH,GAAAqc,EAAAA,GAAAA,GAAA1jB,EAAA,GAAKmZ,EAAC9R,EAAA,GAAE+R,EAAC/R,EAAA,GAAEqhB,EAACrhB,EAAA,GAAEiqB,EAACjqB,EAAA,yBAAArF,OAAsBmX,EAAC,MAAAnX,OAAKoX,EAAC,MAAApX,OAAK0mB,EAAC,MAAA1mB,OAAKsvB,EAAC,MAC3EkN,GAAuB,CACzBhI,OAAQ,SACRlV,KAAM,OACNoU,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXI,OAAQ0I,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CxI,QAASwI,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CrI,OAAQqI,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDtI,QAASsI,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASC,GAAwB7I,GAC7B,GAAKA,EAEL,OAAOwI,GAAmBxI,GACpB4I,GAAoB5I,GACpBp0B,MAAMC,QAAQm0B,GACVA,EAAOhP,IAAI6X,IACXH,GAAqB1I,EACnC,C,0FCjBM8I,GCXN,SAAcp/B,GACV,IAAIiyB,EACJ,OAAO,WAGH,YAFe9xB,IAAX8xB,IACAA,EAASjyB,KACNiyB,CACX,CACJ,CDIsBoN,EAAK,kBAAMz9B,OAAOE,eAAeC,KAAKu9B,QAAQz9B,UAAW,UAAU,IAInF09B,GAAoB,IAAI1hC,IAAI,CAC9B,UACA,WACA,SACA,cAwDH,IACK2hC,GAAoB,SAAA9D,IAAApgB,EAAAA,GAAAA,GAAAkkB,EAAA9D,GAAA,IAAAngB,GAAAC,EAAAA,GAAAA,GAAAgkB,GACtB,SAAAA,EAAYjwB,GAAS,IAAAoM,GAAAle,EAAAA,EAAAA,GAAA,KAAA+hC,GAEjB,IAAAhQ,GADA7T,EAAAJ,EAAAxZ,KAAA,KAAMwN,IACwCA,QAAtC1M,EAAI2sB,EAAJ3sB,KAAMqlB,EAAWsH,EAAXtH,YAAajG,EAASuN,EAATvN,UAEK,OADhCtG,EAAKwL,SAAW,IAAI6F,GAAqB/K,GAAW,SAACmB,EAAmBF,GAAa,OAAKvH,EAAKygB,oBAAoBhZ,EAAmBF,EAAc,GAAErgB,EAAMqlB,GAC5JvM,EAAKwL,SAASsB,kBAAkB9M,CACpC,CAiMC,OAjMA7d,EAAAA,EAAAA,GAAA0hC,EAAA,EAAAzhC,IAAA,eAAAC,MACD,SAAaikB,EAAWiB,GAAe,IAC/B/Q,EAD+B2J,EAAA,KAEnC2gB,EAA4C/+B,KAAK6R,QAAOkwB,EAAAhD,EAAlD5a,SAAAA,OAAQ,IAAA4d,EAAG,IAAGA,EAAEvX,EAAWuU,EAAXvU,YAAarlB,EAAI45B,EAAJ55B,KAKnC,KAAmC,QAA5BsP,EAAK+V,EAAYgF,aAA0B,IAAP/a,OAAgB,EAASA,EAAG5L,SACnE,OAAO,EAKX,GAxDR,SAAuCgJ,GACnC,MAAyB,WAAjBA,EAAQnF,MACK,oBAAjBmF,EAAQ1M,OACPk8B,GAAuBxvB,EAAQuS,KACxC,CAoDY4d,CAA8BhiC,KAAK6R,SAAU,CAC7C,IAAAiuB,EAA0D9/B,KAAK6R,QAAjBA,GAA5BiuB,EAAVvV,WAAoBuV,EAAR/N,SAAqB+N,EAAXtV,aAAuBzU,EAAAA,GAAAA,GAAA+pB,EAAA9pB,KAC/CisB,EArDlB,SAA8B1d,EAAW1S,GAmBrC,IAbA,IAAMqwB,EAAkB,IAAInE,IAAmBp2B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC1CkK,GAAO,IACV0S,UAAAA,EACAQ,OAAQ,EACRJ,MAAO,KAEPpjB,EAAQ,CAAEgvB,MAAM,EAAOjwB,MAAOikB,EAAU,IACtC4d,EAAwB,GAK1BhP,EAAI,GACA5xB,EAAMgvB,MAAQ4C,EA9BN,KA+BZ5xB,EAAQ2gC,EAAgBrC,OAAO1M,GAC/BgP,EAAsBzhC,KAAKa,EAAMjB,OACjC6yB,GAtCY,GAwChB,MAAO,CACHqJ,WAAO/5B,EACP8hB,UAAW4d,EACXhe,SAAUgP,EA3CE,GA4CZ/O,KAAM,SAEd,CAuB0Cge,CAAqB7d,EAAW1S,GAC9D0S,EAAY0d,EAAsB1d,UAClCJ,EAAW8d,EAAsB9d,SACjCnkB,KAAK6R,QAAQ2qB,MAAQyF,EAAsBzF,MAC3Cx8B,KAAK6R,QAAQuS,KAAO6d,EAAsB7d,IAC9C,CACA,IAAMje,EEtGd,SAAsBqR,EAAS6qB,EAAW9d,GAA8F,IAAAzhB,EAAAN,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC+uB,EAAAzuB,EAA/E6hB,MAAAA,OAAK,IAAA4M,EAAG,EAACA,EAAAkC,EAAA3wB,EAAEqhB,SAAAA,OAAQ,IAAAsP,EAAG,IAAGA,EAAAhC,EAAA3uB,EAAEiiB,OAAAA,OAAM,IAAA0M,EAAG,EAACA,EAAAhM,EAAA3iB,EAAEkiB,WAAAA,OAAU,IAAAS,EAAG,OAAMA,EAAErB,EAAIthB,EAAJshB,KAAMoY,EAAK15B,EAAL05B,MAC/G8F,GAAe7W,EAAAA,GAAAA,GAAA,GAAM4W,EAAY9d,GACnCiY,IACA8F,EAAgBrtB,OAASunB,GAC7B,IAAM5D,EAAS6I,GAAwBrd,GAMvC,OAFI5f,MAAMC,QAAQm0B,KACd0J,EAAgB1J,OAASA,GACtBphB,EAAQvS,QAAQq9B,EAAiB,CACpC3d,MAAAA,EACAR,SAAAA,EACAyU,OAASp0B,MAAMC,QAAQm0B,GAAmB,SAATA,EACjChK,KAAM,OACN2T,WAAYxd,EAAS,EACrByd,UAA0B,YAAfxd,EAA2B,YAAc,UAE5D,CFoF0Byd,CAAajY,EAAYgF,MAAM3mB,QAAS1D,EAAMof,GAAS5c,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO3H,KAAK6R,SAAO,IAAEsS,SAAAA,KAyB9F,OAtBAhe,EAAUi4B,UAAYvY,GAAKxiB,MACvBrD,KAAK0iC,iBACLv8B,EAAUw8B,SAAW3iC,KAAK0iC,gBAC1B1iC,KAAK0iC,qBAAkBjgC,GAWvB0D,EAAUy8B,SAAW,WACjB,IAAQrY,EAAenM,EAAKvM,QAApB0Y,WACRC,EAAYzf,IAAIwa,GAAiBhB,EAAWnG,EAAKvM,QAAS2T,IAC1D+E,GAAcA,IACdnM,EAAKzb,SACLyb,EAAKkU,wBACT,EAEG,CACHnsB,UAAAA,EACAge,SAAAA,EACAI,UAAWA,EAEnB,GAAC,CAAAlkB,IAAA,WAAAwK,IACD,WACI,IAAQoP,EAAaja,KAAbia,SACR,IAAKA,EACD,OAAO,EACX,IAAQkK,EAAalK,EAAbkK,SACR,OAAOP,GAAsBO,EACjC,GAAC,CAAA9jB,IAAA,OAAAwK,IACD,WACI,IAAQoP,EAAaja,KAAbia,SACR,IAAKA,EACD,OAAO,EACX,IAAQ9T,EAAc8T,EAAd9T,UACR,OAAOyd,GAAsBzd,EAAUm4B,aAAe,EAC1D,EAACvzB,IACD,SAAS+a,GACL,IAAQ7L,EAAaja,KAAbia,SACHA,IAEiBA,EAAd9T,UACEm4B,YAAc5a,GAAsBoC,GAClD,GAAC,CAAAzlB,IAAA,QAAAwK,IACD,WACI,IAAQoP,EAAaja,KAAbia,SACR,OAAKA,EAEiBA,EAAd9T,UACS08B,aAFN,CAGf,EAAC93B,IACD,SAAU21B,GACN,IAAQzmB,EAAaja,KAAbia,SACHA,IAEiBA,EAAd9T,UACE08B,aAAenC,EAC7B,GAAC,CAAArgC,IAAA,QAAAwK,IACD,WACI,IAAQoP,EAAaja,KAAbia,SACR,OAAKA,EAEiBA,EAAd9T,UACS28B,UAFN,MAGf,GACA,CAAAziC,IAAA,iBAAAC,MAIA,SAAeqiC,GACX,GAAK3iC,KAAK6xB,UAGL,CACD,IAAQ5X,EAAaja,KAAbia,SACR,IAAKA,EACD,OAAOI,GACX,IAAQlU,EAAc8T,EAAd9T,UACRA,EAAUw8B,SAAWA,EACrBx8B,EAAUy8B,SAAW,IACzB,MATI5iC,KAAK0iC,gBAAkBC,EAU3B,OAAOtoB,EACX,GAAC,CAAAha,IAAA,OAAAC,MACD,WACI,IAAIN,KAAK2xB,UAAT,CAEA,IAAQ1X,EAAaja,KAAbia,SACR,GAAKA,EAAL,CAEA,IAAQ9T,EAAc8T,EAAd9T,UACoB,aAAxBA,EAAU28B,WACV9iC,KAAK4xB,wBAETzrB,EAAUw5B,MALA,CAHA,CASd,GAAC,CAAAt/B,IAAA,QAAAC,MACD,WACI,IAAQ2Z,EAAaja,KAAbia,SACHA,GAEiBA,EAAd9T,UACEy5B,OACd,GAAC,CAAAv/B,IAAA,OAAAC,MACD,WAGI,GAFAN,KAAKypB,SAAS9mB,SACd3C,KAAK2xB,WAAY,EACE,SAAf3xB,KAAKuB,MAAT,CAEA,IAAQ0Y,EAAaja,KAAbia,SACR,GAAKA,EAAL,CAEA,IAAQ9T,EAAyB8T,EAAzB9T,UAAWoe,EAActK,EAAdsK,UACnB,GAA4B,SAAxBpe,EAAU28B,WACc,aAAxB38B,EAAU28B,UADd,CAYA,GAAI9iC,KAAK6lB,KAAM,CACX,IAAAgb,EAA0D7gC,KAAK6R,QAAvD2Y,EAAWqW,EAAXrW,YAAsC3Y,GAAjBgvB,EAAR9O,SAAoB8O,EAAVtW,YAAsBxU,EAAAA,GAAAA,GAAA8qB,EAAAkC,KAC/Cb,EAAkB,IAAInE,IAAmBp2B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC1CkK,GAAO,IACV0S,UAAAA,KAEEye,EAAatf,GAAsB1jB,KAAK6lB,MAC9C2E,EAAYyY,gBAAgBf,EAAgBrC,OAAOmD,EArN3C,IAqNqE1iC,MAAO4hC,EAAgBrC,OAAOmD,GAAY1iC,MArN/G,GAsNZ,CACAN,KAAK2C,QAlBL,CALU,CAHA,CA2Bd,GAAC,CAAAtC,IAAA,WAAAC,MACD,WACI,IAAQ2Z,EAAaja,KAAbia,SACHA,GAELA,EAAS9T,UAAUq6B,QACvB,GAAC,CAAAngC,IAAA,SAAAC,MACD,WACI,IAAQ2Z,EAAaja,KAAbia,SACHA,GAELA,EAAS9T,UAAUxD,QACvB,IAAC,EAAAtC,IAAA,WAAAC,MACD,SAAgBuR,GACZ,IAAQ2Y,EAA8D3Y,EAA9D2Y,YAAarlB,EAAiD0M,EAAjD1M,KAAM8f,EAA2CpT,EAA3CoT,YAAaD,EAA8BnT,EAA9BmT,WAAYhB,EAAkBnS,EAAlBmS,QAAStX,EAASmF,EAATnF,KAC7D,OAAQg1B,MACJv8B,GACA08B,GAAkBrhC,IAAI2E,IACtBqlB,GACAA,EAAYgF,OACZhF,EAAYgF,MAAM3mB,mBAAmBq6B,cAKpC1Y,EAAYgF,MAAMjS,WAAWwU,WAC7B9M,GACc,WAAfD,GACY,IAAZhB,GACS,YAATtX,CACR,KAACo1B,CAAA,CAvMqB,CAAS1Q,IGlE7B+R,GAAqB,SAACh+B,EAAM7E,EAAO6S,GAAM,IAAEgH,EAAU3X,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGgV,EAAOhV,UAAAzB,OAAA,EAAAyB,UAAA,QAAAC,EAAE2gC,EAAS5gC,UAAAzB,OAAA,EAAAyB,UAAA,QAAAC,EAAA,OAAK,SAAC8nB,GACtF,IAAM8Y,EAAkBje,GAAmBjL,EAAYhV,IAAS,CAAC,EAM3Dwf,EAAQ0e,EAAgB1e,OAASxK,EAAWwK,OAAS,EAK3D2e,EAAsBnpB,EAAhBgL,QAAAA,OAAO,IAAAme,EAAG,EAACA,EACjBne,GAAoBzB,GAAsBiB,GAC1C,IAAI9S,GAAOlK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACP4c,UAAW/f,MAAMC,QAAQ0O,GAAUA,EAAS,CAAC,KAAMA,GACnDiR,KAAM,UACNX,SAAUnjB,EAAMoL,eACb23B,GAAe,IAClB1e,OAAQQ,EACR4M,SAAU,SAACxtB,GACPjE,EAAMyK,IAAIxG,GACV8+B,EAAgBtR,UAAYsR,EAAgBtR,SAASxtB,EACzD,EACAgmB,WAAY,WACRA,IACA8Y,EAAgB9Y,YAAc8Y,EAAgB9Y,YAClD,EACAplB,KAAAA,EACAqlB,YAAalqB,EACbkX,QAAS4rB,OAAY3gC,EAAY+U,IAMhCiN,GAAoB4e,KACrBxxB,GAAOlK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAkK,GACAwS,GAAqBlf,EAAM0M,KAQlCA,EAAQsS,WACRtS,EAAQsS,SAAWT,GAAsB7R,EAAQsS,WAEjDtS,EAAQoT,cACRpT,EAAQoT,YAAcvB,GAAsB7R,EAAQoT,mBAEnCxiB,IAAjBoP,EAAQqT,OACRrT,EAAQ0S,UAAU,GAAK1S,EAAQqT,MAEnC,IAAIqe,GAAa,EAkBjB,IAjBqB,IAAjB1xB,EAAQnF,OACRmF,EAAQsS,SAAW,EACG,IAAlBtS,EAAQ8S,QACR4e,GAAa,KAGjBle,IACAxlB,KACA0jC,GAAa,EACb1xB,EAAQsS,SAAW,EACnBtS,EAAQ8S,MAAQ,GAOhB4e,IAAeH,QAA6B3gC,IAAhBnC,EAAMuK,MAAqB,CACvD,IAAM2a,EAAgBD,GAAiB1T,EAAQ0S,UAAW8e,GAC1D,QAAsB5gC,IAAlB+iB,EAKA,YAJAhL,GAAAA,QAAa,WACT3I,EAAQkgB,SAASvM,GACjB3T,EAAQ0Y,YACZ,GAGR,CAMA,OAAK6Y,GAAatB,GAAqB0B,SAAS3xB,GACrC,IAAIiwB,GAAqBjwB,GAGzB,IAAIksB,GAAoBlsB,EAEvC,CAAC,ECvGD,SAAS4xB,GAAwBnjC,GAC7B,OAAO+E,QAAQoG,EAAcnL,IAAUA,EAAMG,IACjD,CCJA,SAASijC,GAAcvH,EAAKwH,IACG,IAAvBxH,EAAIv7B,QAAQ+iC,IACZxH,EAAIz7B,KAAKijC,EACjB,CACA,SAASC,GAAWzH,EAAKwH,GACrB,IAAMhjC,EAAQw7B,EAAIv7B,QAAQ+iC,GACtBhjC,GAAS,GACTw7B,EAAIt7B,OAAOF,EAAO,EAC1B,CCRwD,IAElDkjC,GAAmB,WACrB,SAAAA,KAAc9jC,EAAAA,EAAAA,GAAA,KAAA8jC,GACV7jC,KAAK8jC,cAAgB,EACzB,CA+BC,OA/BA1jC,EAAAA,EAAAA,GAAAyjC,EAAA,EAAAxjC,IAAA,MAAAC,MACD,SAAI4a,GAAS,IAAA+C,EAAA,KAET,OADAylB,GAAc1jC,KAAK8jC,cAAe5oB,GAC3B,kBAAM0oB,GAAW3lB,EAAK6lB,cAAe5oB,EAAQ,CACxD,GAAC,CAAA7a,IAAA,SAAAC,MACD,SAAO2b,EAAGC,EAAGsP,GACT,IAAMuY,EAAmB/jC,KAAK8jC,cAAc/iC,OAC5C,GAAKgjC,EAEL,GAAyB,IAArBA,EAIA/jC,KAAK8jC,cAAc,GAAG7nB,EAAGC,EAAGsP,QAG5B,IAAK,IAAIzoB,EAAI,EAAGA,EAAIghC,EAAkBhhC,IAAK,CAKvC,IAAMmY,EAAUlb,KAAK8jC,cAAc/gC,GACnCmY,GAAWA,EAAQe,EAAGC,EAAGsP,EAC7B,CAER,GAAC,CAAAnrB,IAAA,UAAAC,MACD,WACI,OAAON,KAAK8jC,cAAc/iC,MAC9B,GAAC,CAAAV,IAAA,QAAAC,MACD,WACIN,KAAK8jC,cAAc/iC,OAAS,CAChC,KAAC8iC,CAAA,CAlCoB,GCSnBG,GAAU,SAAC1jC,GACb,OAAQutB,MAAM9gB,WAAWzM,GAC7B,EACM2jC,GAAsB,CACxBp7B,aAASpG,GAOPyhC,GAAW,WASb,SAAAA,EAAYzqB,GAAoB,IAAAwE,EAAA,KAAdpM,EAAOrP,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACzC,EAAAA,EAAAA,GAAA,KAAAmkC,GAK1BlkC,KAAKmkC,QAAU,UAQfnkC,KAAKokC,kBAAmB,EAIxBpkC,KAAKqkC,OAAS,CAAC,EACfrkC,KAAKskC,gBAAkB,SAAC//B,GAAqB,IAAlB8E,IAAM7G,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,KAAAA,UAAA,GACvB87B,EAAczY,GAAKxiB,MAMrB4a,EAAKsmB,YAAcjG,GACnBrgB,EAAKumB,oBAETvmB,EAAKoF,KAAOpF,EAAKpV,QACjBoV,EAAKwmB,WAAWlgC,GAEZ0Z,EAAKpV,UAAYoV,EAAKoF,MAAQpF,EAAKomB,OAAOK,QAC1CzmB,EAAKomB,OAAOK,OAAOC,OAAO1mB,EAAKpV,SAG/BQ,GAAU4U,EAAKomB,OAAOO,eACtB3mB,EAAKomB,OAAOO,cAAcD,OAAO1mB,EAAKpV,QAE9C,EACA7I,KAAK6kC,aAAc,EACnB7kC,KAAKykC,WAAWhrB,GAChBzZ,KAAKokC,iBAAmBJ,GAAQhkC,KAAK6I,SACrC7I,KAAKwvB,MAAQ3d,EAAQ2d,KACzB,CA4OC,OA5OApvB,EAAAA,EAAAA,GAAA8jC,EAAA,EAAA7jC,IAAA,aAAAC,MACD,SAAWuI,GACP7I,KAAK6I,QAAUA,EACf7I,KAAKukC,UAAY1e,GAAKxiB,KAC1B,GAAC,CAAAhD,IAAA,oBAAAC,MACD,WAAiD,IAA/BwkC,EAActiC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAGxC,KAAK6I,QACpC7I,KAAK8kC,eAAiBA,EACtB9kC,KAAK+kC,cAAgB/kC,KAAKukC,SAC9B,GACA,CAAAlkC,IAAA,WAAAC,MAwCA,SAAS0kC,GAIL,OAAOhlC,KAAKilC,GAAG,SAAUD,EAC7B,GAAC,CAAA3kC,IAAA,KAAAC,MACD,SAAG2a,EAAW3Y,GAAU,IAAA8b,EAAA,KACfpe,KAAKqkC,OAAOppB,KACbjb,KAAKqkC,OAAOppB,GAAa,IAAI4oB,IAEjC,IAAMqB,EAAcllC,KAAKqkC,OAAOppB,GAAWxa,IAAI6B,GAC/C,MAAkB,WAAd2Y,EACO,WACHiqB,IAKA1qB,GAAAA,MAAW,WACF4D,EAAKimB,OAAOK,OAAOS,WACpB/mB,EAAKsf,MAEb,GACJ,EAEGwH,CACX,GAAC,CAAA7kC,IAAA,iBAAAC,MACD,WACI,IAAK,IAAM8kC,KAAiBplC,KAAKqkC,OAC7BrkC,KAAKqkC,OAAOe,GAAepkC,OAEnC,GACA,CAAAX,IAAA,SAAAC,MAKA,SAAO+kC,EAAeC,GAClBtlC,KAAKqlC,cAAgBA,EACrBrlC,KAAKslC,kBAAoBA,CAC7B,GACA,CAAAjlC,IAAA,MAAAC,MAeA,SAAIiE,GAAkB,IAAf8E,IAAM7G,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,KAAAA,UAAA,GACJ6G,GAAWrJ,KAAKqlC,cAIjBrlC,KAAKqlC,cAAc9gC,EAAGvE,KAAKskC,iBAH3BtkC,KAAKskC,gBAAgB//B,EAAG8E,EAKhC,GAAC,CAAAhJ,IAAA,kBAAAC,MACD,SAAgB+iB,EAAMxa,EAASrH,GAC3BxB,KAAK+K,IAAIlC,GACT7I,KAAKqjB,UAAO5gB,EACZzC,KAAK8kC,eAAiBzhB,EACtBrjB,KAAK+kC,cAAgB/kC,KAAKukC,UAAY/iC,CAC1C,GACA,CAAAnB,IAAA,OAAAC,MAIA,SAAKiE,GAAwB,IAArBghC,IAAY/iC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,KAAAA,UAAA,GAChBxC,KAAKskC,gBAAgB//B,GACrBvE,KAAKqjB,KAAO9e,EACZvE,KAAK+kC,cAAgB/kC,KAAK8kC,oBAAiBriC,EAC3C8iC,GAAgBvlC,KAAK09B,OACjB19B,KAAKslC,mBACLtlC,KAAKslC,mBACb,GACA,CAAAjlC,IAAA,MAAAC,MAOA,WAII,OAHI2jC,GAAoBp7B,SACpBo7B,GAAoBp7B,QAAQnI,KAAKV,MAE9BA,KAAK6I,OAChB,GACA,CAAAxI,IAAA,cAAAC,MAGA,WACI,OAAON,KAAKqjB,IAChB,GACA,CAAAhjB,IAAA,cAAAC,MAOA,WACI,IAAMg+B,EAAczY,GAAKxiB,MACzB,IAAKrD,KAAKokC,uBACkB3hC,IAAxBzC,KAAK8kC,gBACLxG,EAAct+B,KAAKukC,UAjOJ,GAkOf,OAAO,EAEX,IAAM/iC,EAAQ8B,KAAKE,IAAIxD,KAAKukC,UAAYvkC,KAAK+kC,cApO1B,IAsOnB,OAAOhS,GAAkBhmB,WAAW/M,KAAK6I,SACrCkE,WAAW/M,KAAK8kC,gBAAiBtjC,EACzC,GACA,CAAAnB,IAAA,QAAAC,MAYA,SAAMklC,GAAgB,IAAAC,EAAA,KAElB,OADAzlC,KAAK09B,OACE,IAAI5K,SAAQ,SAACJ,GAChB+S,EAAKZ,aAAc,EACnBY,EAAKt/B,UAAYq/B,EAAe9S,GAC5B+S,EAAKpB,OAAOqB,gBACZD,EAAKpB,OAAOqB,eAAef,QAEnC,IAAG9R,MAAK,WACA4S,EAAKpB,OAAOsB,mBACZF,EAAKpB,OAAOsB,kBAAkBhB,SAElCc,EAAKG,gBACT,GACJ,GACA,CAAAvlC,IAAA,OAAAC,MAKA,WACQN,KAAKmG,YACLnG,KAAKmG,UAAUu3B,OACX19B,KAAKqkC,OAAOwB,iBACZ7lC,KAAKqkC,OAAOwB,gBAAgBlB,UAGpC3kC,KAAK4lC,gBACT,GACA,CAAAvlC,IAAA,cAAAC,MAKA,WACI,QAASN,KAAKmG,SAClB,GAAC,CAAA9F,IAAA,iBAAAC,MACD,kBACWN,KAAKmG,SAChB,GACA,CAAA9F,IAAA,UAAAC,MASA,WACIN,KAAK8lC,iBACL9lC,KAAK09B,OACD19B,KAAKslC,mBACLtlC,KAAKslC,mBAEb,KAACpB,CAAA,CAhSY,GAkSjB,SAAS1Z,GAAY/Q,EAAM5H,GACvB,OAAO,IAAIqyB,GAAYzqB,EAAM5H,EACjC,C,sCClTA,SAASk0B,GAAe19B,EAAehI,EAAKC,GACpC+H,EAAc29B,SAAS3lC,GACvBgI,EAAc4f,SAAS5nB,GAAK0K,IAAIzK,GAGhC+H,EAAc49B,SAAS5lC,EAAKmqB,GAAYlqB,GAEhD,CACA,SAAS4lC,GAAU79B,EAAeqQ,GAC9B,I3FZkCnU,E2FalCzB,EADiBygB,GAAelb,EAAeqQ,IACsB,CAAC,EAACytB,EAAArjC,EAAjEoX,cAAAA,OAAa,IAAAisB,EAAG,CAAC,EAACA,EAAsBhzB,GAAtBrQ,EAAEqX,YAA0BpE,EAAAA,GAAAA,GAAAjT,EAAAkT,KAEpD,IAAK,IAAM3V,KADX8S,GAAMxL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQwL,GAAW+G,GACC,CAEtB6rB,GAAe19B,EAAehI,G3FjBAkE,E2FgBa4O,EAAO9S,G3Fd/CwY,GAAkBtU,GAAKA,EAAEA,EAAExD,OAAS,IAAM,EAAIwD,G2FgBrD,CACJ,C,sCCVA,SAAS6hC,GAAoBtjC,EAAoCzC,GAAK,IAAtCgmC,EAAavjC,EAAbujC,cAAeC,EAAcxjC,EAAdwjC,eACrCC,EAAcF,EAAcjiC,eAAe/D,KAAgC,IAAxBimC,EAAejmC,GAExE,OADAimC,EAAejmC,IAAO,EACfkmC,CACX,CACA,SAASC,GAAcn+B,EAAeo+B,GAAmE,IACjGhyB,EADiGtK,EAAA3H,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACkkC,EAAAv8B,EAA1Cwa,MAAAA,OAAK,IAAA+hB,EAAG,EAACA,EAAEC,EAAkBx8B,EAAlBw8B,mBAAoBj6B,EAAIvC,EAAJuC,KAExFk6B,EAAsFH,EAAhFtsB,WAAAA,OAAU,IAAAysB,EAAGv+B,EAAcgc,uBAAsBuiB,EAAE1sB,EAA6BusB,EAA7BvsB,cAAkB/G,GAAM4C,EAAAA,GAAAA,GAAK0wB,EAAmBzwB,IACnG6wB,EAAax+B,EAAc4f,SAAS,cACtC0e,IACAxsB,EAAawsB,GACjB,IAAMG,EAAa,GACbC,EAAqBr6B,GACvBrE,EAAciB,gBACdjB,EAAciB,eAAe09B,WAAWt6B,GAAM7F,EAAA,SACvCxG,GACP,IAAMC,EAAQ+H,EAAc4f,SAAS5nB,EAAgD,QAA1CoU,EAAKpM,EAAcuJ,aAAavR,UAAyB,IAAPoU,EAAgBA,EAAK,MAC5G2F,EAAcjH,EAAO9S,GAC3B,QAAoBoC,IAAhB2X,GACC2sB,GACGX,GAAqBW,EAAoB1mC,GAC7C,iBAEJ,IAAMgjC,GAAe17B,EAAAA,EAAAA,GAAA,CACjBgd,MAAAA,EACAQ,QAAS,GACNC,GAAmBjL,GAAc,CAAC,EAAG9Z,IAMxC+iC,GAAY,EAChB,GAAIl6B,OAAO+9B,wBAAyB,CAChC,IAAMC,EAAW7+B,EAAckV,WAAW3d,GAC1C,GAAIsnC,EAAU,CACV,IAAM/hB,EAAUjc,OAAO+9B,wBAAwBC,EAAU7mC,GACzC,OAAZ8kB,IACAke,EAAgBle,QAAUA,EAC1Bie,GAAY,EAEpB,CACJ,CACA9iC,EAAMqE,MAAMw+B,GAAmB9iC,EAAKC,EAAO8Z,EAAa/R,EAAc8+B,oBAAsB77B,EAAe9K,IAAIH,GACzG,CAAEqM,MAAM,GACR22B,EAAiBh7B,EAAe+6B,IACtC,IAAMj9B,EAAY7F,EAAM6F,UACpBA,IACIs9B,GAAwBoD,KACxBA,EAAWpmC,IAAIJ,GACf8F,EAAU0sB,MAAK,kBAAMgU,EAAWjkC,OAAOvC,EAAI,KAE/CymC,EAAWpmC,KAAKyF,GACnB,EAtCL,IAAK,IAAM9F,KAAO8S,EAAQtM,EAAfxG,GA+CX,OAPI6Z,GACA4Y,QAAQlR,IAAIklB,GAAYjU,MAAK,WACzBrY,GAAAA,QAAa,WACTN,GAAiBgsB,GAAU79B,EAAe6R,EAC9C,GACJ,IAEG4sB,CACX,CC1EA,SAASM,GAAe/+B,EAAeg/B,GAAuB,IACtD5yB,EADwC5C,EAAOrP,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEjDyX,EAAWsJ,GAAelb,EAAeg/B,EAA0B,SAAjBx1B,EAAQnF,KACjB,QAAxC+H,EAAKpM,EAAcG,uBAAoC,IAAPiM,OAAgB,EAASA,EAAGjK,YAC7E/H,GACNK,EAAkEmX,GAAY,CAAC,EAACqtB,EAAAxkC,EAA1EqX,WAAAA,OAAU,IAAAmtB,EAAGj/B,EAAcgc,wBAA0B,CAAC,EAACijB,EACzDz1B,EAAQ80B,qBACRxsB,EAAatI,EAAQ80B,oBAMzB,IAAMY,EAAettB,EACf,kBAAM6Y,QAAQlR,IAAI4kB,GAAcn+B,EAAe4R,EAAUpI,GAAS,EAClE,kBAAMihB,QAAQJ,SAAS,EAKvB8U,EAAqBn/B,EAAco/B,iBAAmBp/B,EAAco/B,gBAAgBt4B,KACpF,WAAsB,IAArBu4B,EAAYllC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACdmlC,EAAkExtB,EAAUytB,EAAAD,EAApE/iB,cAAAA,OAAa,IAAAgjB,EAAG,EAACA,EAAE/iB,EAAe8iB,EAAf9iB,gBAAiBC,EAAgB6iB,EAAhB7iB,iBAC5C,OAAO+iB,GAAgBx/B,EAAeg/B,EAASziB,EAAgB8iB,EAAc7iB,EAAiBC,EAAkBjT,EACpH,EACE,kBAAMihB,QAAQJ,SAAS,EAK7BoV,EAAiB3tB,EAATuK,EAAIojB,EAAJpjB,KACR,GAAIA,EAAM,CACN,IAAAva,EAA+B,mBAATua,EAChB,CAAC6iB,EAAcC,GACf,CAACA,EAAoBD,GAAapf,GAAA3B,EAAAA,GAAAA,GAAArc,EAAA,GAFjC49B,EAAK5f,EAAA,GAAE6f,EAAI7f,EAAA,GAGlB,OAAO4f,IAAQlV,MAAK,kBAAMmV,GAAM,GACpC,CAEI,OAAOlV,QAAQlR,IAAI,CAAC2lB,IAAgBC,EAAmB31B,EAAQ8S,QAEvE,CACA,SAASkjB,GAAgBx/B,EAAeg/B,GAAgF,IAAvEziB,EAAapiB,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGqiB,EAAeriB,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGsiB,EAAgBtiB,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGqP,EAAOrP,UAAAzB,OAAA,EAAAyB,UAAA,QAAAC,EAC5GqkC,EAAa,GACbmB,GAAsB5/B,EAAco/B,gBAAgBt4B,KAAO,GAAK0V,EAChEqjB,EAA+C,IAArBpjB,EAC1B,eAAC/hB,EAACP,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAC,OAAKO,EAAI8hB,CAAe,EAC9B,eAAC9hB,EAACP,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAC,OAAKylC,EAAqBllC,EAAI8hB,CAAe,EAUzD,OATArgB,MAAM0gB,KAAK7c,EAAco/B,iBACpBU,KAAKC,IACL3kC,SAAQ,SAAC+a,EAAOzb,GACjByb,EAAMmmB,OAAO,iBAAkB0C,GAC/BP,EAAWpmC,KAAK0mC,GAAe5oB,EAAO6oB,GAAO1/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtCkK,GAAO,IACV8S,MAAOC,EAAgBsjB,EAAwBnlC,MAChD8vB,MAAK,kBAAMrU,EAAMmmB,OAAO,oBAAqB0C,EAAQ,IAC5D,IACOvU,QAAQlR,IAAIklB,EACvB,CACA,SAASsB,GAAgBnsB,EAAGC,GACxB,OAAOD,EAAEosB,iBAAiBnsB,EAC9B,C,sCCvDMosB,IAAuB3d,EAAAA,GAAAA,GAAI/lB,GAAsBw4B,UACjDmL,GAAoB3jC,EAAqB7D,OAC/C,SAASynC,GAAYngC,GACjB,OAAO,SAACy+B,GAAU,OAAKhU,QAAQlR,IAAIklB,EAAWld,KAAI,SAAA9mB,GAAA,IAAGqD,EAASrD,EAATqD,UAAW0L,EAAO/O,EAAP+O,QAAO,OCN3E,SAA8BxJ,EAAeqQ,GAA0B,IAE/DvS,EAFiD0L,EAAOrP,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFA6F,EAAcs8B,OAAO,iBAAkBjsB,GAEnClU,MAAMC,QAAQiU,GAAa,CAC3B,IAAMouB,EAAapuB,EAAWkR,KAAI,SAACyd,GAAO,OAAKD,GAAe/+B,EAAeg/B,EAASx1B,EAAQ,IAC9F1L,EAAY2sB,QAAQlR,IAAIklB,EAC5B,MACK,GAA0B,kBAAfpuB,EACZvS,EAAYihC,GAAe/+B,EAAeqQ,EAAY7G,OAErD,CACD,IAAM42B,EAA2C,oBAAf/vB,EAC5B6K,GAAelb,EAAeqQ,EAAY7G,EAAQrH,QAClDkO,EACNvS,EAAY2sB,QAAQlR,IAAI4kB,GAAcn+B,EAAeogC,EAAoB52B,GAC7E,CACA,OAAO1L,EAAU0sB,MAAK,WAClBrY,GAAAA,YAAiB,WACbnS,EAAcs8B,OAAO,oBAAqBjsB,EAC9C,GACJ,GACJ,CDfkFgwB,CAAqBrgC,EAAelC,EAAW0L,EAAQ,IAAE,CAC3I,CACA,SAAS82B,GAAqBtgC,GAC1B,IAAIpD,EAAUujC,GAAYngC,GACpB9G,EA+RC,CACH0D,QAAS2jC,IAAgB,GACzBC,YAAaD,KACbprB,WAAYorB,KACZz0B,SAAUy0B,KACVE,UAAWF,KACXG,WAAYH,KACZxiC,KAAMwiC,MArSNI,GAAkB,EAiCtB,SAASz/B,EAAe0/B,GA8BpB,IA7BA,IAAMjkC,EAAQqD,EAAckV,WACtB9X,EAAU4C,EAAc6gC,mBAAkB,IAAS,CAAC,EAKpDpC,EAAa,GAKbqC,EAAc,IAAIhpC,IAMpBipC,EAAkB,CAAC,EAKnBC,EAAsB/J,IAC1Bz4B,EAAA,SAMS9D,GACL,IAAM2J,EAAO47B,GAAqBvlC,GAC5BumC,EAAY/nC,EAAMmL,GAClB1G,OAAuBvD,IAAhBuC,EAAM0H,GAAsB1H,EAAM0H,GAAQjH,EAAQiH,GACzD68B,EAAgBjlC,EAAe0B,GAK/BwjC,EAAc98B,IAASu8B,EAAoBK,EAAUlsB,SAAW,MAClD,IAAhBosB,IACAH,EAAsBtmC,GAO1B,IAAI0mC,EAAczjC,IAASP,EAAQiH,IAAS1G,IAAShB,EAAM0H,IAAS68B,EAepE,GAXIE,GACAT,GACA3gC,EAAcqhC,yBACdD,GAAc,GAMlBH,EAAUjD,eAAa1+B,EAAAA,EAAAA,GAAA,GAAQyhC,IAI7BE,EAAUlsB,UAA4B,OAAhBosB,IAElBxjC,IAASsjC,EAAUK,UAErBjlC,EAAoBsB,IACJ,mBAATA,EACP,iBAOJ,IAAM4jC,EA6JlB,SAAgCvmB,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAI7e,MAAMC,QAAQ2e,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,CACX,CArKqCwmB,CAAuBP,EAAUK,SAAU3jC,GAChE8jC,EAAoBF,GAEnBl9B,IAASu8B,GACNK,EAAUlsB,WACTqsB,GACDF,GAEHxmC,EAAIsmC,GAAuBE,EAC5BQ,GAAuB,EAKrBC,EAAiBxlC,MAAMC,QAAQuB,GAAQA,EAAO,CAACA,GAKjDikC,EAAiBD,EAAepoC,OA7HZ,SAAC8K,GAAI,OAAK,SAAC7K,EAAK6W,GAC5C,IAAIjE,EACEwF,EAAWsJ,GAAelb,EAAeqQ,EAAqB,SAAThM,EACZ,QAAxC+H,EAAKpM,EAAcG,uBAAoC,IAAPiM,OAAgB,EAASA,EAAGjK,YAC7E/H,GACN,GAAIwX,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkB/G,GAAM4C,EAAAA,GAAAA,GAAKkE,EAAQjE,IACzDnU,GAAG8F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ9F,GAAQsR,GAAW+G,EAClC,CACA,OAAOrY,CACX,CAAC,CAmHkDqoC,CAAwBx9B,GAAO,CAAC,IACvD,IAAhB88B,IACAS,EAAiB,CAAC,GAUtB,IAAAE,EAAoCb,EAA5Bc,mBAAAA,OAAkB,IAAAD,EAAG,CAAC,EAACA,EACzBE,GAAO1iC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNyiC,GACAH,GAEDK,EAAgB,SAACjqC,GACnBypC,GAAoB,EAChBX,EAAY3oC,IAAIH,KAChB0pC,GAAuB,EACvBZ,EAAYroC,OAAOT,IAEvBipC,EAAUhD,eAAejmC,IAAO,CACpC,EACA,IAAK,IAAMA,KAAOgqC,EAAS,CACvB,IAAMjnB,EAAO6mB,EAAe5pC,GACtBgjB,EAAO+mB,EAAmB/pC,GAEhC,IAAI+oC,EAAgBhlC,eAAe/D,GAAnC,EAMIwY,GAAkBuK,IAASvK,GAAkBwK,IAC1BF,GAAeC,EAAMC,GAGtBD,IAASC,QAGd5gB,IAAT2gB,GAA+B,OAATA,EAEtBknB,EAAcjqC,GAId8oC,EAAY1oC,IAAIJ,QAGNoC,IAAT2gB,GAAsB+lB,EAAY3oC,IAAIH,GAK3CiqC,EAAcjqC,GAOdipC,EAAUjD,cAAchmC,IAAO,CAjCvB,CAmChB,CAKAipC,EAAUK,SAAW3jC,EACrBsjC,EAAUc,mBAAqBH,EAI3BX,EAAUlsB,WACVgsB,GAAezhC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQyhC,GAAoBa,IAE3CjB,GAAmB3gC,EAAcS,wBACjCghC,GAAoB,IAKpBA,GAAuBL,IAAeM,GACtCjD,EAAWpmC,KAAIqd,MAAf+oB,GAAUnc,EAAAA,GAAAA,GAASqf,EAAepgB,KAAI,SAACzjB,GAAS,MAAM,CAClDA,UAAWA,EACX0L,QAAS,CAAEnF,KAAAA,GACd,KACJ,EA5JI3J,EAAI,EAAGA,EAAIwlC,GAAmBxlC,IAAK8D,EAAnC9D,GAmKT,GAAIomC,EAAYh6B,KAAM,CAClB,IAAMo7B,EAAoB,CAAC,EAC3BpB,EAAY1lC,SAAQ,SAACpD,GACjB,IAAMmqC,EAAiBniC,EAAcoiC,cAAcpqC,GACnDkqC,EAAkBlqC,QACKoC,IAAnB+nC,EAA+B,KAAOA,CAC9C,IACA1D,EAAWpmC,KAAK,CAAEyF,UAAWokC,GACjC,CACA,IAAIG,EAAgBrlC,QAAQyhC,EAAW/lC,QAOvC,OANIioC,IACmB,IAAlBhkC,EAAMU,SAAqBV,EAAMU,UAAYV,EAAMC,SACnDoD,EAAcqhC,yBACfgB,GAAgB,GAEpB1B,GAAkB,EACX0B,EAAgBzlC,EAAQ6hC,GAAchU,QAAQJ,SACzD,CAkBA,MAAO,CACHnpB,eAAAA,EACAkU,UAhBJ,SAAmB/Q,EAAM0Q,GACrB,IAAI3I,EAEJ,GAAIlT,EAAMmL,GAAM0Q,WAAaA,EACzB,OAAO0V,QAAQJ,UAEsB,QAAxCje,EAAKpM,EAAco/B,uBAAoC,IAAPhzB,GAAyBA,EAAGhR,SAAQ,SAAC+a,GAAY,IAAI/J,EAAI,OAAuC,QAA/BA,EAAK+J,EAAMlV,sBAAmC,IAAPmL,OAAgB,EAASA,EAAGgJ,UAAU/Q,EAAM0Q,EAAW,IAChN7b,EAAMmL,GAAM0Q,SAAWA,EACvB,IAAM0pB,EAAav9B,EAAemD,GAClC,IAAK,IAAMrM,KAAOkB,EACdA,EAAMlB,GAAKgmC,cAAgB,CAAC,EAEhC,OAAOS,CACX,EAII6D,mBApPJ,SAA4BC,GACxB3lC,EAAU2lC,EAAaviC,EAC3B,EAmPI2+B,SAAU,kBAAMzlC,CAAK,EAE7B,CAUA,SAASqnC,KAAkC,IAAlBxrB,EAAQ5a,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GAC7B,MAAO,CACH4a,SAAAA,EACAipB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjB8D,mBAAoB,CAAC,EAE7B,CE1SyC,IAEnCS,GAAgB,SAAAltB,IAAAC,EAAAA,GAAAA,GAAAitB,EAAAltB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAA+sB,GAMlB,SAAAA,EAAY5tB,GAAM,IAAAgB,EAE4D,OAF5Dle,EAAAA,EAAAA,GAAA,KAAA8qC,GACd5sB,EAAAJ,EAAAxZ,KAAA,KAAM4Y,GACNA,EAAK3T,iBAAmB2T,EAAK3T,eAAiBq/B,GAAqB1rB,IAAOgB,CAC9E,CAqBa,OArBZ7d,EAAAA,EAAAA,GAAAyqC,EAAA,EAAAxqC,IAAA,sCAAAC,MACD,WACI,IAAQ2E,EAAYjF,KAAKid,KAAKM,WAAtBtY,QACRjF,KAAKiK,UACDvF,EAAoBO,KACpBjF,KAAKiK,QAAUhF,EAAQ6lC,UAAU9qC,KAAKid,MAE9C,GACA,CAAA5c,IAAA,QAAAC,MAGA,WACIN,KAAK+qC,qCACT,GAAC,CAAA1qC,IAAA,SAAAC,MACD,WACwBN,KAAKid,KAAKM,WAAtBtY,WACyBjF,KAAKid,KAAK9E,WAAa,CAAC,GAAjDlT,SAEJjF,KAAK+qC,qCAEb,GAAC,CAAA1qC,IAAA,UAAAC,MACD,WAAY,KAACuqC,CAAA,CA9BK,CAAS7tB,ICF3B3S,GAAK,EACH2gC,GAAoB,SAAArtB,IAAAC,EAAAA,GAAAA,GAAAotB,EAAArtB,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAktB,GACtB,SAAAA,IAAc,IAAA/sB,EAEK,OAFLle,EAAAA,EAAAA,GAAA,KAAAirC,IACV/sB,EAAAJ,EAAAE,MAAA,KAASvb,YACJ6H,GAAKA,KAAK4T,CACnB,CAoBa,OApBZ7d,EAAAA,EAAAA,GAAA4qC,EAAA,EAAA3qC,IAAA,SAAAC,MACD,WAAS,IAAA8d,EAAA,KACL,GAAKpe,KAAKid,KAAKzU,gBAAf,CAEA,IAAAyiC,EAAsCjrC,KAAKid,KAAKzU,gBAAxC0iC,EAASD,EAATC,UAAWC,EAAcF,EAAdE,eACAC,GAAkBprC,KAAKid,KAAKouB,qBAAuB,CAAC,GAA/DH,UACR,GAAKlrC,KAAKid,KAAK3T,gBAAkB4hC,IAAcE,EAA/C,CAGA,IAAME,EAAgBtrC,KAAKid,KAAK3T,eAAemU,UAAU,QAASytB,GAC9DC,IAAmBD,GACnBI,EAAczY,MAAK,kBAAMsY,EAAe/sB,EAAK/T,GAAG,GAHpD,CALU,CAUd,GAAC,CAAAhK,IAAA,QAAAC,MACD,WACI,IAAQirC,GAAavrC,KAAKid,KAAKzU,iBAAmB,CAAC,GAA3C+iC,SACJA,IACAvrC,KAAKiK,QAAUshC,EAASvrC,KAAKqK,IAErC,GAAC,CAAAhK,IAAA,UAAAC,MACD,WAAY,KAAC0qC,CAAA,CAxBS,CAAShuB,ICA7B8pB,GAAa,CACf3gC,UAAW,CACP6W,QAAS6tB,IAEbzkC,KAAM,CACF4W,QAASguB,KCRXp6B,GAAW,SAACqL,EAAGC,GAAC,OAAK5Y,KAAKkyB,IAAIvZ,EAAIC,EAAE,EAC1C,SAASsvB,GAAWvvB,EAAGC,GAEnB,IAAMuvB,EAAS76B,GAASqL,EAAErQ,EAAGsQ,EAAEtQ,GACzB8/B,EAAS96B,GAASqL,EAAEpQ,EAAGqQ,EAAErQ,GAC/B,OAAOvI,KAAKkhB,KAAKlhB,KAAA+wB,IAAAoX,EAAU,GAACnoC,KAAA+wB,IAAGqX,EAAU,GAC7C,CCEA,IAGMC,GAAU,WACZ,SAAAA,EAAYpwB,EAAOqwB,GAAgF,IAAA3tB,EAAA,KAAAnb,EAAAN,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAjE7D,EAAkBmE,EAAlBnE,mBAAoBktC,EAAa/oC,EAAb+oC,cAAaC,EAAAhpC,EAAEipC,iBAAAA,OAAgB,IAAAD,GAAQA,EAgEtF,IAhEsF/rC,EAAAA,EAAAA,GAAA,KAAA4rC,GAItF3rC,KAAKkf,WAAa,KAIlBlf,KAAKgsC,cAAgB,KAIrBhsC,KAAKisC,kBAAoB,KAIzBjsC,KAAK4rC,SAAW,CAAC,EAIjB5rC,KAAK6rC,cAAgB3iC,OACrBlJ,KAAKksC,YAAc,WACf,GAAMjuB,EAAK+tB,eAAiB/tB,EAAKguB,kBAAjC,CAEA,IAAM3uB,EAAO6uB,GAAWluB,EAAKguB,kBAAmBhuB,EAAKmuB,SAC/CC,EAAmC,OAApBpuB,EAAKiB,WAIpBotB,EAA0Bd,GAAWluB,EAAKrI,OAAQ,CAAErJ,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAKwgC,GAAiBC,EAAtB,CAEA,IAAQzwB,EAAUyB,EAAVzB,MACApa,EAAcoB,GAAAA,UACtBob,EAAKmuB,QAAQ1rC,MAAIiH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIkU,GAAK,IAAEpa,UAAAA,KAC9B,IAAA8qC,EAA4BtuB,EAAK2tB,SAAzBY,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OACZJ,IACDG,GAAWA,EAAQvuB,EAAK+tB,cAAe1uB,GACvCW,EAAKiB,WAAajB,EAAK+tB,eAE3BS,GAAUA,EAAOxuB,EAAK+tB,cAAe1uB,EAT3B,CARA,CAkBd,EACAtd,KAAK0sC,kBAAoB,SAACnxB,EAAO+B,GAC7BW,EAAK+tB,cAAgBzwB,EACrB0C,EAAKguB,kBAAoBU,GAAervB,EAAMW,EAAKtf,oBAEnD6b,GAAAA,OAAayD,EAAKiuB,aAAa,EACnC,EACAlsC,KAAK4sC,gBAAkB,SAACrxB,EAAO+B,GAC3BW,EAAK4uB,MACL,IAAAC,EAAiD7uB,EAAK2tB,SAA9CmB,EAAKD,EAALC,MAAOC,EAAYF,EAAZE,aAAcC,EAAeH,EAAfG,gBAG7B,GAFIhvB,EAAK8tB,kBACLkB,GAAmBA,IACjBhvB,EAAK+tB,eAAiB/tB,EAAKguB,kBAAjC,CAEA,IAAMiB,EAAUf,GAA0B,kBAAf5wB,EAAM7O,KAC3BuR,EAAKguB,kBACLU,GAAervB,EAAMW,EAAKtf,oBAAqBsf,EAAKmuB,SACtDnuB,EAAKiB,YAAc6tB,GACnBA,EAAMxxB,EAAO2xB,GAEjBF,GAAgBA,EAAazxB,EAAO2xB,EAP1B,CAQd,EAEK5xB,GAAiBC,GAAtB,CAEAvb,KAAK+rC,iBAAmBA,EACxB/rC,KAAK4rC,SAAWA,EAChB5rC,KAAKrB,mBAAqBA,EAC1BqB,KAAK6rC,cAAgBA,GAAiB3iC,OACtC,IAAMoU,EAAO3B,GAAiBJ,GACxB4xB,EAAcR,GAAervB,EAAMtd,KAAKrB,oBACtCkd,EAAUsxB,EAAVtxB,MACApa,EAAcoB,GAAAA,UACtB7C,KAAKosC,QAAU,EAAAzkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMkU,GAAK,IAAEpa,UAAAA,KAC5B,IAAQ2rC,EAAmBxB,EAAnBwB,eACRA,GACIA,EAAe7xB,EAAO4wB,GAAWgB,EAAantC,KAAKosC,UACvDpsC,KAAKqtC,gBAAkBlxB,GAAKL,GAAgB9b,KAAK6rC,cAAe,cAAe7rC,KAAK0sC,mBAAoB5wB,GAAgB9b,KAAK6rC,cAAe,YAAa7rC,KAAK4sC,iBAAkB9wB,GAAgB9b,KAAK6rC,cAAe,gBAAiB7rC,KAAK4sC,iBAbhO,CAcd,CAOC,OAPAxsC,EAAAA,EAAAA,GAAAurC,EAAA,EAAAtrC,IAAA,iBAAAC,MACD,SAAesrC,GACX5rC,KAAK4rC,SAAWA,CACpB,GAAC,CAAAvrC,IAAA,MAAAC,MACD,WACIN,KAAKqtC,iBAAmBrtC,KAAKqtC,kBAC7B5yB,GAAYza,KAAKksC,YACrB,KAACP,CAAA,CAvFW,GAyFhB,SAASgB,GAAervB,EAAM3e,GAC1B,OAAOA,EAAqB,CAAEkd,MAAOld,EAAmB2e,EAAKzB,QAAWyB,CAC5E,CACA,SAASgwB,GAAcrxB,EAAGC,GACtB,MAAO,CAAEtQ,EAAGqQ,EAAErQ,EAAIsQ,EAAEtQ,EAAGC,EAAGoQ,EAAEpQ,EAAIqQ,EAAErQ,EACtC,CACA,SAASsgC,GAAUhiC,EAAYiiC,GAAS,IAAlBvwB,EAAK1R,EAAL0R,MAClB,MAAO,CACHA,MAAAA,EACAra,MAAO8rC,GAAczxB,EAAO0xB,GAAgBnB,IAC5Cn3B,OAAQq4B,GAAczxB,EAAO2xB,GAAiBpB,IAC9C3oB,SAAU/X,GAAY0gC,EAAS,IAEvC,CACA,SAASoB,GAAiBpB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASmB,GAAgBnB,GACrB,OAAOA,EAAQA,EAAQrrC,OAAS,EACpC,CACA,SAAS2K,GAAY0gC,EAASqB,GAC1B,GAAIrB,EAAQrrC,OAAS,EACjB,MAAO,CAAE6K,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAI9I,EAAIqpC,EAAQrrC,OAAS,EACrB2sC,EAAmB,KACjBC,EAAYJ,GAAgBnB,GAC3BrpC,GAAK,IACR2qC,EAAmBtB,EAAQrpC,KACvB4qC,EAAUlsC,UAAYisC,EAAiBjsC,UACvCiiB,GAAsB+pB,MAG1B1qC,IAEJ,IAAK2qC,EACD,MAAO,CAAE9hC,EAAG,EAAGC,EAAG,GAEtB,IAAMga,EAAOjC,GAAsB+pB,EAAUlsC,UAAYisC,EAAiBjsC,WAC1E,GAAa,IAATokB,EACA,MAAO,CAAEja,EAAG,EAAGC,EAAG,GAEtB,IAAM+M,EAAkB,CACpBhN,GAAI+hC,EAAU/hC,EAAI8hC,EAAiB9hC,GAAKia,EACxCha,GAAI8hC,EAAU9hC,EAAI6hC,EAAiB7hC,GAAKga,GAQ5C,OANIjN,EAAgBhN,IAAM0zB,MACtB1mB,EAAgBhN,EAAI,GAEpBgN,EAAgB/M,IAAMyzB,MACtB1mB,EAAgB/M,EAAI,GAEjB+M,CACX,CCvJA,SAASg1B,GAAWC,GAChB,OAAOA,EAAKtqC,IAAMsqC,EAAKrqC,GAC3B,CACA,SAASsqC,GAAOxtC,GAAuC,IAAhC6S,EAAM3Q,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGurC,EAAWvrC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAOc,KAAKkyB,IAAIl1B,EAAQ6S,IAAW46B,CACvC,CACA,SAASC,GAAcxsC,EAAO4R,EAAQD,GAAsB,IAAd6B,EAAMxS,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACnDhB,EAAMwT,OAASA,EACfxT,EAAMysC,YAAcpU,GAAUzmB,EAAO5P,IAAK4P,EAAO7P,IAAK/B,EAAMwT,QAC5DxT,EAAMyL,MAAQ2gC,GAAWz6B,GAAUy6B,GAAWx6B,IAC1C06B,GAAOtsC,EAAMyL,MAAO,EAAG,OAAW4gB,MAAMrsB,EAAMyL,UAC9CzL,EAAMyL,MAAQ,GAClBzL,EAAM0sC,UACFrU,GAAU1mB,EAAO3P,IAAK2P,EAAO5P,IAAK/B,EAAMwT,QAAUxT,EAAMysC,aACxDH,GAAOtsC,EAAM0sC,YAAcrgB,MAAMrsB,EAAM0sC,cACvC1sC,EAAM0sC,UAAY,EAC1B,CACA,SAASC,GAAa3sC,EAAO4R,EAAQD,EAAQ6B,GACzCg5B,GAAcxsC,EAAMoK,EAAGwH,EAAOxH,EAAGuH,EAAOvH,EAAGoJ,EAASA,EAAO9D,aAAUzO,GACrEurC,GAAcxsC,EAAMqK,EAAGuH,EAAOvH,EAAGsH,EAAOtH,EAAGmJ,EAASA,EAAO7D,aAAU1O,EACzE,CACA,SAAS2rC,GAAiBj7B,EAAQk7B,EAAU/lC,GACxC6K,EAAO3P,IAAM8E,EAAO9E,IAAM6qC,EAAS7qC,IACnC2P,EAAO5P,IAAM4P,EAAO3P,IAAMoqC,GAAWS,EACzC,CACA,SAASC,GAAgBn7B,EAAQk7B,EAAU/lC,GACvC8lC,GAAiBj7B,EAAOvH,EAAGyiC,EAASziC,EAAGtD,EAAOsD,GAC9CwiC,GAAiBj7B,EAAOtH,EAAGwiC,EAASxiC,EAAGvD,EAAOuD,EAClD,CACA,SAAS0iC,GAAyBp7B,EAAQxM,EAAQ2B,GAC9C6K,EAAO3P,IAAMmD,EAAOnD,IAAM8E,EAAO9E,IACjC2P,EAAO5P,IAAM4P,EAAO3P,IAAMoqC,GAAWjnC,EACzC,CACA,SAAS6nC,GAAqBr7B,EAAQxM,EAAQ2B,GAC1CimC,GAAyBp7B,EAAOvH,EAAGjF,EAAOiF,EAAGtD,EAAOsD,GACpD2iC,GAAyBp7B,EAAOtH,EAAGlF,EAAOkF,EAAGvD,EAAOuD,EACxD,CCRA,SAAS4iC,GAA4BZ,EAAMrqC,EAAKD,GAC5C,MAAO,CACHC,SAAaf,IAARe,EAAoBqqC,EAAKrqC,IAAMA,OAAMf,EAC1Cc,SAAad,IAARc,EACCsqC,EAAKtqC,IAAMA,GAAOsqC,EAAKtqC,IAAMsqC,EAAKrqC,UAClCf,EAEd,CAcA,SAASisC,GAA4BC,EAAYC,GAC7C,IAAIprC,EAAMorC,EAAgBprC,IAAMmrC,EAAWnrC,IACvCD,EAAMqrC,EAAgBrrC,IAAMorC,EAAWprC,IAG3C,GAAIqrC,EAAgBrrC,IAAMqrC,EAAgBprC,IACtCmrC,EAAWprC,IAAMorC,EAAWnrC,IAAK,KAAA2kB,EACpB,CAAC5kB,EAAKC,GAAlBA,EAAG2kB,EAAA,GAAE5kB,EAAG4kB,EAAA,EACb,CACA,MAAO,CAAE3kB,IAAAA,EAAKD,IAAAA,EAClB,CAuCA,IAAMsrC,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHzrC,IAAK0rC,GAAoBH,EAAaC,GACtCzrC,IAAK2rC,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,SAASC,GAAS9sC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS+sC,GAAuBvsC,GAAgC,IAA7BsM,EAAGtM,EAAHsM,IAC/B,MAAO,CACHxD,EAAG,CAAEpI,IAF+BV,EAAJyM,KAEhBhM,IAF2BT,EAALuM,OAGtCxD,EAAG,CAAErI,IAAK4L,EAAK7L,IAHoCT,EAANwM,QAKrD,CCVA,SAASggC,GAAgBriC,GACrB,YAAiBxK,IAAVwK,GAAiC,IAAVA,CAClC,CACA,SAASsiC,GAAQzsC,GAA4B,IAAzBmK,EAAKnK,EAALmK,MAAOqD,EAAMxN,EAANwN,OAAQC,EAAMzN,EAANyN,OAC/B,OAAS++B,GAAgBriC,KACpBqiC,GAAgBh/B,KAChBg/B,GAAgB/+B,EACzB,CACA,SAAS2B,GAAa4C,GAClB,OAAQy6B,GAASz6B,IACb06B,GAAe16B,IACfA,EAAOhJ,GACPgJ,EAAO5E,QACP4E,EAAO3E,SACP2E,EAAO1E,SACP0E,EAAOpE,OACPoE,EAAOnE,KACf,CACA,SAAS6+B,GAAe16B,GACpB,OAAO26B,GAAc36B,EAAOlJ,IAAM6jC,GAAc36B,EAAOjJ,EAC3D,CACA,SAAS4jC,GAAcnvC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAASovC,GAAW7zB,EAAO5O,EAAOghC,GAG9B,OAAOA,EADQhhC,GADY4O,EAAQoyB,EAGvC,CAIA,SAAS0B,GAAgB9zB,EAAOqyB,EAAWjhC,EAAOghC,EAAa2B,GAI3D,YAHiBntC,IAAbmtC,IACA/zB,EAAQ6zB,GAAW7zB,EAAO+zB,EAAU3B,IAEjCyB,GAAW7zB,EAAO5O,EAAOghC,GAAeC,CACnD,CAIA,SAAS2B,GAAehC,GAAuD,IAAjDK,EAAS1rC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGyK,EAAKzK,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGyrC,EAAWzrC,UAAAzB,OAAA,EAAAyB,UAAA,QAAAC,EAAEmtC,EAAQptC,UAAAzB,OAAA,EAAAyB,UAAA,QAAAC,EACzEorC,EAAKrqC,IAAMmsC,GAAgB9B,EAAKrqC,IAAK0qC,EAAWjhC,EAAOghC,EAAa2B,GACpE/B,EAAKtqC,IAAMosC,GAAgB9B,EAAKtqC,IAAK2qC,EAAWjhC,EAAOghC,EAAa2B,EACxE,CAIA,SAASE,GAAcC,EAAGjtC,GAAY,IAAR8I,EAAC9I,EAAD8I,EAAGC,EAAC/I,EAAD+I,EAC7BgkC,GAAeE,EAAInkC,EAAGA,EAAEsiC,UAAWtiC,EAAEqB,MAAOrB,EAAEqiC,aAC9C4B,GAAeE,EAAIlkC,EAAGA,EAAEqiC,UAAWriC,EAAEoB,MAAOpB,EAAEoiC,YAClD,CAuDA,SAAS+B,GAAc/iC,GACnB,OAAIgjC,OAAOC,UAAUjjC,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASkjC,GAActC,EAAMj9B,GACzBi9B,EAAKrqC,IAAMqqC,EAAKrqC,IAAMoN,EACtBi9B,EAAKtqC,IAAMsqC,EAAKtqC,IAAMqN,CAC1B,CAMA,SAASw/B,GAAcvC,EAAMwC,EAAUlmC,GAA8B,IAAAge,GAAA3B,EAAAA,GAAAA,GAAArc,EAAA,GAA3B9J,EAAG8nB,EAAA,GAAEmoB,EAAQnoB,EAAA,GAAEooB,EAASpoB,EAAA,GACxDqoB,OAAuC/tC,IAA1B4tC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EtC,EAAcpU,GAAUgU,EAAKrqC,IAAKqqC,EAAKtqC,IAAKitC,GAElDX,GAAehC,EAAMwC,EAAWhwC,GAAMgwC,EAAWC,GAAWrC,EAAaoC,EAAWpjC,MACxF,CAIA,IAAMwjC,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKpjC,GACvByjC,GAAcL,EAAInkC,EAAGe,EAAW8jC,IAChCL,GAAcL,EAAIlkC,EAAGc,EAAW+jC,GACpC,CCpHA,SAAS7f,GAAmB9mB,EAAU4iC,GAClC,OAAO0C,GHeX,SAA4BxzB,EAAO8wB,GAC/B,IAAKA,EACD,OAAO9wB,EACX,IAAM+0B,EAAUjE,EAAe,CAAE/gC,EAAGiQ,EAAMtM,KAAM1D,EAAGgQ,EAAMzM,MACnDyhC,EAAclE,EAAe,CAAE/gC,EAAGiQ,EAAMxM,MAAOxD,EAAGgQ,EAAMvM,SAC9D,MAAO,CACHF,IAAKwhC,EAAQ/kC,EACb0D,KAAMqhC,EAAQhlC,EACd0D,OAAQuhC,EAAYhlC,EACpBwD,MAAOwhC,EAAYjlC,EAE3B,CG1BmCklC,CAAmB/mC,EAAS6Q,wBAAyB+xB,GACxF,CCJA,IAAMoE,GAAmB,SAAHjuC,GAAoB,IAAd+F,EAAO/F,EAAP+F,QACxB,OAAOA,EAAUA,EAAQmoC,cAAcC,YAAc,IACzD,ECeMC,GAAsB,IAAIxwB,QAK1BywB,GAAyB,WAC3B,SAAAA,EAAY9oC,IAAetI,EAAAA,EAAAA,GAAA,KAAAoxC,GAIvBnxC,KAAKoxC,eAAiB,KACtBpxC,KAAKqxC,YAAa,EAClBrxC,KAAKsxC,iBAAmB,KACxBtxC,KAAKiuC,YAAc,CAAEriC,EAAG,EAAGC,EAAG,GAI9B7L,KAAKuxC,aAAc,EACnBvxC,KAAKwxC,uBAAwB,EAI7BxxC,KAAKyxC,QC7BY,CACrB7lC,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ID+BjCvD,KAAKqI,cAAgBA,CACzB,CA2ZC,OA3ZAjI,EAAAA,EAAAA,GAAA+wC,EAAA,EAAA9wC,IAAA,QAAAC,MACD,SAAMoxC,GAA4C,IAAAzzB,EAAA,KAAAnb,EAAAN,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACmvC,EAAA7uC,EAA3B8uC,aAAAA,OAAY,IAAAD,GAAQA,EAI7BnpC,EAAoBxI,KAAKqI,cAAzBG,gBACR,IAAIA,IAAiD,IAA9BA,EAAgB0iC,UAAvC,CAEA,IAAMkC,EAAiB,SAAC7xB,GACS0C,EAAKV,WAA1BwuB,iBAGW9tB,EAAK4zB,iBAAmB5zB,EAAK6zB,gBAC5CF,GACA3zB,EAAK2zB,aAAaj2B,GAAiBJ,EAAO,QAAQM,MAE1D,EACM2wB,EAAU,SAACjxB,EAAO+B,GAEpB,IAAAy0B,EAA+C9zB,EAAKV,WAA5ClX,EAAI0rC,EAAJ1rC,KAAM2rC,EAAeD,EAAfC,gBAAiBC,EAAWF,EAAXE,YAC/B,IAAI5rC,GAAS2rC,IACL/zB,EAAKmzB,gBACLnzB,EAAKmzB,iBACTnzB,EAAKmzB,eAAiBz0B,GAActW,GAE/B4X,EAAKmzB,gBALd,CAQAnzB,EAAKozB,YAAa,EAClBpzB,EAAKqzB,iBAAmB,KACxBrzB,EAAKi0B,qBACDj0B,EAAK5V,cAAcqP,aACnBuG,EAAK5V,cAAcqP,WAAWy6B,oBAAqB,EACnDl0B,EAAK5V,cAAcqP,WAAWvE,YAAS1Q,GAK3C2sC,IAAS,SAACvB,GACN,IAAIhlC,EAAUoV,EAAKm0B,mBAAmBvE,GAAMhjC,OAAS,EAIrD,GAAIgD,GAAQ1C,KAAKtC,GAAU,CACvB,IAAQ6O,EAAeuG,EAAK5V,cAApBqP,WACR,GAAIA,GAAcA,EAAW/Q,OAAQ,CACjC,IAAM0rC,EAAe36B,EAAW/Q,OAAO2rC,UAAUzE,GACjD,GAAIwE,EAEAxpC,EADe+kC,GAAWyE,IACNtlC,WAAWlE,GAAW,IAElD,CACJ,CACAoV,EAAKgwB,YAAYJ,GAAQhlC,CAC7B,IAEIopC,GACAA,EAAY12B,EAAO+B,GACvB,IAAQhU,EAAmB2U,EAAK5V,cAAxBiB,eACRA,GAAkBA,EAAemU,UAAU,aAAa,EAhCxD,CAiCJ,EACMgvB,EAAS,SAAClxB,EAAO+B,GAEnB,IAAAi1B,EAAyEt0B,EAAKV,WAAtEy0B,EAAeO,EAAfP,gBAAiBQ,EAAiBD,EAAjBC,kBAAmBC,EAAeF,EAAfE,gBAAiBC,EAAMH,EAANG,OAE7D,GAAKV,GAAoB/zB,EAAKmzB,eAA9B,CAEA,IAAQn8B,EAAWqI,EAAXrI,OAER,GAAIu9B,GAA+C,OAA1Bv0B,EAAKqzB,iBAM1B,OALArzB,EAAKqzB,iBAAmBqB,GAAoB19B,QAEd,OAA1BgJ,EAAKqzB,kBACLmB,GAAmBA,EAAgBx0B,EAAKqzB,mBAKhDrzB,EAAK20B,WAAW,IAAKt1B,EAAKzB,MAAO5G,GACjCgJ,EAAK20B,WAAW,IAAKt1B,EAAKzB,MAAO5G,GAOjCgJ,EAAK5V,cAAcgB,SAKnBqpC,GAAUA,EAAOn3B,EAAO+B,EAzBd,CA0Bd,EACM0vB,EAAe,SAACzxB,EAAO+B,GAAI,OAAKW,EAAKyf,KAAKniB,EAAO+B,EAAK,EACtD2vB,EAAkB,WAAH,OAASmC,IAAS,SAACvB,GACpC,IAAIp5B,EACJ,MAAwC,WAAjCwJ,EAAK40B,kBAAkBhF,KAC0B,QAAlDp5B,EAAKwJ,EAAKm0B,mBAAmBvE,GAAM1nC,iBAA8B,IAAPsO,OAAgB,EAASA,EAAGkrB,OAChG,GAAE,EACFmT,EAA6B9yC,KAAKud,WAA1BwuB,EAAgB+G,EAAhB/G,iBACR/rC,KAAK+yC,WAAa,IAAIpH,GAAW+F,EAAa,CAC1CtE,eAAAA,EACAZ,QAAAA,EACAC,OAAAA,EACAO,aAAAA,EACAC,gBAAAA,GACD,CACCtuC,mBAAoBqB,KAAKqI,cAAc2qC,wBACvCjH,iBAAAA,EACAF,cAAekF,GAAiB/wC,KAAKqI,gBAtG/B,CAwGd,GAAC,CAAAhI,IAAA,OAAAC,MACD,SAAKib,EAAO+B,GACR,IAAM+zB,EAAarxC,KAAKqxC,WAExB,GADArxC,KAAK2C,SACA0uC,EAAL,CAEA,IAAQ5tB,EAAanG,EAAbmG,SACRzjB,KAAKwlC,eAAe/hB,GACpB,IAAQwvB,EAAcjzC,KAAKud,WAAnB01B,UACJA,GACAA,EAAU13B,EAAO+B,EALX,CAMd,GAAC,CAAAjd,IAAA,SAAAC,MACD,WACIN,KAAKqxC,YAAa,EAClB,IAAA6B,EAAuClzC,KAAKqI,cAApCqP,EAAUw7B,EAAVx7B,WAAYpO,EAAc4pC,EAAd5pC,eAChBoO,IACAA,EAAWy6B,oBAAqB,GAEpCnyC,KAAK+yC,YAAc/yC,KAAK+yC,WAAWlG,MACnC7sC,KAAK+yC,gBAAatwC,GACUzC,KAAKud,WAAzBy0B,iBACgBhyC,KAAKoxC,iBACzBpxC,KAAKoxC,iBACLpxC,KAAKoxC,eAAiB,MAE1B9nC,GAAkBA,EAAemU,UAAU,aAAa,EAC5D,GAAC,CAAApd,IAAA,aAAAC,MACD,SAAWutC,EAAMsF,EAAQl+B,GACrB,IAAQ5O,EAASrG,KAAKud,WAAdlX,KAER,GAAK4O,GAAWm+B,GAAWvF,EAAMxnC,EAAMrG,KAAKsxC,kBAA5C,CAEA,IAAM+B,EAAYrzC,KAAKoyC,mBAAmBvE,GACtCzqB,EAAOpjB,KAAKiuC,YAAYJ,GAAQ54B,EAAO44B,GAEvC7tC,KAAKuxC,aAAevxC,KAAKuxC,YAAY1D,KACrCzqB,EPnLZ,SAA0BvH,EAAK/Y,EAAgB2uC,GAAS,IAArBjuC,EAAGV,EAAHU,IAAKD,EAAGT,EAAHS,IAapC,YAZYd,IAARe,GAAqBqY,EAAQrY,EAE7BqY,EAAQ41B,EACF5X,GAAUr2B,EAAKqY,EAAO41B,EAAQjuC,KAC9BF,KAAKC,IAAIsY,EAAOrY,QAETf,IAARc,GAAqBsY,EAAQtY,IAElCsY,EAAQ41B,EACF5X,GAAUt2B,EAAKsY,EAAO41B,EAAQluC,KAC9BD,KAAKE,IAAIqY,EAAOtY,IAEnBsY,CACX,COqKmBy3B,CAAiBlwB,EAAMpjB,KAAKuxC,YAAY1D,GAAO7tC,KAAKyxC,QAAQ5D,KAEvEwF,EAAUtoC,IAAIqY,EAPJ,CAQd,GAAC,CAAA/iB,IAAA,qBAAAC,MACD,WAAqB,IACbmU,EADa2J,EAAA,KAEjBm1B,EAAyCvzC,KAAKud,WAAtCi2B,EAAeD,EAAfC,gBAAiBzE,EAAWwE,EAAXxE,YACnBpoC,EAAS3G,KAAKqI,cAAcqP,aAC7B1X,KAAKqI,cAAcqP,WAAW/Q,OAC7B3G,KAAKqI,cAAcqP,WAAW+7B,SAAQ,GACG,QAAxCh/B,EAAKzU,KAAKqI,cAAcqP,kBAA+B,IAAPjD,OAAgB,EAASA,EAAG9N,OAC7E+sC,EAAkB1zC,KAAKuxC,YACzBiC,GAAmBxvC,EAAYwvC,GAC1BxzC,KAAKuxC,cACNvxC,KAAKuxC,YAAcvxC,KAAK2zC,yBAKxB3zC,KAAKuxC,eADLiC,IAAmB7sC,IPrKnC,SAAiC2rC,EAASnoC,GAAgC,IAA5BiF,EAAGjF,EAAHiF,IAAKG,EAAIpF,EAAJoF,KAAMD,EAAMnF,EAANmF,OAAQD,EAAKlF,EAALkF,MAC7D,MAAO,CACHzD,EAAG6iC,GAA4B6D,EAAU1mC,EAAG2D,EAAMF,GAClDxD,EAAG4iC,GAA4B6D,EAAUzmC,EAAGuD,EAAKE,GAEzD,COiKmCskC,CAAwBjtC,EAAO2rC,UAAWkB,GAMrExzC,KAAKyxC,QP9Gb,WAA0D,IAA9B1C,EAAWvsC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAGqsC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHjjC,EAAGkjC,GAAmBC,EAAa,OAAQ,SAC3CljC,EAAGijC,GAAmBC,EAAa,MAAO,UAElD,COmGuB8E,CAAmB9E,GAK9B2E,IAAoB1zC,KAAKuxC,aACzB5qC,GACA3G,KAAKuxC,cACJvxC,KAAKwxC,uBACNpC,IAAS,SAACvB,GACFzvB,EAAKg0B,mBAAmBvE,KACxBzvB,EAAKmzB,YAAY1D,GPvIrC,SAA+BlnC,EAAQ4qC,GACnC,IAAMuC,EAAsB,CAAC,EAO7B,YANwBrxC,IAApB8uC,EAAY/tC,MACZswC,EAAoBtwC,IAAM+tC,EAAY/tC,IAAMmD,EAAOnD,UAE/Bf,IAApB8uC,EAAYhuC,MACZuwC,EAAoBvwC,IAAMguC,EAAYhuC,IAAMoD,EAAOnD,KAEhDswC,CACX,CO8H6CC,CAAsBptC,EAAO2rC,UAAUzE,GAAOzvB,EAAKmzB,YAAY1D,IAEhG,GAER,GAAC,CAAAxtC,IAAA,wBAAAC,MACD,WACI,IAAA0zC,EAAmEh0C,KAAKud,WAA/Cg0B,EAAWyC,EAA5BR,gBAA8BS,EAAwBD,EAAxBC,yBACtC,IAAK1C,IAAgBvtC,EAAYutC,GAC7B,OAAO,EACX,IAAM2C,EAAqB3C,EAAY1oC,QACvCod,GAAiC,OAAvBiuB,EAA6B,0GACvC,IAAQx8B,EAAe1X,KAAKqI,cAApBqP,WAER,IAAKA,IAAeA,EAAW/Q,OAC3B,OAAO,EACX,IAAMwtC,EF1Od,SAAwB38B,EAAS48B,EAAoBz1C,GACjD,IAAM01C,EAAcxjB,GAAmBrZ,EAAS7Y,GACxC21C,EAAWF,EAAXE,OAKR,OAJIA,IACAnE,GAAckE,EAAYzoC,EAAG0oC,EAAOr/B,OAAOrJ,GAC3CukC,GAAckE,EAAYxoC,EAAGyoC,EAAOr/B,OAAOpJ,IAExCwoC,CACX,CEkO+BE,CAAeL,EAAoBx8B,EAAWwJ,KAAMlhB,KAAKqI,cAAc2qC,yBAC1FwB,EPhLZ,SAAiClC,EAAW6B,GACxC,MAAO,CACHvoC,EAAG8iC,GAA4B4D,EAAU1mC,EAAGuoC,EAAevoC,GAC3DC,EAAG6iC,GAA4B4D,EAAUzmC,EAAGsoC,EAAetoC,GAEnE,CO2KkC4oC,CAAwB/8B,EAAW/Q,OAAO2rC,UAAW6B,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EL5OpC,SAAgC9pC,GAAW,IAARyB,EAACzB,EAADyB,EAAGC,EAAC1B,EAAD0B,EAClC,MAAO,CAAEuD,IAAKvD,EAAErI,IAAK6L,MAAOzD,EAAErI,IAAK+L,OAAQzD,EAAEtI,IAAKgM,KAAM3D,EAAEpI,IAC9D,CK0O6DmxC,CAAwBH,IACzEx0C,KAAKwxC,wBAA0BkD,EAC3BA,IACAF,EAAsBnF,GAAwBqF,GAEtD,CACA,OAAOF,CACX,GAAC,CAAAn0C,IAAA,iBAAAC,MACD,SAAemjB,GAAU,IAAAgiB,EAAA,KACrBmP,EAAoG50C,KAAKud,WAAjGlX,EAAIuuC,EAAJvuC,KAAMwuC,EAAYD,EAAZC,aAAc9F,EAAW6F,EAAX7F,YAAa+F,EAAcF,EAAdE,eAAgB/I,EAAgB6I,EAAhB7I,iBAAkBgJ,EAAmBH,EAAnBG,oBACrExD,EAAcvxC,KAAKuxC,aAAe,CAAC,EACnCyD,EAAqB5F,IAAS,SAACvB,GACjC,GAAKuF,GAAWvF,EAAMxnC,EAAMo/B,EAAK6L,kBAAjC,CAGA,IAAIn3B,EAAco3B,GAAeA,EAAY1D,IAAU,CAAC,EACpD9B,IACA5xB,EAAa,CAAE3W,IAAK,EAAGD,IAAK,IAOhC,IAAMozB,EAAkBoY,EAAc,IAAM,IACtCtY,EAAgBsY,EAAc,GAAK,IACnC5Y,GAAOxuB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACT+E,KAAM,UACN+W,SAAUoxB,EAAepxB,EAASoqB,GAAQ,EAC1ClX,gBAAAA,EACAF,cAAAA,EACAF,aAAc,IACdzB,UAAW,EACX7Q,UAAW,IACR6wB,GACA36B,GAKP,OAAOsrB,EAAKwP,wBAAwBpH,EAAM1X,EA1B1C,CA2BJ,IAEA,OAAOrD,QAAQlR,IAAIozB,GAAoBniB,KAAKkiB,EAChD,GAAC,CAAA10C,IAAA,0BAAAC,MACD,SAAwButC,EAAM1zB,GAC1B,IAAMk5B,EAAYrzC,KAAKoyC,mBAAmBvE,GAC1C,OAAOwF,EAAU1uC,MAAMw+B,GAAmB0K,EAAMwF,EAAW,EAAGl5B,EAAYna,KAAKqI,eACnF,GAAC,CAAAhI,IAAA,gBAAAC,MACD,WAAgB,IAAA40C,EAAA,KACZ9F,IAAS,SAACvB,GAAI,OAAKqH,EAAK9C,mBAAmBvE,GAAMnQ,MAAM,GAC3D,GAAC,CAAAr9B,IAAA,iBAAAC,MACD,WAAiB,IAAA60C,EAAA,KACb/F,IAAS,SAACvB,GAAW,IAAIp5B,EAAI,OAA0D,QAAlDA,EAAK0gC,EAAK/C,mBAAmBvE,GAAM1nC,iBAA8B,IAAPsO,OAAgB,EAASA,EAAGmrB,OAAS,GACxI,GAAC,CAAAv/B,IAAA,oBAAAC,MACD,SAAkButC,GACd,IAAIp5B,EACJ,OAA0D,QAAlDA,EAAKzU,KAAKoyC,mBAAmBvE,GAAM1nC,iBAA8B,IAAPsO,OAAgB,EAASA,EAAGlT,KAClG,GACA,CAAAlB,IAAA,qBAAAC,MAMA,SAAmButC,GACf,IAAMuH,EAAU,QAAUvH,EAAKt1B,cACzBvT,EAAQhF,KAAKqI,cAAckV,WAC3B83B,EAAsBrwC,EAAMowC,GAClC,OAAOC,GAEDr1C,KAAKqI,cAAc4f,SAAS4lB,GAAO7oC,EAAMU,QAAUV,EAAMU,QAAQmoC,QAAQprC,IAAc,EACjG,GAAC,CAAApC,IAAA,eAAAC,MACD,SAAaub,GAAO,IAAAy5B,EAAA,KAChBlG,IAAS,SAACvB,GAGN,GAAKuF,GAAWvF,EAFCyH,EAAK/3B,WAAdlX,KAEoBivC,EAAKhE,kBAAjC,CAEA,IAAQ55B,EAAe49B,EAAKjtC,cAApBqP,WACF27B,EAAYiC,EAAKlD,mBAAmBvE,GAC1C,GAAIn2B,GAAcA,EAAW/Q,OAAQ,CACjC,IAAA4uC,EAAqB79B,EAAW/Q,OAAO2rC,UAAUzE,GAAzCrqC,EAAG+xC,EAAH/xC,IAAKD,EAAGgyC,EAAHhyC,IACb8vC,EAAUtoC,IAAI8Q,EAAMgyB,GAAQhU,GAAUr2B,EAAKD,EAAK,IACpD,CANU,CAOd,GACJ,GACA,CAAAlD,IAAA,iCAAAC,MAKA,WAAiC,IAAAk1C,EAAA,KAC7B,GAAKx1C,KAAKqI,cAAcQ,QAAxB,CAEA,IAAA4sC,EAAkCz1C,KAAKud,WAA/BlX,EAAIovC,EAAJpvC,KAAMmtC,EAAeiC,EAAfjC,gBACN97B,EAAe1X,KAAKqI,cAApBqP,WACR,GAAK1T,EAAYwvC,IAAqB97B,GAAe1X,KAAKuxC,YAA1D,CAMAvxC,KAAK8xC,gBAKL,IAAM4D,EAAc,CAAE9pC,EAAG,EAAGC,EAAG,GAC/BujC,IAAS,SAACvB,GACN,IAAMwF,EAAYmC,EAAKpD,mBAAmBvE,GAC1C,GAAIwF,EAAW,CACX,IAAM/b,EAAS+b,EAAUxoC,MACzB6qC,EAAY7H,GP7R5B,SAAoBz6B,EAAQD,GACxB,IAAI6B,EAAS,GACP2gC,EAAe/H,GAAWx6B,GAC1BwiC,EAAehI,GAAWz6B,GAOhC,OANIyiC,EAAeD,EACf3gC,EAAS0kB,GAASvmB,EAAO3P,IAAK2P,EAAO5P,IAAMoyC,EAAcviC,EAAO5P,KAE3DmyC,EAAeC,IACpB5gC,EAAS0kB,GAAStmB,EAAO5P,IAAK4P,EAAO7P,IAAMqyC,EAAcziC,EAAO3P,MAE7DoJ,GAAM,EAAG,EAAGoI,EACvB,COkRoCD,CAAW,CAAEvR,IAAK8zB,EAAQ/zB,IAAK+zB,GAAUke,EAAKjE,YAAY1D,GAClF,CACJ,IAIA,IAAQ/7B,EAAsB9R,KAAKqI,cAAckV,WAAzCzL,kBACR9R,KAAKqI,cAAcQ,QAAQkJ,MAAMpF,UAAYmF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACN4F,EAAWwJ,MAAQxJ,EAAWwJ,KAAK20B,eACnCn+B,EAAWo+B,eACX91C,KAAKkyC,qBAKL9C,IAAS,SAACvB,GACN,GAAKuF,GAAWvF,EAAMxnC,EAAM,MAA5B,CAKA,IAAMgtC,EAAYmC,EAAKpD,mBAAmBvE,GAC1CkI,EAAqBP,EAAKjE,YAAY1D,GAA9BrqC,EAAGuyC,EAAHvyC,IAAKD,EAAGwyC,EAAHxyC,IACb8vC,EAAUtoC,IAAI8uB,GAAUr2B,EAAKD,EAAKmyC,EAAY7H,IANpC,CAOd,GAzCU,CAJA,CA8Cd,GAAC,CAAAxtC,IAAA,eAAAC,MACD,WAAe,IAAA01C,EAAA,KACX,GAAKh2C,KAAKqI,cAAcQ,QAAxB,CAEAqoC,GAAoBnmC,IAAI/K,KAAKqI,cAAerI,MAC5C,IAIMi2C,EAAsBn6B,GAJZ9b,KAAKqI,cAAcQ,QAIkB,eAAe,SAAC0S,GACjE,IAAA26B,EAAsCF,EAAKz4B,WAAnClX,EAAI6vC,EAAJ7vC,KAAI8vC,EAAAD,EAAExiC,aACdrN,SAD0B,IAAA8vC,GAAOA,IACTH,EAAKrxC,MAAM4W,EACvC,IACM66B,EAAyB,WAEvBpyC,EADwBgyC,EAAKz4B,WAAzBi2B,mBAEJwC,EAAKzE,YAAcyE,EAAKrC,wBAEhC,EACQj8B,EAAe1X,KAAKqI,cAApBqP,WACF2+B,EAA4B3+B,EAAW0D,iBAAiB,UAAWg7B,GACrE1+B,IAAeA,EAAW/Q,SAC1B+Q,EAAWwJ,MAAQxJ,EAAWwJ,KAAK20B,eACnCn+B,EAAWo+B,gBAEfM,IAKA,IAAME,EAAqBt7B,GAAY9R,OAAQ,UAAU,kBAAM8sC,EAAKO,gCAAgC,IAK9FC,EAA2B9+B,EAAW0D,iBAAiB,aAAc,SAAAjR,GAAiC,IAA9B3I,EAAK2I,EAAL3I,MAAOi1C,EAAgBtsC,EAAhBssC,iBAC7ET,EAAK3E,YAAcoF,IACnBrH,IAAS,SAACvB,GACN,IAAMrjB,EAAcwrB,EAAK5D,mBAAmBvE,GACvCrjB,IAELwrB,EAAK/H,YAAYJ,IAASrsC,EAAMqsC,GAAMK,UACtC1jB,EAAYzf,IAAIyf,EAAY3f,MAAQrJ,EAAMqsC,GAAMK,WACpD,IACA8H,EAAK3tC,cAAcgB,SAE3B,IACA,OAAO,WACHitC,IACAL,IACAI,IACAG,GAA4BA,GAChC,CAjDU,CAkDd,GAAC,CAAAn2C,IAAA,WAAAC,MACD,WACI,IAAM0E,EAAQhF,KAAKqI,cAAckV,WACjCm5B,EAA0J1xC,EAAlJqB,KAAAA,OAAI,IAAAqwC,GAAQA,EAAAC,EAAsI3xC,EAApIwtC,kBAAAA,OAAiB,IAAAmE,GAAQA,EAAAC,EAA2G5xC,EAAzGgtC,gBAAAA,OAAe,IAAA4E,GAAQA,EAAAC,EAAkF7xC,EAAhFwuC,gBAAAA,OAAe,IAAAqD,GAAQA,EAAAC,EAAyD9xC,EAAvD+pC,YAAAA,OAAW,IAAA+H,EAAGjI,GAAciI,EAAAC,EAA2B/xC,EAAzB6vC,aAAAA,OAAY,IAAAkC,GAAOA,EACpJ,OAAApvC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO3C,GAAK,IACRqB,KAAAA,EACAmsC,kBAAAA,EACAR,gBAAAA,EACAwB,gBAAAA,EACAzE,YAAAA,EACA8F,aAAAA,GAER,KAAC1D,CAAA,CA9a0B,GAgb/B,SAASiC,GAAW5Q,EAAWn8B,EAAMirC,GACjC,QAAkB,IAATjrC,GAAiBA,IAASm8B,KACT,OAArB8O,GAA6BA,IAAqB9O,EAC3D,CAQA,SAASmQ,GAAoB19B,GAA4B,IAApB+hC,EAAax0C,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC7CggC,EAAY,KAOhB,OANIl/B,KAAKkyB,IAAIvgB,EAAOpJ,GAAKmrC,EACrBxU,EAAY,IAEPl/B,KAAKkyB,IAAIvgB,EAAOrJ,GAAKorC,IAC1BxU,EAAY,KAETA,CACX,CEzd4E,IAEtEyU,GAAW,SAAAt5B,IAAAC,EAAAA,GAAAA,GAAAq5B,EAAAt5B,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAm5B,GACb,SAAAA,EAAYh6B,GAAM,IAAAgB,EAIsC,OAJtCle,EAAAA,EAAAA,GAAA,KAAAk3C,IACdh5B,EAAAJ,EAAAxZ,KAAA,KAAM4Y,IACDi6B,oBAAsB78B,GAC3B4D,EAAKovB,gBAAkBhzB,GACvB4D,EAAKk5B,SAAW,IAAIhG,GAA0Bl0B,GAAMgB,CACxD,CAaC,OAbA7d,EAAAA,EAAAA,GAAA62C,EAAA,EAAA52C,IAAA,QAAAC,MACD,WAGI,IAAQ82C,EAAiBp3C,KAAKid,KAAKM,WAA3B65B,aACJA,IACAp3C,KAAKk3C,oBAAsBE,EAAatM,UAAU9qC,KAAKm3C,WAE3Dn3C,KAAKqtC,gBAAkBrtC,KAAKm3C,SAASE,gBAAkBh9B,EAC3D,GAAC,CAAAha,IAAA,UAAAC,MACD,WACIN,KAAKk3C,sBACLl3C,KAAKqtC,iBACT,KAAC4J,CAAA,CAnBY,CAASj6B,ICEpBs6B,GAAe,SAACp8B,GAAO,OAAK,SAACK,EAAO+B,GAClCpC,GACAA,EAAQK,EAAO+B,EAEvB,CAAC,EACKi6B,GAAU,SAAA55B,IAAAC,EAAAA,GAAAA,GAAA25B,EAAA55B,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAy5B,GACZ,SAAAA,IAAc,IAAAt5B,EAE4B,OAF5Ble,EAAAA,EAAAA,GAAA,KAAAw3C,IACVt5B,EAAAJ,EAAAE,MAAA,KAASvb,YACJg1C,0BAA4Bn9B,GAAK4D,CAC1C,CA6BC,OA7BA7d,EAAAA,EAAAA,GAAAm3C,EAAA,EAAAl3C,IAAA,gBAAAC,MACD,SAAcm3C,GACVz3C,KAAK03C,QAAU,IAAI/L,GAAW8L,EAAkBz3C,KAAK23C,oBAAqB,CACtEh5C,mBAAoBqB,KAAKid,KAAK+1B,wBAC9BnH,cAAekF,GAAiB/wC,KAAKid,OAE7C,GAAC,CAAA5c,IAAA,oBAAAC,MACD,WAAoB,IAAA8d,EAAA,KAChBqB,EAA2Dzf,KAAKid,KAAKM,WAA7Dq6B,EAAiBn4B,EAAjBm4B,kBAAmBC,EAAUp4B,EAAVo4B,WAAYC,EAAKr4B,EAALq4B,MAAOC,EAAQt4B,EAARs4B,SAC9C,MAAO,CACH3K,eAAgBkK,GAAaM,GAC7BpL,QAAS8K,GAAaO,GACtBpL,OAAQqL,EACR/K,MAAO,SAACxxB,EAAO+B,UACJc,EAAKs5B,QACRK,GACAA,EAASx8B,EAAO+B,EACxB,EAER,GAAC,CAAAjd,IAAA,QAAAC,MACD,WAAQ,IAAAmlC,EAAA,KACJzlC,KAAKw3C,0BAA4B17B,GAAgB9b,KAAKid,KAAKpU,QAAS,eAAe,SAAC0S,GAAK,OAAKkqB,EAAKuS,cAAcz8B,EAAM,GAC3H,GAAC,CAAAlb,IAAA,SAAAC,MACD,WACIN,KAAK03C,SAAW13C,KAAK03C,QAAQO,eAAej4C,KAAK23C,oBACrD,GAAC,CAAAt3C,IAAA,UAAAC,MACD,WACIN,KAAKw3C,4BACLx3C,KAAK03C,SAAW13C,KAAK03C,QAAQ7K,KACjC,KAAC0K,CAAA,CAjCW,CAASv6B,ICNzB,IAAMk7B,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQzK,GAC7B,OAAIA,EAAKtqC,MAAQsqC,EAAKrqC,IACX,EACH80C,GAAUzK,EAAKtqC,IAAMsqC,EAAKrqC,KAAQ,GAC9C,CAQA,IAAM+0C,GAAsB,CACxBC,QAAS,SAAClhB,EAAQra,GACd,IAAKA,EAAK9J,OACN,OAAOmkB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIxpB,GAAG3C,KAAKmsB,GAIR,OAAOA,EAHPA,EAASvqB,WAAWuqB,EAK5B,CAKA,IAAM1rB,EAAIysC,GAAgB/gB,EAAQra,EAAK9J,OAAOvH,GACxCC,EAAIwsC,GAAgB/gB,EAAQra,EAAK9J,OAAOtH,GAC9C,MAAO,GAAP/G,OAAU8G,EAAC,MAAA9G,OAAK+G,EAAC,IACrB,GClCE4sC,GAAmB,CACrBD,QAAS,SAAClhB,EAAMx0B,GAAqC,IAAjC41C,EAAS51C,EAAT41C,UAAWC,EAAe71C,EAAf61C,gBACrBC,EAAWthB,EACXuhB,EAASlrB,GAAQ7gB,MAAMwqB,GAE7B,GAAIuhB,EAAO93C,OAAS,EAChB,OAAO63C,EACX,IAAMzd,EAAWxN,GAAQL,kBAAkBgK,GACrCriB,EAA8B,kBAAd4jC,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB/sC,EAAEqB,MAAQyrC,EAAU9sC,EAC7CmtC,EAASJ,EAAgB9sC,EAAEoB,MAAQyrC,EAAU7sC,EACnDgtC,EAAO,EAAI5jC,IAAW6jC,EACtBD,EAAO,EAAI5jC,IAAW8jC,EAOtB,IAAMC,EAAenf,GAAUif,EAAQC,EAAQ,IAO/C,MALkC,kBAAvBF,EAAO,EAAI5jC,KAClB4jC,EAAO,EAAI5jC,IAAW+jC,GAEQ,kBAAvBH,EAAO,EAAI5jC,KAClB4jC,EAAO,EAAI5jC,IAAW+jC,GACnB7d,EAAS0d,EACpB,GCpBEI,GAAwB,SAAAC,IAAAt7B,EAAAA,GAAAA,GAAAq7B,EAAAC,GAAA,IAAAr7B,GAAAC,EAAAA,GAAAA,GAAAm7B,GAAA,SAAAA,IAAA,OAAAl5C,EAAAA,EAAAA,GAAA,KAAAk5C,GAAAp7B,EAAAE,MAAA,KAAAvb,UAAA,CAgGzB,OAhGyBpC,EAAAA,EAAAA,GAAA64C,EAAA,EAAA54C,IAAA,oBAAAC,MAM1B,WAAoB,IrJhBG64C,EqJgBHl7B,EAAA,KAChBm7B,EAAoEp5C,KAAKgF,MAAjEqD,EAAa+wC,EAAb/wC,cAAegxC,EAAWD,EAAXC,YAAaC,EAAiBF,EAAjBE,kBAAmBpxC,EAAQkxC,EAARlxC,SAC/CwP,EAAerP,EAAfqP,WrJlBWyhC,EqJmBDI,GrJlBtBr1C,OAAOoP,OAAOlI,EAAiB+tC,GqJmBvBzhC,IACI2hC,EAAYG,OACZH,EAAYG,MAAM/4C,IAAIiX,GACtB4hC,GAAqBA,EAAkB/N,UAAYrjC,GACnDoxC,EAAkB/N,SAAS7zB,GAE/BA,EAAWwJ,KAAKu4B,YAChB/hC,EAAW0D,iBAAiB,qBAAqB,WAC7C6C,EAAKy7B,cACT,IACAhiC,EAAWiiC,YAAUhyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChB+P,EAAW7F,SAAO,IACrBs5B,eAAgB,kBAAMltB,EAAKy7B,cAAc,MAGjDxB,GAAsBE,gBAAiB,CAC3C,GAAC,CAAA/3C,IAAA,0BAAAC,MACD,SAAwB6X,GAAW,IAAAiG,EAAA,KAC/Bw7B,EAA6D55C,KAAKgF,MAA1D60C,EAAgBD,EAAhBC,iBAAkBxxC,EAAauxC,EAAbvxC,cAAehC,EAAIuzC,EAAJvzC,KAAM6kC,EAAS0O,EAAT1O,UACzCxzB,EAAarP,EAAcqP,WACjC,OAAKA,GASLA,EAAWwzB,UAAYA,EACnB7kC,GACA8R,EAAU0hC,mBAAqBA,QACVp3C,IAArBo3C,EACAniC,EAAWoiC,aAGX95C,KAAK05C,eAELvhC,EAAU+yB,YAAcA,IACpBA,EACAxzB,EAAWqiC,UAELriC,EAAWsiC,YAMjBx/B,GAAAA,YAAiB,WACb,IAAMy/B,EAAQviC,EAAWwiC,WACpBD,GAAUA,EAAME,QAAQp5C,QACzBqd,EAAKs7B,cAEb,KAGD,MAnCI,IAoCf,GAAC,CAAAr5C,IAAA,qBAAAC,MACD,WAAqB,IAAAmlC,EAAA,KACT/tB,EAAe1X,KAAKgF,MAAMqD,cAA1BqP,WACJA,IACAA,EAAWwJ,KAAKu4B,YAChB11C,EAAUqF,YAAW,YACZsO,EAAW0iC,kBAAoB1iC,EAAW2iC,UAC3C5U,EAAKiU,cAEb,IAER,GAAC,CAAAr5C,IAAA,uBAAAC,MACD,WACI,IAAAg6C,EAA2Et6C,KAAKgF,MAAxEqD,EAAaiyC,EAAbjyC,cAAegxC,EAAWiB,EAAXjB,YAAgCkB,EAAcD,EAAjChB,kBAC5B5hC,EAAerP,EAAfqP,WACJA,IACAA,EAAW8iC,4BACPnB,GAAeA,EAAYG,OAC3BH,EAAYG,MAAM52C,OAAO8U,GACzB6iC,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW/iC,GAEtC,GAAC,CAAArX,IAAA,eAAAC,MACD,WACI,IAAQo5C,EAAiB15C,KAAKgF,MAAtB00C,aACRA,GAAgBA,GACpB,GAAC,CAAAr5C,IAAA,SAAAC,MACD,WACI,OAAO,IACX,KAAC24C,CAAA,CAhGyB,CAASyB,EAAAA,WAkGvC,SAAS1yC,GAAchD,GACnB,IAAA21C,ECpFJ,WACI,IAAMl1C,GAAUI,EAAAA,EAAAA,YAAW7G,GAC3B,GAAgB,OAAZyG,EACA,MAAO,EAAC,EAAM,MAClB,IAAQylC,EAAwCzlC,EAAxCylC,UAAWC,EAA6B1lC,EAA7B0lC,eAAgBI,EAAa9lC,EAAb8lC,SAG7BlhC,GAAKuwC,EAAAA,EAAAA,SAGX,OAFAv7C,EAAAA,EAAAA,YAAU,kBAAMksC,EAASlhC,EAAG,GAAE,KAEtB6gC,GAAaC,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAe9gC,EAAG,GACD,EAAC,EACnE,CDyEsCwwC,GAAaC,GAAAt0B,EAAAA,GAAAA,GAAAm0B,EAAA,GAAxCzP,EAAS4P,EAAA,GAAEpB,EAAYoB,EAAA,GACxBzB,GAAcxzC,EAAAA,EAAAA,YAAWkB,GAC/B,OAAQ2zC,EAAAA,cAA6BzB,IAAwBtxC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO3C,GAAK,IAAEq0C,YAAaA,EAAaC,mBAAmBzzC,EAAAA,EAAAA,YAAWmB,GAA2BkkC,UAAWA,EAAWwO,aAAcA,IACtM,CACA,IAAMH,GAAyB,CAC3B9qC,cAAY9G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL4wC,IAAmB,IACtBwC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRpsC,oBAAqB4pC,GACrB3pC,qBAAsB2pC,GACtBzpC,uBAAwBypC,GACxB1pC,wBAAyB0pC,GACzByC,UAAWvC,IE1HTwC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQl6C,OACrBo6C,GAAW,SAAC76C,GAAK,MAAsB,kBAAVA,EAAqByM,WAAWzM,GAASA,CAAK,EAC3E86C,GAAO,SAAC96C,GAAK,MAAsB,kBAAVA,GAAsBwN,GAAG3C,KAAK7K,EAAM,EACnE,SAAS+6C,GAAUloC,EAAQmoC,EAAQC,EAAM7hB,EAAU8hB,EAAwBC,GACnED,GACAroC,EAAOlC,QAAU4oB,GAAU,OAEVp3B,IAAjB84C,EAAKtqC,QAAwBsqC,EAAKtqC,QAAU,EAAGyqC,GAAgBhiB,IAC/DvmB,EAAOwoC,YAAc9hB,QAA6Bp3B,IAAnB64C,EAAOrqC,QAAwBqqC,EAAOrqC,QAAU,EAAG,EAAG2qC,GAAiBliB,KAEjG+hB,IACLtoC,EAAOlC,QAAU4oB,QAA6Bp3B,IAAnB64C,EAAOrqC,QAAwBqqC,EAAOrqC,QAAU,OAAoBxO,IAAjB84C,EAAKtqC,QAAwBsqC,EAAKtqC,QAAU,EAAGyoB,IAKjI,IAAK,IAAI32B,EAAI,EAAGA,EAAIm4C,GAAYn4C,IAAK,CACjC,IAAM84C,EAAc,SAAH/2C,OAAYm2C,GAAQl4C,GAAE,UACnC+4C,EAAeC,GAAUT,EAAQO,GACjCG,EAAaD,GAAUR,EAAMM,GACjC,QAAqBp5C,IAAjBq5C,QAA6Cr5C,IAAfu5C,EAElCF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAZ,GAAKU,KAAkBV,GAAKY,IAE5B7oC,EAAO0oC,GAAev4C,KAAKC,IAAIs2B,GAAUshB,GAASW,GAAeX,GAASa,GAAatiB,GAAW,IAC9F7rB,GAAQ1C,KAAK6wC,IAAenuC,GAAQ1C,KAAK2wC,MACzC3oC,EAAO0oC,IAAgB,MAI3B1oC,EAAO0oC,GAAeG,CAE9B,EAIIV,EAAOprC,QAAUqrC,EAAKrrC,UACtBiD,EAAOjD,OAAS2pB,GAAUyhB,EAAOprC,QAAU,EAAGqrC,EAAKrrC,QAAU,EAAGwpB,GAExE,CACA,SAASqiB,GAAUjnC,EAAQmnC,GACvB,YAA8Bx5C,IAAvBqS,EAAOmnC,GACRnnC,EAAOmnC,GACPnnC,EAAOrG,YACjB,CAwBA,IAAMitC,GAAkBQ,GAAS,EAAG,GAAKljB,IACnC4iB,GAAmBM,GAAS,GAAK,IAAM7hC,IAC7C,SAAS6hC,GAAS14C,EAAKD,EAAKq1B,GACxB,OAAO,SAACh6B,GAEJ,OAAIA,EAAI4E,EACG,EACP5E,EAAI2E,EACG,EACJq1B,EAAOc,GAASl2B,EAAKD,EAAK3E,GACrC,CACJ,CCrFA,SAASu9C,GAAatO,EAAMuO,GACxBvO,EAAKrqC,IAAM44C,EAAW54C,IACtBqqC,EAAKtqC,IAAM64C,EAAW74C,GAC1B,CAMA,SAAS84C,GAAYtM,EAAKuM,GACtBH,GAAapM,EAAInkC,EAAG0wC,EAAU1wC,GAC9BuwC,GAAapM,EAAIlkC,EAAGywC,EAAUzwC,EAClC,CCVA,SAAS0wC,GAAiB1gC,EAAOqyB,EAAWjhC,EAAOghC,EAAa2B,GAM5D,OAJA/zB,EAAQ6zB,GADR7zB,GAASqyB,EACiB,EAAIjhC,EAAOghC,QACpBxrC,IAAbmtC,IACA/zB,EAAQ6zB,GAAW7zB,EAAO,EAAI+zB,EAAU3B,IAErCpyB,CACX,CAsBA,SAAS2gC,GAAqB3O,EAAMwC,EAAUvtC,EAA8BkS,EAAQynC,GAAY,IAAAtyC,GAAAqc,EAAAA,GAAAA,GAAA1jB,EAAA,GAA/CzC,EAAG8J,EAAA,GAAEmmC,EAAQnmC,EAAA,GAAEomC,EAASpmC,EAAA,IAlBzE,SAAyB0jC,GAA8F,IAAxFK,EAAS1rC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGyK,EAAKzK,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGwS,EAAMxS,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAKotC,EAAQptC,UAAAzB,OAAA,EAAAyB,UAAA,QAAAC,EAAE25C,EAAU55C,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAGqrC,EAAM4O,EAAUj6C,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAGqrC,EAC7G,GAAIhgC,GAAQ1C,KAAK+iC,GAAY,CACzBA,EAAYnhC,WAAWmhC,GAEvBA,EADyBrU,GAAU4iB,EAAWj5C,IAAKi5C,EAAWl5C,IAAK2qC,EAAY,KAChDuO,EAAWj5C,GAC9C,CACA,GAAyB,kBAAd0qC,EAAX,CAEA,IAAID,EAAcpU,GAAUuiB,EAAW54C,IAAK44C,EAAW74C,IAAKyR,GACxD64B,IAASuO,IACTnO,GAAeC,GACnBL,EAAKrqC,IAAM+4C,GAAiB1O,EAAKrqC,IAAK0qC,EAAWjhC,EAAOghC,EAAa2B,GACrE/B,EAAKtqC,IAAMg5C,GAAiB1O,EAAKtqC,IAAK2qC,EAAWjhC,EAAOghC,EAAa2B,EAL3D,CAMd,CAMI8M,CAAgB7O,EAAMwC,EAAWhwC,GAAMgwC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWpjC,MAAO+H,EAAQynC,EAClH,CAIA,IAAMhM,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASiM,GAAoB5M,EAAKM,EAAYiM,EAAWM,GACrDJ,GAAqBzM,EAAInkC,EAAGykC,EAAYI,GAAO6L,EAAYA,EAAU1wC,OAAInJ,EAAWm6C,EAAYA,EAAUhxC,OAAInJ,GAC9G+5C,GAAqBzM,EAAIlkC,EAAGwkC,EAAYK,GAAO4L,EAAYA,EAAUzwC,OAAIpJ,EAAWm6C,EAAYA,EAAU/wC,OAAIpJ,EAClH,CCjDA,SAASo6C,GAAgBr7C,GACrB,OAA2B,IAApBA,EAAM0sC,WAAmC,IAAhB1sC,EAAMyL,KAC1C,CACA,SAAS6vC,GAAYt7C,GACjB,OAAOq7C,GAAgBr7C,EAAMoK,IAAMixC,GAAgBr7C,EAAMqK,EAC7D,CACA,SAASkxC,GAAU9gC,EAAGC,GAClB,OAAQD,EAAErQ,EAAEpI,MAAQ0Y,EAAEtQ,EAAEpI,KACpByY,EAAErQ,EAAErI,MAAQ2Y,EAAEtQ,EAAErI,KAChB0Y,EAAEpQ,EAAErI,MAAQ0Y,EAAErQ,EAAErI,KAChByY,EAAEpQ,EAAEtI,MAAQ2Y,EAAErQ,EAAEtI,GACxB,CACA,SAASy5C,GAAiB/gC,EAAGC,GACzB,OAAQ5Y,KAAK8J,MAAM6O,EAAErQ,EAAEpI,OAASF,KAAK8J,MAAM8O,EAAEtQ,EAAEpI,MAC3CF,KAAK8J,MAAM6O,EAAErQ,EAAErI,OAASD,KAAK8J,MAAM8O,EAAEtQ,EAAErI,MACvCD,KAAK8J,MAAM6O,EAAEpQ,EAAErI,OAASF,KAAK8J,MAAM8O,EAAErQ,EAAErI,MACvCF,KAAK8J,MAAM6O,EAAEpQ,EAAEtI,OAASD,KAAK8J,MAAM8O,EAAErQ,EAAEtI,IAC/C,CACA,SAAS05C,GAAYlN,GACjB,OAAOnC,GAAWmC,EAAInkC,GAAKgiC,GAAWmC,EAAIlkC,EAC9C,CCtBkE,IAE5DqxC,GAAS,WACX,SAAAA,KAAcn9C,EAAAA,EAAAA,GAAA,KAAAm9C,GACVl9C,KAAKm6C,QAAU,EACnB,CAuGC,OAvGA/5C,EAAAA,EAAAA,GAAA88C,EAAA,EAAA78C,IAAA,MAAAC,MACD,SAAI2c,GACAymB,GAAc1jC,KAAKm6C,QAASl9B,GAC5BA,EAAKkgC,gBACT,GAAC,CAAA98C,IAAA,SAAAC,MACD,SAAO2c,GAKH,GAJA2mB,GAAW5jC,KAAKm6C,QAASl9B,GACrBA,IAASjd,KAAKo9C,WACdp9C,KAAKo9C,cAAW36C,GAEhBwa,IAASjd,KAAKu7C,KAAM,CACpB,IAAM6B,EAAWp9C,KAAKm6C,QAAQn6C,KAAKm6C,QAAQp5C,OAAS,GAChDq8C,GACAp9C,KAAK+5C,QAAQqD,EAErB,CACJ,GAAC,CAAA/8C,IAAA,WAAAC,MACD,SAAS2c,GACL,IAMImgC,EANEC,EAAcr9C,KAAKm6C,QAAQmD,WAAU,SAACC,GAAM,OAAKtgC,IAASsgC,CAAM,IACtE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAIt6C,EAAIs6C,EAAat6C,GAAK,EAAGA,IAAK,CACnC,IAAMw6C,EAASv9C,KAAKm6C,QAAQp3C,GAC5B,IAAyB,IAArBw6C,EAAOrS,UAAqB,CAC5BkS,EAAWG,EACX,KACJ,CACJ,CACA,QAAIH,IACAp9C,KAAK+5C,QAAQqD,IACN,EAKf,GAAC,CAAA/8C,IAAA,UAAAC,MACD,SAAQ2c,EAAMugC,GACV,IAAMJ,EAAWp9C,KAAKu7C,KAClBt+B,IAASmgC,IAEbp9C,KAAKo9C,SAAWA,EAChBp9C,KAAKu7C,KAAOt+B,EACZA,EAAKwgC,OACDL,IACAA,EAASrzC,UAAYqzC,EAASD,iBAC9BlgC,EAAKkgC,iBACLlgC,EAAKygC,WAAaN,EACdI,IACAvgC,EAAKygC,WAAWC,iBAAkB,GAElCP,EAASQ,WACT3gC,EAAK2gC,SAAWR,EAASQ,SACzB3gC,EAAK2gC,SAAShsC,aACVwrC,EAASS,iBAAmBT,EAASxrC,cAEzCqL,EAAKiE,MAAQjE,EAAKiE,KAAK48B,aACvB7gC,EAAK8gC,eAAgB,IAGP,IADI9gC,EAAKpL,QAAnBmsC,WAEJZ,EAASa,QAerB,GAAC,CAAA59C,IAAA,wBAAAC,MACD,WACIN,KAAKm6C,QAAQ12C,SAAQ,SAACwZ,GAClB,IAAQpL,EAA0BoL,EAA1BpL,QAASqsC,EAAiBjhC,EAAjBihC,aACjBrsC,EAAQs5B,gBAAkBt5B,EAAQs5B,iBAC9B+S,GACAA,EAAarsC,QAAQs5B,gBACjB+S,EAAarsC,QAAQs5B,gBAEjC,GACJ,GAAC,CAAA9qC,IAAA,iBAAAC,MACD,WACIN,KAAKm6C,QAAQ12C,SAAQ,SAACwZ,GAClBA,EAAKlT,UAAYkT,EAAKkgC,gBAAe,EACzC,GACJ,GACA,CAAA98C,IAAA,qBAAAC,MAIA,WACQN,KAAKu7C,MAAQv7C,KAAKu7C,KAAKqC,WACvB59C,KAAKu7C,KAAKqC,cAAWn7C,EAE7B,KAACy6C,CAAA,CA1GU,GCFf,SAASiB,GAAyB38C,EAAOk3C,EAAW0F,GAChD,IAAIzxC,EAAY,GAOV0xC,EAAa78C,EAAMoK,EAAEsiC,UAAYwK,EAAU9sC,EAC3C0yC,EAAa98C,EAAMqK,EAAEqiC,UAAYwK,EAAU7sC,EAWjD,IAVIwyC,GAAcC,KACd3xC,EAAY,eAAH7H,OAAkBu5C,EAAU,QAAAv5C,OAAOw5C,EAAU,YAMtC,IAAhB5F,EAAU9sC,GAA2B,IAAhB8sC,EAAU7sC,IAC/Bc,GAAa,SAAJ7H,OAAa,EAAI4zC,EAAU9sC,EAAC,MAAA9G,OAAK,EAAI4zC,EAAU7sC,EAAC,OAEzDuyC,EAAiB,CACjB,IAAQluC,EAA2CkuC,EAA3CluC,OAAQC,EAAmCiuC,EAAnCjuC,QAASC,EAA0BguC,EAA1BhuC,QAASM,EAAiB0tC,EAAjB1tC,MAAOC,EAAUytC,EAAVztC,MACrCT,IACAvD,GAAa,UAAJ7H,OAAcoL,EAAM,UAC7BC,IACAxD,GAAa,WAAJ7H,OAAeqL,EAAO,UAC/BC,IACAzD,GAAa,WAAJ7H,OAAesL,EAAO,UAC/BM,IACA/D,GAAa,SAAJ7H,OAAa4L,EAAK,UAC3BC,IACAhE,GAAa,SAAJ7H,OAAa6L,EAAK,SACnC,CAKA,IAAM4tC,EAAgB/8C,EAAMoK,EAAEqB,MAAQyrC,EAAU9sC,EAC1C4yC,EAAgBh9C,EAAMqK,EAAEoB,MAAQyrC,EAAU7sC,EAIhD,OAHsB,IAAlB0yC,GAAyC,IAAlBC,IACvB7xC,GAAa,SAAJ7H,OAAay5C,EAAa,MAAAz5C,OAAK05C,EAAa,MAElD7xC,GAAa,MACxB,CC3CA,IAAM8xC,GAAiB,SAACxiC,EAAGC,GAAC,OAAKD,EAAE4K,MAAQ3K,EAAE2K,KAAK,ECG5C63B,GAAQ,WACV,SAAAA,KAAc3+C,EAAAA,EAAAA,GAAA,KAAA2+C,GACV1+C,KAAKoX,SAAW,GAChBpX,KAAK2+C,SAAU,CACnB,CAaC,OAbAv+C,EAAAA,EAAAA,GAAAs+C,EAAA,EAAAr+C,IAAA,MAAAC,MACD,SAAIke,GACAklB,GAAc1jC,KAAKoX,SAAUoH,GAC7Bxe,KAAK2+C,SAAU,CACnB,GAAC,CAAAt+C,IAAA,SAAAC,MACD,SAAOke,GACHolB,GAAW5jC,KAAKoX,SAAUoH,GAC1Bxe,KAAK2+C,SAAU,CACnB,GAAC,CAAAt+C,IAAA,UAAAC,MACD,SAAQgC,GACJtC,KAAK2+C,SAAW3+C,KAAKoX,SAAS+wB,KAAKsW,IACnCz+C,KAAK2+C,SAAU,EACf3+C,KAAKoX,SAAS3T,QAAQnB,EAC1B,KAACo8C,CAAA,CAjBS,GCGd,SAAS/5B,GAAMriB,EAAUs8C,GACrB,IAAMj6C,EAAQkhB,GAAKxiB,MACbw7C,EAAe,SAAfA,EAAY/7C,GAAsB,IAC9BqiB,EADuBriB,EAATrB,UACQkD,EACxBwgB,GAAWy5B,IACXnkC,GAAYokC,GACZv8C,EAAS6iB,EAAUy5B,GAE3B,EAEA,OADApkC,GAAAA,KAAWqkC,GAAc,GAClB,kBAAMpkC,GAAYokC,EAAa,CAC1C,CCjBA,SAASC,GAAOC,GACR71C,OAAO81C,aACP91C,OAAO81C,YAAYF,OAAOC,EAElC,CCJA,SAASE,GAAaznC,GAClB,OAAOA,aAAmB0nC,YAAkC,QAApB1nC,EAAQsD,OACpD,CC0BA,IAAMqkC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMnCh1C,GAAK,EAKHi1C,GAAsB,CACxB5yC,KAAM,kBACN6yC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAyBr/C,EAAKgI,EAAeyM,EAAQ6qC,GAC1D,IAAQ/tC,EAAiBvJ,EAAjBuJ,aAEJA,EAAavR,KACbyU,EAAOzU,GAAOuR,EAAavR,GAC3BgI,EAAcu3C,eAAev/C,EAAK,GAC9Bs/C,IACAA,EAAsBt/C,GAAO,GAGzC,CACA,SAASw/C,GAAoB/8C,GAA6F,IAA1Fg9C,EAAoBh9C,EAApBg9C,qBAAsBC,EAAaj9C,EAAbi9C,cAAeC,EAAal9C,EAAbk9C,cAAeC,EAAiBn9C,EAAjBm9C,kBAAmBC,EAAcp9C,EAAdo9C,eACnG,kBACI,SAAAC,IAAuH,IAAAliC,EAAA,KAA3GrM,EAAYpP,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG8F,EAAM9F,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAqB,OAAlBu9C,QAA4C,IAAlBA,OAA2B,EAASA,KAAehgD,EAAAA,EAAAA,GAAA,KAAAogD,GAIjHngD,KAAKqK,GAAKA,KAIVrK,KAAKogD,YAAc,EAOnBpgD,KAAKoX,SAAW,IAAIjX,IAKpBH,KAAK6R,QAAU,CAAC,EAMhB7R,KAAKqgD,iBAAkB,EACvBrgD,KAAKmyC,oBAAqB,EAO1BnyC,KAAK+9C,eAAgB,EAKrB/9C,KAAKsgD,mBAAoB,EAKzBtgD,KAAKugD,yBAA0B,EAK/BvgD,KAAKwgD,kBAAmB,EAIxBxgD,KAAKygD,uBAAwB,EAC7BzgD,KAAK0gD,uBAAwB,EAK7B1gD,KAAK89C,YAAa,EAIlB99C,KAAK2gD,OAAQ,EAKb3gD,KAAK4gD,YAAa,EAIlB5gD,KAAK6gD,sBAAuB,EAS5B7gD,KAAK04C,UAAY,CAAE9sC,EAAG,EAAGC,EAAG,GAI5B7L,KAAK8gD,cAAgB,IAAIl2C,IACzB5K,KAAK+gD,iBAAkB,EAEvB/gD,KAAKghD,iBAAkB,EACvBhhD,KAAKihD,2BAA4B,EACjCjhD,KAAKkhD,kBAAoB,WACjBjjC,EAAK6/B,aACL7/B,EAAK6/B,YAAa,EAClB7/B,EAAKkjC,oBAEb,EAMAnhD,KAAKohD,iBAAmB,WACpBnjC,EAAKgjC,2BAA4B,EAKjC3B,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZxhC,EAAKojC,MAAM59C,QAAQ69C,IACnBrjC,EAAKojC,MAAM59C,QAAQ89C,IACnBtjC,EAAKojC,MAAM59C,QAAQ+9C,IACnBvjC,EAAKojC,MAAM59C,QAAQg+C,IACnB3C,GAAOQ,GACX,EACAt/C,KAAK0hD,cAAe,EACpB1hD,KAAK2hD,WAAY,EACjB3hD,KAAK4hD,kBAAoB,EAKzB5hD,KAAK6hD,YAAc,IAAIj3C,IACvB5K,KAAK4R,aAAeA,EACpB5R,KAAKkhB,KAAO5Y,EAASA,EAAO4Y,MAAQ5Y,EAAStI,KAC7CA,KAAK8hD,KAAOx5C,EAAS,GAAHxD,QAAA6lB,EAAAA,GAAAA,GAAOriB,EAAOw5C,MAAI,CAAEx5C,IAAU,GAChDtI,KAAKsI,OAASA,EACdtI,KAAK6mB,MAAQve,EAASA,EAAOue,MAAQ,EAAI,EACzC,IAAK,IAAI9jB,EAAI,EAAGA,EAAI/C,KAAK8hD,KAAK/gD,OAAQgC,IAClC/C,KAAK8hD,KAAK/+C,GAAG89C,sBAAuB,EAEpC7gD,KAAKkhB,OAASlhB,OACdA,KAAKqhD,MAAQ,IAAI3C,GACzB,CAolCC,OAplCAt+C,EAAAA,EAAAA,GAAA+/C,EAAA,EAAA9/C,IAAA,mBAAAC,MACD,SAAiB6E,EAAM+V,GAInB,OAHKlb,KAAK8gD,cAActgD,IAAI2E,IACxBnF,KAAK8gD,cAAc/1C,IAAI5F,EAAM,IAAI0+B,IAE9B7jC,KAAK8gD,cAAcj2C,IAAI1F,GAAM1E,IAAIya,EAC5C,GAAC,CAAA7a,IAAA,kBAAAC,MACD,SAAgB6E,GAC6C,IAAzD,IAAM48C,EAAsB/hD,KAAK8gD,cAAcj2C,IAAI1F,GAAMiX,EAAA5Z,UAAAzB,OADpCihD,EAAI,IAAAx9C,MAAA4X,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ0lC,EAAI1lC,EAAA,GAAA9Z,UAAA8Z,GAEzBylC,GAAuBA,EAAoBpd,OAAM5mB,MAA1BgkC,EAA8BC,EACzD,GAAC,CAAA3hD,IAAA,eAAAC,MACD,SAAa6E,GACT,OAAOnF,KAAK8gD,cAActgD,IAAI2E,EAClC,GACA,CAAA9E,IAAA,QAAAC,MAGA,SAAMyJ,GAAqD,IAAAqU,EAAA,KAA3C2/B,EAAav7C,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAGxC,KAAKkhB,KAAK6/B,gBACtC,IAAI/gD,KAAK+J,SAAT,CAEA/J,KAAK2gD,MAAQ1B,GAAal1C,GAC1B/J,KAAK+J,SAAWA,EAChB,IAAA+nB,EAA4C9xB,KAAK6R,QAAzC3J,EAAQ4pB,EAAR5pB,SAAUvB,EAAMmrB,EAANnrB,OAAQ0B,EAAaypB,EAAbzpB,cAS1B,GARIA,IAAkBA,EAAcQ,SAChCR,EAAc2B,MAAMD,GAExB/J,KAAKkhB,KAAKmgC,MAAM5gD,IAAIT,MACpBA,KAAKsI,QAAUtI,KAAKsI,OAAO8O,SAAS3W,IAAIT,MACpC+9C,IAAkBp3C,GAAUuB,KAC5BlI,KAAK+9C,eAAgB,GAErB+B,EAAsB,CACtB,IAAImC,EACEC,EAAsB,WAAH,OAAU9jC,EAAK8C,KAAKw/B,uBAAwB,CAAK,EAC1EZ,EAAqB/1C,GAAU,WAC3BqU,EAAK8C,KAAKw/B,uBAAwB,EAClCuB,GAAeA,IACfA,EAAct9B,GAAMu9B,EAAqB,KACrChK,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C/5B,EAAKijC,MAAM59C,QAAQ0+C,IAE3B,GACJ,CACIj6C,GACAlI,KAAKkhB,KAAKkhC,mBAAmBl6C,EAAUlI,OAGd,IAAzBA,KAAK6R,QAAQ5M,SACboD,IACCH,GAAYvB,IACb3G,KAAKob,iBAAiB,aAAa,SAAAjR,GAA+E,IAA5E3I,EAAK2I,EAAL3I,MAAOi1C,EAAgBtsC,EAAhBssC,iBAAkB4L,EAAwBl4C,EAAxBk4C,yBAAkCC,EAASn4C,EAAjBxD,OACrF,GAAIyX,EAAKmkC,yBAGL,OAFAnkC,EAAKjL,YAAS1Q,OACd2b,EAAKokC,oBAAiB//C,GAI1B,IAAMggD,EAAmBrkC,EAAKvM,QAAQsI,YAClC9R,EAAcgc,wBACdq+B,GACJC,EAA+Dt6C,EAAckV,WAArEqlC,EAAsBD,EAAtBC,uBAAwBC,EAAyBF,EAAzBE,0BAK1BC,GAAiB1kC,EAAK2kC,eACvB/F,GAAiB5+B,EAAK2kC,aAAcT,IACrCD,EAMEW,GAAgCvM,GAAoB4L,EAC1D,GAAIjkC,EAAKvM,QAAQoxC,YACZ7kC,EAAKs/B,YAAct/B,EAAKs/B,WAAW3zC,UACpCi5C,GACCvM,IACIqM,IAAkB1kC,EAAKg8B,kBAAoB,CAC5Ch8B,EAAKs/B,aACLt/B,EAAK8/B,aAAe9/B,EAAKs/B,WACzBt/B,EAAK8/B,aAAaA,kBAAez7C,GAErC2b,EAAK8kC,mBAAmB1hD,EAAOwhD,GAC/B,IAAMG,GAAgBx7C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfyd,GAAmBq9B,EAAkB,WAAS,IACjD1hB,OAAQ6hB,EACRr4B,WAAYs4B,KAEZx6C,EAAc8+B,oBACd/oB,EAAKvM,QAAQoxC,cACbE,EAAiBx+B,MAAQ,EACzBw+B,EAAiBz2C,MAAO,GAE5B0R,EAAKonB,eAAe2d,EACxB,MAOS1M,GACD0L,GAAgB/jC,GAEhBA,EAAKi8B,UAAYj8B,EAAKvM,QAAQs5B,gBAC9B/sB,EAAKvM,QAAQs5B,iBAGrB/sB,EAAK2kC,aAAeT,CACxB,GA5FM,CA8Fd,GAAC,CAAAjiD,IAAA,UAAAC,MACD,WACIN,KAAK6R,QAAQ3J,UAAYlI,KAAK85C,aAC9B95C,KAAKkhB,KAAKmgC,MAAMz+C,OAAO5C,MACvB,IAAMi6C,EAAQj6C,KAAKk6C,WACnBD,GAASA,EAAMr3C,OAAO5C,MACtBA,KAAKsI,QAAUtI,KAAKsI,OAAO8O,SAAStW,OAAOd,MAC3CA,KAAK+J,cAAWtH,EAChBgY,GAAYza,KAAKohD,iBACrB,GACA,CAAA/gD,IAAA,cAAAC,MACA,WACIN,KAAKygD,uBAAwB,CACjC,GAAC,CAAApgD,IAAA,gBAAAC,MACD,WACIN,KAAKygD,uBAAwB,CACjC,GAAC,CAAApgD,IAAA,kBAAAC,MACD,WACI,OAAON,KAAKygD,uBAAyBzgD,KAAK0gD,qBAC9C,GAAC,CAAArgD,IAAA,yBAAAC,MACD,WACI,OAAQN,KAAKmyC,oBACRnyC,KAAKsI,QAAUtI,KAAKsI,OAAOi6C,2BAC5B,CACR,GACA,CAAAliD,IAAA,cAAAC,MACA,WACQN,KAAKojD,oBAETpjD,KAAK89C,YAAa,EAClB99C,KAAKqhD,OAASrhD,KAAKqhD,MAAM59C,QAAQ4/C,IACjCrjD,KAAKogD,cACT,GAAC,CAAA//C,IAAA,uBAAAC,MACD,WACI,IAAQ+H,EAAkBrI,KAAK6R,QAAvBxJ,cACR,OAAOA,GAAiBA,EAAckV,WAAWzL,iBACrD,GAAC,CAAAzR,IAAA,aAAAC,MACD,WAAyC,IAA9BgjD,IAAqB9gD,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,KAAAA,UAAA,GAE5B,GADAxC,KAAKkhB,KAAK6/B,iBAAkB,EACxB/gD,KAAKkhB,KAAKkiC,kBACVpjD,KAAK6R,QAAQs5B,gBAAkBnrC,KAAK6R,QAAQs5B,sBAIhD,IADCnrC,KAAKkhB,KAAK48B,YAAc99C,KAAKkhB,KAAKqiC,eAC/BvjD,KAAK+9C,cAAT,CAEA/9C,KAAK+9C,eAAgB,EACrB,IAAK,IAAIh7C,EAAI,EAAGA,EAAI/C,KAAK8hD,KAAK/gD,OAAQgC,IAAK,CACvC,IAAMka,EAAOjd,KAAK8hD,KAAK/+C,GACvBka,EAAK4jC,sBAAuB,EAC5B5jC,EAAK44B,aAAa,YACd54B,EAAKpL,QAAQoxC,YACbhmC,EAAK68B,YAAW,EAExB,CACA,IAAA/a,EAA6B/+B,KAAK6R,QAA1B3J,EAAQ62B,EAAR72B,SAAUvB,EAAMo4B,EAANp4B,OAClB,QAAiBlE,IAAbyF,GAA2BvB,EAA/B,CAEA,IAAMmL,EAAoB9R,KAAKwjD,uBAC/BxjD,KAAKyjD,2BAA6B3xC,EAC5BA,EAAkB9R,KAAK4R,aAAc,SACrCnP,EACNzC,KAAK0jD,iBACLJ,GAAyBtjD,KAAK2jD,gBAAgB,aANpC,CAZA,CAmBd,GAAC,CAAAtjD,IAAA,SAAAC,MACD,WAMI,GALAN,KAAKghD,iBAAkB,EACEhhD,KAAKojD,kBAQ1B,OAHApjD,KAAK4jD,gBACL5jD,KAAKmhD,yBACLnhD,KAAKqhD,MAAM59C,QAAQogD,IAGlB7jD,KAAK89C,YACN99C,KAAKqhD,MAAM59C,QAAQqgD,IAEvB9jD,KAAK89C,YAAa,EAId50C,OAAO66C,4BACP76C,OAAO66C,6BAEX/jD,KAAKqhD,MAAM59C,QAAQugD,IAKnBhkD,KAAKqhD,MAAM59C,QAAQqyC,IAKnB91C,KAAKqhD,MAAM59C,QAAQwgD,IACnBjkD,KAAKmhD,oBAML,IAAM99C,EAAMwiB,GAAKxiB,MACjBR,GAAUrB,MAAQoL,GAAM,EAAG,IAAO,GAAIvJ,EAAMR,GAAUpB,WACtDoB,GAAUpB,UAAY4B,EACtBR,GAAUnB,cAAe,EACzBC,GAAMqH,OAAOzI,QAAQsC,IACrBlB,GAAMuiD,UAAU3jD,QAAQsC,IACxBlB,GAAM0H,OAAO9I,QAAQsC,IACrBA,GAAUnB,cAAe,CAC7B,GAAC,CAAArB,IAAA,YAAAC,MACD,WAAY,IAAAmlC,EAAA,KACHzlC,KAAKghD,kBACNhhD,KAAKghD,iBAAkB,EACvBj9C,EAAUogD,MAAK,kBAAM1e,EAAKz8B,QAAQ,IAE1C,GAAC,CAAA3I,IAAA,oBAAAC,MACD,WACIN,KAAKqhD,MAAM59C,QAAQ2gD,IACnBpkD,KAAK6hD,YAAYp+C,QAAQ4gD,GAC7B,GAAC,CAAAhkD,IAAA,2BAAAC,MACD,WACSN,KAAKihD,4BACNjhD,KAAKihD,2BAA4B,EACjCzmC,GAAAA,UAAgBxa,KAAKohD,kBAAkB,GAAO,GAEtD,GAAC,CAAA/gD,IAAA,4BAAAC,MACD,WAA4B,IAAA40C,EAAA,KAMxB16B,GAAAA,YAAiB,WACT06B,EAAK6I,cACL7I,EAAKh0B,KAAKu4B,YAGVvE,EAAKh0B,KAAKggC,mBAElB,GACJ,GACA,CAAA7gD,IAAA,iBAAAC,MAGA,YACQN,KAAK49C,UAAa59C,KAAK+J,WAE3B/J,KAAK49C,SAAW59C,KAAKyzC,UACzB,GAAC,CAAApzC,IAAA,eAAAC,MACD,WACI,GAAKN,KAAK+J,WAGV/J,KAAK61C,eACC71C,KAAK6R,QAAQyyC,qBAAuBtkD,KAAKq6C,UAC1Cr6C,KAAK+9C,eADV,CAWA,GAAI/9C,KAAK09C,aAAe19C,KAAK09C,WAAW3zC,SACpC,IAAK,IAAIhH,EAAI,EAAGA,EAAI/C,KAAK8hD,KAAK/gD,OAAQgC,IAAK,CAC1B/C,KAAK8hD,KAAK/+C,GAClB8yC,cACT,CAEJ,IAAM0O,EAAavkD,KAAK2G,OACxB3G,KAAK2G,OAAS3G,KAAKyzC,SAAQ,GAC3BzzC,KAAKwkD,gBnBxdQ,CACrB54C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImB0d7BvD,KAAK+9C,eAAgB,EACrB/9C,KAAK24C,qBAAkBl2C,EACvBzC,KAAK2jD,gBAAgB,UAAW3jD,KAAK2G,OAAO2rC,WAC5C,IAAQjqC,EAAkBrI,KAAK6R,QAAvBxJ,cACRA,GACIA,EAAcs8B,OAAO,gBAAiB3kC,KAAK2G,OAAO2rC,UAAWiS,EAAaA,EAAWjS,eAAY7vC,EAtBrG,CAuBJ,GAAC,CAAApC,IAAA,eAAAC,MACD,WAAgC,IAAnBmkD,EAAKjiD,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,UACbknB,EAAmBrkB,QAAQrF,KAAK6R,QAAQ6yC,cAAgB1kD,KAAK+J,UAC7D/J,KAAKs0C,QACLt0C,KAAKs0C,OAAO8L,cAAgBpgD,KAAKkhB,KAAKk/B,aACtCpgD,KAAKs0C,OAAOmQ,QAAUA,IACtB/6B,GAAmB,GAEnBA,IACA1pB,KAAKs0C,OAAS,CACV8L,YAAapgD,KAAKkhB,KAAKk/B,YACvBqE,MAAAA,EACAE,OAAQ1E,EAAkBjgD,KAAK+J,UAC/BkL,OAAQ+qC,EAAchgD,KAAK+J,WAGvC,GAAC,CAAA1J,IAAA,iBAAAC,MACD,WACI,GAAK4/C,EAAL,CAEA,IAAM0E,EAAmB5kD,KAAK+9C,eAAiB/9C,KAAK6gD,qBAC9CgE,EAAgB7kD,KAAK24C,kBAAoBmE,GAAY98C,KAAK24C,iBAC1D7mC,EAAoB9R,KAAKwjD,uBACzBsB,EAAyBhzC,EACzBA,EAAkB9R,KAAK4R,aAAc,SACrCnP,EACAsiD,EAA8BD,IAA2B9kD,KAAKyjD,2BAChEmB,IACCC,GACG3yC,GAAalS,KAAK4R,eAClBmzC,KACJ7E,EAAelgD,KAAK+J,SAAU+6C,GAC9B9kD,KAAK6gD,sBAAuB,EAC5B7gD,KAAKm9C,iBAdC,CAgBd,GAAC,CAAA98C,IAAA,UAAAC,MACD,WAAgC,IAAxB0kD,IAAexiD,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,KAAAA,UAAA,GACbyiD,EAAUjlD,KAAKu0C,iBACjBjC,EAAYtyC,KAAKklD,oBAAoBD,GAUzC,OAJID,IACA1S,EAAYtyC,KAAKglD,gBAAgB1S,IAErC6S,GAAS7S,GACF,CACH8N,YAAapgD,KAAKkhB,KAAKk/B,YACvBgF,YAAaH,EACb3S,UAAAA,EACA1gC,aAAc,CAAC,EACfwB,OAAQpT,KAAKqK,GAErB,GAAC,CAAAhK,IAAA,iBAAAC,MACD,WACI,IAAQ+H,EAAkBrI,KAAK6R,QAAvBxJ,cACR,IAAKA,EACD,MnB1hBS,CACrBuD,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImB4hB7B,IAAMwsC,EAAM1nC,EAAcwoB,qBAElByjB,EAAWt0C,KAAKkhB,KAAhBozB,OAKR,OAJIA,IACAnE,GAAcJ,EAAInkC,EAAG0oC,EAAOr/B,OAAOrJ,GACnCukC,GAAcJ,EAAIlkC,EAAGyoC,EAAOr/B,OAAOpJ,IAEhCkkC,CACX,GAAC,CAAA1vC,IAAA,sBAAAC,MACD,SAAoByvC,GAChB,IAAMsV,EnBriBO,CACrBz5C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImBuiB7B84C,GAAYgJ,EAAkBtV,GAK9B,IAAK,IAAIhtC,EAAI,EAAGA,EAAI/C,KAAK8hD,KAAK/gD,OAAQgC,IAAK,CACvC,IAAMka,EAAOjd,KAAK8hD,KAAK/+C,GACfuxC,EAAoBr3B,EAApBq3B,OAAQziC,EAAYoL,EAAZpL,QAChB,GAAIoL,IAASjd,KAAKkhB,MAAQozB,GAAUziC,EAAQ6yC,aAAc,CAKtD,GAAIpQ,EAAOqQ,OAAQ,CACftI,GAAYgJ,EAAkBtV,GAC9B,IAAgBuV,EAAetlD,KAAKkhB,KAA5BozB,OAKJgR,IACAnV,GAAckV,EAAiBz5C,GAAI05C,EAAWrwC,OAAOrJ,GACrDukC,GAAckV,EAAiBx5C,GAAIy5C,EAAWrwC,OAAOpJ,GAE7D,CACAskC,GAAckV,EAAiBz5C,EAAG0oC,EAAOr/B,OAAOrJ,GAChDukC,GAAckV,EAAiBx5C,EAAGyoC,EAAOr/B,OAAOpJ,EACpD,CACJ,CACA,OAAOw5C,CACX,GAAC,CAAAhlD,IAAA,iBAAAC,MACD,SAAeyvC,GAA4B,IAAvBwV,EAAa/iD,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GACvBgjD,EnBtkBO,CACrB55C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImBwkB7B84C,GAAYmJ,EAAgBzV,GAC5B,IAAK,IAAIhtC,EAAI,EAAGA,EAAI/C,KAAK8hD,KAAK/gD,OAAQgC,IAAK,CACvC,IAAMka,EAAOjd,KAAK8hD,KAAK/+C,IAClBwiD,GACDtoC,EAAKpL,QAAQ6yC,cACbznC,EAAKq3B,QACLr3B,IAASA,EAAKiE,MACdyvB,GAAa6U,EAAgB,CACzB55C,GAAIqR,EAAKq3B,OAAOr/B,OAAOrJ,EACvBC,GAAIoR,EAAKq3B,OAAOr/B,OAAOpJ,IAG1BqG,GAAa+K,EAAKrL,eAEvB++B,GAAa6U,EAAgBvoC,EAAKrL,aACtC,CAIA,OAHIM,GAAalS,KAAK4R,eAClB++B,GAAa6U,EAAgBxlD,KAAK4R,cAE/B4zC,CACX,GAAC,CAAAnlD,IAAA,kBAAAC,MACD,SAAgByvC,GACZ,IAAM0V,EnB7lBO,CACrB75C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImB+lB7B84C,GAAYoJ,EAAqB1V,GACjC,IAAK,IAAIhtC,EAAI,EAAGA,EAAI/C,KAAK8hD,KAAK/gD,OAAQgC,IAAK,CACvC,IAAMka,EAAOjd,KAAK8hD,KAAK/+C,GACvB,GAAKka,EAAKlT,UAELmI,GAAa+K,EAAKrL,cAAvB,CAEA29B,GAAStyB,EAAKrL,eAAiBqL,EAAKymC,iBACpC,IAAM9G,EnBtmBG,CACrBhxC,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImBymBzB84C,GAAYO,EADI3/B,EAAKs3B,kBAErBoI,GAAoB8I,EAAqBxoC,EAAKrL,aAAcqL,EAAK2gC,SAAW3gC,EAAK2gC,SAAStL,eAAY7vC,EAAWm6C,EALrG,CAMhB,CAIA,OAHI1qC,GAAalS,KAAK4R,eAClB+qC,GAAoB8I,EAAqBzlD,KAAK4R,cAE3C6zC,CACX,GAAC,CAAAplD,IAAA,iBAAAC,MACD,SAAekB,GACXxB,KAAK0lD,YAAclkD,EACnBxB,KAAKkhB,KAAKykC,2BACV3lD,KAAKsgD,mBAAoB,CAC7B,GAAC,CAAAjgD,IAAA,aAAAC,MACD,SAAWuR,GACP7R,KAAK6R,SAAOlK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL3H,KAAK6R,SACLA,GAAO,IACVmsC,eAAiCv7C,IAAtBoP,EAAQmsC,WAA0BnsC,EAAQmsC,WAE7D,GAAC,CAAA39C,IAAA,oBAAAC,MACD,WACIN,KAAKs0C,YAAS7xC,EACdzC,KAAK2G,YAASlE,EACdzC,KAAK49C,cAAWn7C,EAChBzC,KAAKyjD,gCAA6BhhD,EAClCzC,KAAK0lD,iBAAcjjD,EACnBzC,KAAKmT,YAAS1Q,EACdzC,KAAK+9C,eAAgB,CACzB,GAAC,CAAA19C,IAAA,qCAAAC,MACD,WACSN,KAAK4lD,gBAQN5lD,KAAK4lD,eAAeC,2BACpBhjD,GAAUpB,WACVzB,KAAK4lD,eAAerE,oBAAmB,EAE/C,GAAC,CAAAlhD,IAAA,qBAAAC,MACD,WAA+C,IACvCmU,EADWqxC,EAAkBtjD,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GAO3B+4C,EAAOv7C,KAAK+lD,UAClB/lD,KAAKsgD,oBAAsBtgD,KAAKsgD,kBAAoB/E,EAAK+E,mBACzDtgD,KAAKwgD,mBAAqBxgD,KAAKwgD,iBAAmBjF,EAAKiF,kBACvDxgD,KAAKugD,0BAA4BvgD,KAAKugD,wBAA0BhF,EAAKgF,yBACrE,IAAMyF,EAAW3gD,QAAQrF,KAAKk+C,eAAiBl+C,OAASu7C,EAKlD0K,IAAYH,GACbE,GAAYhmD,KAAKugD,yBAClBvgD,KAAKsgD,oBACmB,QAAtB7rC,EAAKzU,KAAKsI,cAA2B,IAAPmM,OAAgB,EAASA,EAAG6rC,oBAC5DtgD,KAAKkmD,gCACT,IAAID,EAAJ,CAEA,IAAAnmB,EAA6B9/B,KAAK6R,QAA1BlL,EAAMm5B,EAANn5B,OAAQuB,EAAQ43B,EAAR53B,SAIhB,GAAKlI,KAAK2G,SAAYA,GAAUuB,GAAhC,CAQA,GANAlI,KAAK6lD,yBAA2BhjD,GAAUpB,WAMrCzB,KAAK0lD,cAAgB1lD,KAAKwiD,eAAgB,CAC3C,IAAMoD,EAAiB5lD,KAAKmmD,6BACxBP,GACAA,EAAej/C,QACY,IAA3B3G,KAAK4hD,mBACL5hD,KAAK4lD,eAAiBA,EACtB5lD,KAAKomD,qCACLpmD,KAAKwiD,enB7rBA,CACrB52C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImB+rBrBvD,KAAKqmD,qBnB9rBA,CACrBz6C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImBgsBrBirC,GAAqBxuC,KAAKqmD,qBAAsBrmD,KAAK2G,OAAO2rC,UAAWsT,EAAej/C,OAAO2rC,WAC7F+J,GAAYr8C,KAAKwiD,eAAgBxiD,KAAKqmD,uBAGtCrmD,KAAK4lD,eAAiB5lD,KAAKwiD,oBAAiB//C,CAEpD,CAKA,GAAKzC,KAAKwiD,gBAAmBxiD,KAAK0lD,YAAlC,CAyCA,GApCK1lD,KAAKmT,SACNnT,KAAKmT,OnBhtBI,CACrBvH,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImBktBzBvD,KAAKsmD,qBnBjtBI,CACrB16C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,KmButBzBvD,KAAKwiD,gBACLxiD,KAAKqmD,sBACLrmD,KAAK4lD,gBACL5lD,KAAK4lD,eAAezyC,QACpBnT,KAAKomD,qCACL9X,GAAgBtuC,KAAKmT,OAAQnT,KAAKwiD,eAAgBxiD,KAAK4lD,eAAezyC,SAKjEnT,KAAK0lD,aACNrgD,QAAQrF,KAAKk+C,cAEbl+C,KAAKmT,OAASnT,KAAKumD,eAAevmD,KAAK2G,OAAO2rC,WAG9C+J,GAAYr8C,KAAKmT,OAAQnT,KAAK2G,OAAO2rC,WAEzCxC,GAAc9vC,KAAKmT,OAAQnT,KAAK0lD,cAMhCrJ,GAAYr8C,KAAKmT,OAAQnT,KAAK2G,OAAO2rC,WAKrCtyC,KAAKkmD,+BAAgC,CACrClmD,KAAKkmD,gCAAiC,EACtC,IAAMN,EAAiB5lD,KAAKmmD,6BACxBP,GACAvgD,QAAQugD,EAAe1H,gBACnB74C,QAAQrF,KAAKk+C,gBAChB0H,EAAe/zC,QAAQ6yC,cACxBkB,EAAezyC,QACY,IAA3BnT,KAAK4hD,mBACL5hD,KAAK4lD,eAAiBA,EACtB5lD,KAAKomD,qCACLpmD,KAAKwiD,enB9vBA,CACrB52C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImBgwBrBvD,KAAKqmD,qBnB/vBA,CACrBz6C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImBiwBrBirC,GAAqBxuC,KAAKqmD,qBAAsBrmD,KAAKmT,OAAQyyC,EAAezyC,QAC5EkpC,GAAYr8C,KAAKwiD,eAAgBxiD,KAAKqmD,uBAGtCrmD,KAAK4lD,eAAiB5lD,KAAKwiD,oBAAiB//C,CAEpD,CAIA68C,GAAoBE,sBA/DV,CA5BA,CANA,CAkGd,GAAC,CAAAn/C,IAAA,6BAAAC,MACD,WACI,GAAKN,KAAKsI,SACNinC,GAASvvC,KAAKsI,OAAOsJ,gBACrB49B,GAAexvC,KAAKsI,OAAOsJ,cAG/B,OAAI5R,KAAKsI,OAAOk+C,eACLxmD,KAAKsI,OAGLtI,KAAKsI,OAAO69C,4BAE3B,GAAC,CAAA9lD,IAAA,eAAAC,MACD,WACI,OAAO+E,SAASrF,KAAKwiD,gBACjBxiD,KAAK0lD,aACL1lD,KAAK6R,QAAQoxC,aACbjjD,KAAK2G,OACb,GAAC,CAAAtG,IAAA,iBAAAC,MACD,WACI,IAAImU,EACE8mC,EAAOv7C,KAAK+lD,UACZC,EAAW3gD,QAAQrF,KAAKk+C,eAAiBl+C,OAASu7C,EACpD0K,GAAU,EAuBd,IAlBIjmD,KAAKsgD,oBAA6C,QAAtB7rC,EAAKzU,KAAKsI,cAA2B,IAAPmM,OAAgB,EAASA,EAAG6rC,sBACtF2F,GAAU,GAMVD,IACChmD,KAAKugD,yBAA2BvgD,KAAKwgD,oBACtCyF,GAAU,GAMVjmD,KAAK6lD,2BAA6BhjD,GAAUpB,YAC5CwkD,GAAU,IAEVA,EAAJ,CAEA,IAAAplB,EAA6B7gC,KAAK6R,QAA1BlL,EAAMk6B,EAANl6B,OAAQuB,EAAQ24B,EAAR34B,SAWhB,GANAlI,KAAKqgD,gBAAkBh7C,QAASrF,KAAKsI,QAAUtI,KAAKsI,OAAO+3C,iBACvDrgD,KAAKo6C,kBACLp6C,KAAKymD,kBACJzmD,KAAKqgD,kBACNrgD,KAAK0lD,YAAc1lD,KAAKwiD,oBAAiB//C,GAExCzC,KAAK2G,SAAYA,GAAUuB,GAAhC,CAMAm0C,GAAYr8C,KAAKwkD,gBAAiBxkD,KAAK2G,OAAO2rC,WAI9C,IAAMoU,EAAiB1mD,KAAK04C,UAAU9sC,EAChC+6C,EAAiB3mD,KAAK04C,UAAU7sC,GvBrzBlD,SAAyBkkC,EAAK2I,EAAWkO,GAAsC,IAA5BC,EAAkBrkD,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GAC3DskD,EAAaF,EAAS7lD,OAC5B,GAAK+lD,EAAL,CAIA,IAAI7pC,EACAzb,EAFJk3C,EAAU9sC,EAAI8sC,EAAU7sC,EAAI,EAG5B,IAAK,IAAI9I,EAAI,EAAGA,EAAI+jD,EAAY/jD,IAAK,CAEjCvB,GADAyb,EAAO2pC,EAAS7jD,IACH41C,gBAKb,IAAM5uC,EAAWkT,EAAKlT,SAClBA,GACAA,EAASgI,OACkB,aAA3BhI,EAASgI,MAAMg1C,UAGfF,GACA5pC,EAAKpL,QAAQ6yC,cACbznC,EAAKq3B,QACLr3B,IAASA,EAAKiE,MACdyvB,GAAaZ,EAAK,CACdnkC,GAAIqR,EAAKq3B,OAAOr/B,OAAOrJ,EACvBC,GAAIoR,EAAKq3B,OAAOr/B,OAAOpJ,IAG3BrK,IAEAk3C,EAAU9sC,GAAKpK,EAAMoK,EAAEqB,MACvByrC,EAAU7sC,GAAKrK,EAAMqK,EAAEoB,MAEvB6iC,GAAcC,EAAKvuC,IAEnBqlD,GAAsB30C,GAAa+K,EAAKrL,eACxC++B,GAAaZ,EAAK9yB,EAAKrL,cAE/B,CAKA8mC,EAAU9sC,EAAIokC,GAAc0I,EAAU9sC,GACtC8sC,EAAU7sC,EAAImkC,GAAc0I,EAAU7sC,EA3C5B,CA4Cd,CuB2wBYm7C,CAAgBhnD,KAAKwkD,gBAAiBxkD,KAAK04C,UAAW14C,KAAK8hD,KAAMkE,IAK7DzK,EAAK50C,QACJ40C,EAAKpoC,QACgB,IAArBnT,KAAK04C,UAAU9sC,GAAgC,IAArB5L,KAAK04C,UAAU7sC,IAC1C0vC,EAAKpoC,OAASooC,EAAK50C,OAAO2rC,UAC1BiJ,EAAK+K,qBnBh2BI,CACrB16C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,KmBm2B7B,IAAQ4P,EAAWooC,EAAXpoC,OACR,GAAKA,EAAL,CAaKnT,KAAK24C,kBACN34C,KAAK24C,gBnBt3BM,CACvB/sC,EAP2B,CAC3BsiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,GAIbpiC,EAR2B,CAC3BqiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,ImBy3BDjuC,KAAKinD,6BnBv3BM,CACvBr7C,EAP2B,CAC3BsiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,GAIbpiC,EAR2B,CAC3BqiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,KmB23BL,IAAMiZ,EAA0BlnD,KAAKmnD,oBAUrChZ,GAAanuC,KAAK24C,gBAAiB34C,KAAKwkD,gBAAiBrxC,EAAQnT,KAAK4R,cACtE5R,KAAKmnD,oBAAsBhJ,GAAyBn+C,KAAK24C,gBAAiB34C,KAAK04C,WAC3E14C,KAAKmnD,sBAAwBD,GAC7BlnD,KAAK04C,UAAU9sC,IAAM86C,GACrB1mD,KAAK04C,UAAU7sC,IAAM86C,IACrB3mD,KAAK0hD,cAAe,EACpB1hD,KAAKm9C,iBACLn9C,KAAK2jD,gBAAgB,mBAAoBxwC,IAK7CmsC,GAAoBG,wBA3BpB,MANQz/C,KAAKmnD,sBACLnnD,KAAK24C,gBnB/2BE,CACvB/sC,EAP2B,CAC3BsiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,GAIbpiC,EAR2B,CAC3BqiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,ImBk3BGjuC,KAAKmnD,oBAAsB,OAC3BnnD,KAAKm9C,iBApCH,CAbA,CAgFd,GAAC,CAAA98C,IAAA,OAAAC,MACD,WACIN,KAAK2hD,WAAY,CAErB,GAAC,CAAAthD,IAAA,OAAAC,MACD,WACIN,KAAK2hD,WAAY,CAErB,GAAC,CAAAthD,IAAA,iBAAAC,MACD,WAAiC,IAAlB8mD,IAAS5kD,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,KAAAA,UAAA,GAEpB,GADAxC,KAAK6R,QAAQsrC,gBAAkBn9C,KAAK6R,QAAQsrC,iBACxCiK,EAAW,CACX,IAAMnN,EAAQj6C,KAAKk6C,WACnBD,GAASA,EAAMkD,gBACnB,CACIn9C,KAAKk+C,eAAiBl+C,KAAKk+C,aAAan0C,WACxC/J,KAAKk+C,kBAAez7C,EAE5B,GAAC,CAAApC,IAAA,qBAAAC,MACD,SAAmBkB,GAA6C,IAAA2zC,EAAA,KAAtC6N,EAA4BxgD,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GAC5Co7C,EAAW59C,KAAK49C,SAChByJ,EAAuBzJ,EACvBA,EAAShsC,aACT,CAAC,EACD01C,GAAW3/C,EAAAA,EAAAA,GAAA,GAAQ3H,KAAK4R,cACxB8zC,EnBz6BS,CACvB95C,EAP2B,CAC3BsiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,GAIbpiC,EAR2B,CAC3BqiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,ImB46BAjuC,KAAK4lD,gBACL5lD,KAAK4lD,eAAe/zC,QAAQoxC,aAC7BjjD,KAAKwiD,eAAiBxiD,KAAKqmD,0BAAuB5jD,GAEtDzC,KAAKkmD,gCAAkClD,EACvC,IAWIuE,EAXEC,EnB16BO,CACrB57C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImB46BvBkkD,EAAiB7J,EAAWA,EAASxqC,YAAS3Q,EAC9CilD,EAAe1nD,KAAK2G,OAAS3G,KAAK2G,OAAOyM,YAAS3Q,EAClDklD,EAA0BF,IAAmBC,EAC7CzN,EAAQj6C,KAAKk6C,WACbuB,GAAgBxB,GAASA,EAAME,QAAQp5C,QAAU,EACjDy6C,EAAyBn2C,QAAQsiD,IAClClM,IAC0B,IAA3Bz7C,KAAK6R,QAAQmsC,YACZh+C,KAAK8hD,KAAK58C,KAAK0iD,KACpB5nD,KAAK4hD,kBAAoB,EAEzB5hD,KAAK6nD,eAAiB,SAACvwB,GACnB,IAAMoC,EAAWpC,EAAS,IAC1BwwB,GAAapC,EAAY95C,EAAGpK,EAAMoK,EAAG8tB,GACrCouB,GAAapC,EAAY75C,EAAGrK,EAAMqK,EAAG6tB,GACrCyb,EAAK4S,eAAerC,GAChBvQ,EAAKqN,gBACLrN,EAAKkR,sBACLlR,EAAKxuC,QACLwuC,EAAKyQ,gBACLzQ,EAAKyQ,eAAej/C,SACpB6nC,GAAqBgZ,EAAgBrS,EAAKxuC,OAAO2rC,UAAW6C,EAAKyQ,eAAej/C,OAAO2rC,WACvF0V,GAAO7S,EAAKqN,eAAgBrN,EAAKkR,qBAAsBmB,EAAgB9tB,GAKnE6tB,GACAxK,GAAU5H,EAAKqN,eAAgB+E,KAC/BpS,EAAKmL,mBAAoB,GAExBiH,IACDA,EnB38BC,CACrB37C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,KmB68BrB84C,GAAYkL,EAAoBpS,EAAKqN,iBAErCmF,IACAxS,EAAK0I,gBAAkByJ,EACvBjM,GAAUiM,EAAaD,EAAsBlS,EAAKvjC,aAAc8nB,EAAU8hB,EAAwBC,IAEtGtG,EAAKj0B,KAAKykC,2BACVxQ,EAAKgI,iBACLhI,EAAKyM,kBAAoBloB,CAC7B,EACA15B,KAAK6nD,eAAe7nD,KAAK6R,QAAQoxC,WAAa,IAAO,EACzD,GAAC,CAAA5iD,IAAA,iBAAAC,MACD,SAAeuR,GAAS,IAAAyjC,EAAA,KACpBt1C,KAAK2jD,gBAAgB,kBACrB3jD,KAAKo6C,kBAAoBp6C,KAAKo6C,iBAAiB1c,OAC3C19B,KAAKk+C,cAAgBl+C,KAAKk+C,aAAa9D,kBACvCp6C,KAAKk+C,aAAa9D,iBAAiB1c,OAEnC19B,KAAKymD,mBACLhsC,GAAYza,KAAKymD,kBACjBzmD,KAAKymD,sBAAmBhkD,GAO5BzC,KAAKymD,iBAAmBjsC,GAAAA,QAAa,WACjC09B,GAAsBC,wBAAyB,EAC/C7C,EAAK8E,iBCh/BrB,SAA4B95C,EAAOikB,EAAW1S,GAC1C,IAAMo2C,EAAgBx8C,EAAcnL,GAASA,EAAQkqB,GAAYlqB,GAEjE,OADA2nD,EAActjD,MAAMw+B,GAAmB,GAAI8kB,EAAe1jC,EAAW1S,IAC9Do2C,EAAc9hD,SACzB,CD4+BwC+hD,CAAmB,EAl9BnC,KAk9BqDvgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtDkK,GAAO,IACVkgB,SAAU,SAACuF,GACPge,EAAKuS,eAAevwB,GACpBzlB,EAAQkgB,UAAYlgB,EAAQkgB,SAASuF,EACzC,EACA/M,WAAY,WACR1Y,EAAQ0Y,YAAc1Y,EAAQ0Y,aAC9B+qB,EAAK6S,mBACT,KAEA7S,EAAK4I,eACL5I,EAAK4I,aAAa9D,iBAAmB9E,EAAK8E,kBAE9C9E,EAAKmR,sBAAmBhkD,CAC5B,GACJ,GAAC,CAAApC,IAAA,oBAAAC,MACD,WACQN,KAAKk+C,eACLl+C,KAAKk+C,aAAa9D,sBAAmB33C,EACrCzC,KAAKk+C,aAAaP,qBAAkBl7C,GAExC,IAAMw3C,EAAQj6C,KAAKk6C,WACnBD,GAASA,EAAMmO,wBACfpoD,KAAKk+C,aACDl+C,KAAKo6C,iBACDp6C,KAAK69C,qBACDp7C,EACZzC,KAAK2jD,gBAAgB,oBACzB,GAAC,CAAAtjD,IAAA,kBAAAC,MACD,WACQN,KAAKo6C,mBACLp6C,KAAK6nD,gBAAkB7nD,KAAK6nD,eAl/BpB,KAm/BR7nD,KAAKo6C,iBAAiB1c,QAE1B19B,KAAKmoD,mBACT,GAAC,CAAA9nD,IAAA,0BAAAC,MACD,WACI,IAAMi7C,EAAOv7C,KAAK+lD,UACZO,EAAuD/K,EAAvD+K,qBAAsBnzC,EAAiCooC,EAAjCpoC,OAAQxM,EAAyB40C,EAAzB50C,OAAQiL,EAAiB2pC,EAAjB3pC,aAC5C,GAAK00C,GAAyBnzC,GAAWxM,EAAzC,CAOA,GAAI3G,OAASu7C,GACTv7C,KAAK2G,QACLA,GACA0hD,GAA0BroD,KAAK6R,QAAQy2C,cAAetoD,KAAK2G,OAAO2rC,UAAW3rC,EAAO2rC,WAAY,CAChGn/B,EAASnT,KAAKmT,QnB5hCL,CACrBvH,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImB8hCzB,IAAMglD,EAAU3a,GAAW5tC,KAAK2G,OAAO2rC,UAAU1mC,GACjDuH,EAAOvH,EAAEpI,IAAM+3C,EAAKpoC,OAAOvH,EAAEpI,IAC7B2P,EAAOvH,EAAErI,IAAM4P,EAAOvH,EAAEpI,IAAM+kD,EAC9B,IAAMC,EAAU5a,GAAW5tC,KAAK2G,OAAO2rC,UAAUzmC,GACjDsH,EAAOtH,EAAErI,IAAM+3C,EAAKpoC,OAAOtH,EAAErI,IAC7B2P,EAAOtH,EAAEtI,IAAM4P,EAAOtH,EAAErI,IAAMglD,CAClC,CACAnM,GAAYiK,EAAsBnzC,GAMlCw9B,GAAa2V,EAAsB10C,GAOnCu8B,GAAanuC,KAAKinD,6BAA8BjnD,KAAKwkD,gBAAiB8B,EAAsB10C,EA/BlF,CAgCd,GAAC,CAAAvR,IAAA,qBAAAC,MACD,SAAmB4H,EAAU+U,GACpBjd,KAAK6hD,YAAYrhD,IAAI0H,IACtBlI,KAAK6hD,YAAY92C,IAAI7C,EAAU,IAAIg1C,IAEzBl9C,KAAK6hD,YAAYh3C,IAAI3C,GAC7BzH,IAAIwc,GACV,IAAM9D,EAAS8D,EAAKpL,QAAQ42C,uBAC5BxrC,EAAK88B,QAAQ,CACT5/B,WAAYhB,EAASA,EAAOgB,gBAAa1X,EACzC+6C,sBAAuBrkC,GAAUA,EAAOuvC,4BAClCvvC,EAAOuvC,4BAA4BzrC,QACnCxa,GAEd,GAAC,CAAApC,IAAA,SAAAC,MACD,WACI,IAAM25C,EAAQj6C,KAAKk6C,WACnB,OAAOD,GAAQA,EAAMsB,OAASv7C,IAClC,GAAC,CAAAK,IAAA,UAAAC,MACD,WACI,IAAImU,EAEJ,OADqBzU,KAAK6R,QAAlB3J,WACsC,QAA1BuM,EAAKzU,KAAKk6C,kBAA+B,IAAPzlC,OAAgB,EAASA,EAAG8mC,OAAgBv7C,IACtG,GAAC,CAAAK,IAAA,cAAAC,MACD,WACI,IAAImU,EAEJ,OADqBzU,KAAK6R,QAAlB3J,SACqC,QAA1BuM,EAAKzU,KAAKk6C,kBAA+B,IAAPzlC,OAAgB,EAASA,EAAG2oC,cAAW36C,CAChG,GAAC,CAAApC,IAAA,WAAAC,MACD,WACI,IAAQ4H,EAAalI,KAAK6R,QAAlB3J,SACR,GAAIA,EACA,OAAOlI,KAAKkhB,KAAK2gC,YAAYh3C,IAAI3C,EACzC,GAAC,CAAA7H,IAAA,UAAAC,MACD,WAAiE,IAAA6nB,EAAA3lB,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAApDo+C,EAAUz4B,EAAVy4B,WAAYzmC,EAAUgO,EAAVhO,WAAYqjC,EAAqBr1B,EAArBq1B,sBACxBvD,EAAQj6C,KAAKk6C,WACfD,GACAA,EAAMF,QAAQ/5C,KAAMw9C,GACpBoD,IACA5gD,KAAK24C,qBAAkBl2C,EACvBzC,KAAK4gD,YAAa,GAElBzmC,GACAna,KAAK25C,WAAW,CAAEx/B,WAAAA,GAC1B,GAAC,CAAA9Z,IAAA,WAAAC,MACD,WACI,IAAM25C,EAAQj6C,KAAKk6C,WACnB,QAAID,GACOA,EAAMD,SAASh6C,KAK9B,GAAC,CAAAK,IAAA,uBAAAC,MACD,WACI,IAAQ+H,EAAkBrI,KAAK6R,QAAvBxJ,cACR,GAAKA,EAAL,CAGA,IAAIsgD,GAAyB,EAKrB/2C,EAAiBvJ,EAAjBuJ,aAUR,IATIA,EAAa1B,QACb0B,EAAazB,SACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAalB,OACbkB,EAAajB,SACbg4C,GAAyB,GAGxBA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZ7lD,EAAI,EAAGA,EAAIo8C,GAAcp+C,OAAQgC,IACtC28C,GAAyB,SAAD56C,OAAUq6C,GAAcp8C,IAAMsF,EAAeugD,EAAa5oD,KAAK69C,iBACvF6B,GAAyB,OAAD56C,OAAQq6C,GAAcp8C,IAAMsF,EAAeugD,EAAa5oD,KAAK69C,iBAMzF,IAAK,IAAMx9C,KAFXgI,EAAcgB,SAEIu/C,EACdvgD,EAAcu3C,eAAev/C,EAAKuoD,EAAYvoD,IAC1CL,KAAK69C,kBACL79C,KAAK69C,gBAAgBx9C,GAAOuoD,EAAYvoD,IAKhDgI,EAAc80C,gBAnBJ,CAlBA,CAsCd,GAAC,CAAA98C,IAAA,sBAAAC,MACD,SAAoBmX,GAChB,IAAIhD,EAAImZ,EACR,GAAK5tB,KAAK+J,WAAY/J,KAAK2gD,MAA3B,CAEA,IAAK3gD,KAAK2hD,UACN,OAAOvC,GAEX,IAAMyJ,EAAS,CACXxJ,WAAY,IAEVvtC,EAAoB9R,KAAKwjD,uBAC/B,GAAIxjD,KAAK4gD,WAQL,OAPA5gD,KAAK4gD,YAAa,EAClBiI,EAAO53C,QAAU,GACjB43C,EAAOC,cACHhwC,GAAiC,OAAdrB,QAAoC,IAAdA,OAAuB,EAASA,EAAUqxC,gBAAkB,GACzGD,EAAOl8C,UAAYmF,EACbA,EAAkB9R,KAAK4R,aAAc,IACrC,OACCi3C,EAEX,IAAMtN,EAAOv7C,KAAK+lD,UAClB,IAAK/lD,KAAK24C,kBAAoB34C,KAAK2G,SAAW40C,EAAKpoC,OAAQ,CACvD,IAAM41C,EAAc,CAAC,EAerB,OAdI/oD,KAAK6R,QAAQ3J,WACb6gD,EAAY93C,aACsBxO,IAA9BzC,KAAK4R,aAAaX,QACZjR,KAAK4R,aAAaX,QAClB,EACV83C,EAAYD,cACRhwC,GAAiC,OAAdrB,QAAoC,IAAdA,OAAuB,EAASA,EAAUqxC,gBAAkB,IAEzG9oD,KAAK0hD,eAAiBxvC,GAAalS,KAAK4R,gBACxCm3C,EAAYp8C,UAAYmF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN9R,KAAK0hD,cAAe,GAEjBqH,CACX,CACA,IAAMC,EAAiBzN,EAAKsC,iBAAmBtC,EAAK3pC,aACpD5R,KAAKipD,0BACLJ,EAAOl8C,UAAYwxC,GAAyBn+C,KAAKinD,6BAA8BjnD,KAAK04C,UAAWsQ,GAC3Fl3C,IACA+2C,EAAOl8C,UAAYmF,EAAkBk3C,EAAgBH,EAAOl8C,YAEhE,IAAAu8C,EAAiBlpD,KAAK24C,gBAAd/sC,EAACs9C,EAADt9C,EAAGC,EAACq9C,EAADr9C,EA+BX,IAAK,IAAMxL,KA9BXwoD,EAAO52C,gBAAkB,GAAHnN,OAAiB,IAAX8G,EAAEoJ,OAAY,MAAAlQ,OAAgB,IAAX+G,EAAEmJ,OAAY,OACzDumC,EAAKsC,gBAKLgL,EAAO53C,QACHsqC,IAASv7C,KACiG,QAAnG4tB,EAAuC,QAAjCnZ,EAAKu0C,EAAe/3C,eAA4B,IAAPwD,EAAgBA,EAAKzU,KAAK4R,aAAaX,eAA4B,IAAP2c,EAAgBA,EAAK,EACjI5tB,KAAK29C,gBACD39C,KAAK4R,aAAaX,QAClB+3C,EAAerN,YAO7BkN,EAAO53C,QACHsqC,IAASv7C,UACwByC,IAA3BumD,EAAe/3C,QACX+3C,EAAe/3C,QACf,QAC2BxO,IAA/BumD,EAAerN,YACXqN,EAAerN,YACf,EAKAvwC,EACd,QAA4B3I,IAAxBumD,EAAe3oD,GAAnB,CAEA,IAAA8oD,EAA6B/9C,EAAgB/K,GAArCm4C,EAAO2Q,EAAP3Q,QAASuC,EAAOoO,EAAPpO,QAOXqO,EAAiC,SAArBP,EAAOl8C,UACnBq8C,EAAe3oD,GACfm4C,EAAQwQ,EAAe3oD,GAAMk7C,GACnC,GAAIR,EAEA,IADA,IAAMsO,EAAMtO,EAAQh6C,OACXgC,EAAI,EAAGA,EAAIsmD,EAAKtmD,IACrB8lD,EAAO9N,EAAQh4C,IAAMqmD,OAIzBP,EAAOxoD,GAAO+oD,CAlBN,CAgChB,OANIppD,KAAK6R,QAAQ3J,WACb2gD,EAAOC,cACHvN,IAASv7C,KACH8Y,GAAiC,OAAdrB,QAAoC,IAAdA,OAAuB,EAASA,EAAUqxC,gBAAkB,GACrG,QAEPD,CA5Ga,CA6GxB,GAAC,CAAAxoD,IAAA,gBAAAC,MACD,WACIN,KAAK09C,WAAa19C,KAAK49C,cAAWn7C,CACtC,GACA,CAAApC,IAAA,YAAAC,MACA,WACIN,KAAKkhB,KAAKmgC,MAAM59C,SAAQ,SAACwZ,GAAW,IAAIxI,EAAI,OAAwC,QAAhCA,EAAKwI,EAAKm9B,wBAAqC,IAAP3lC,OAAgB,EAASA,EAAGipB,MAAQ,IAChI19B,KAAKkhB,KAAKmgC,MAAM59C,QAAQogD,IACxB7jD,KAAKkhB,KAAK2gC,YAAY7gD,OAC1B,KAACm/C,CAAA,CA5tCL,EA8tCJ,CACA,SAASrK,GAAa74B,GAClBA,EAAK64B,cACT,CACA,SAASmO,GAAmBhnC,GACxB,IAAIxI,EACEmpC,GAAuC,QAA1BnpC,EAAKwI,EAAKygC,kBAA+B,IAAPjpC,OAAgB,EAASA,EAAGmpC,WAAa3gC,EAAK2gC,SACnG,GAAI3gC,EAAKo9B,UACLp9B,EAAKtW,QACLi3C,GACA3gC,EAAKqsC,aAAa,aAAc,CAChC,IAAAC,EAA2DtsC,EAAKtW,OAA7CA,EAAM4iD,EAAjBjX,UAAgCkX,EAAcD,EAA3BnE,YACnBkD,EAAkBrrC,EAAKpL,QAAvBy2C,cACFtC,EAAWpI,EAASxqC,SAAW6J,EAAKtW,OAAOyM,OAG3B,SAAlBk1C,EACAlZ,IAAS,SAACvB,GACN,IAAM4b,EAAezD,EACfpI,EAASwH,YAAYvX,GACrB+P,EAAStL,UAAUzE,GACnB9sC,EAAS6sC,GAAW6b,GAC1BA,EAAajmD,IAAMmD,EAAOknC,GAAMrqC,IAChCimD,EAAalmD,IAAMkmD,EAAajmD,IAAMzC,CAC1C,IAEKsnD,GAA0BC,EAAe1K,EAAStL,UAAW3rC,IAClEyoC,IAAS,SAACvB,GACN,IAAM4b,EAAezD,EACfpI,EAASwH,YAAYvX,GACrB+P,EAAStL,UAAUzE,GACnB9sC,EAAS6sC,GAAWjnC,EAAOknC,IACjC4b,EAAalmD,IAAMkmD,EAAajmD,IAAMzC,EAIlCkc,EAAKulC,iBAAmBvlC,EAAKm9B,mBAC7Bn9B,EAAKqjC,mBAAoB,EACzBrjC,EAAKulC,eAAe3U,GAAMtqC,IACtB0Z,EAAKulC,eAAe3U,GAAMrqC,IAAMzC,EAE5C,IAEJ,IAAM2oD,EnB7zCa,CACvB99C,EAP2B,CAC3BsiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,GAIbpiC,EAR2B,CAC3BqiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,ImBg0CTE,GAAaub,EAAa/iD,EAAQi3C,EAAStL,WAC3C,IAAMqX,EnB/zCa,CACvB/9C,EAP2B,CAC3BsiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,GAIbpiC,EAR2B,CAC3BqiC,UAAW,EACXjhC,MAAO,EACP+H,OAAQ,EACRi5B,YAAa,ImBk0CL+X,EACA7X,GAAawb,EAAa1sC,EAAKspC,eAAeiD,GAAgB,GAAO5L,EAASwH,aAG9EjX,GAAawb,EAAahjD,EAAQi3C,EAAStL,WAE/C,IAAMmE,GAAoBqG,GAAY4M,GAClCrH,GAA2B,EAC/B,IAAKplC,EAAKygC,WAAY,CAClB,IAAMkI,EAAiB3oC,EAAKkpC,6BAK5B,GAAIP,IAAmBA,EAAelI,WAAY,CAC9C,IAAkBkM,EAAyChE,EAAnDhI,SAAkCiM,EAAiBjE,EAAzBj/C,OAClC,GAAIijD,GAAkBC,EAAc,CAChC,IAAMC,EnB50CD,CACrBl+C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImB80CrBirC,GAAqBsb,EAAkBlM,EAAStL,UAAWsX,EAAetX,WAC1E,IAAMkV,EnB90CD,CACrB57C,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,ImBg1CrBirC,GAAqBgZ,EAAgB7gD,EAAQkjD,EAAavX,WACrD0K,GAAiB8M,EAAkBtC,KACpCnF,GAA2B,GAE3BuD,EAAe/zC,QAAQoxC,aACvBhmC,EAAKulC,eAAiBgF,EACtBvqC,EAAKopC,qBAAuByD,EAC5B7sC,EAAK2oC,eAAiBA,EAE9B,CACJ,CACJ,CACA3oC,EAAK0mC,gBAAgB,YAAa,CAC9Bh9C,OAAAA,EACAi3C,SAAAA,EACAp8C,MAAOmoD,EACPD,YAAAA,EACAjT,iBAAAA,EACA4L,yBAAAA,GAER,MACK,GAAIplC,EAAKo9B,SAAU,CACpB,IAAQlP,EAAmBluB,EAAKpL,QAAxBs5B,eACRA,GAAkBA,GACtB,CAMAluB,EAAKpL,QAAQsI,gBAAa1X,CAC9B,CACA,SAAS6+C,GAAoBrkC,GAIzBqiC,GAAoBC,aACftiC,EAAK3U,SAQL2U,EAAKupC,iBACNvpC,EAAKqjC,kBAAoBrjC,EAAK3U,OAAOg4C,mBAOzCrjC,EAAKsjC,0BAA4BtjC,EAAKsjC,wBAA0Bl7C,QAAQ4X,EAAKqjC,mBACzErjC,EAAK3U,OAAOg4C,mBACZrjC,EAAK3U,OAAOi4C,0BAChBtjC,EAAKujC,mBAAqBvjC,EAAKujC,iBAAmBvjC,EAAK3U,OAAOk4C,kBAClE,CACA,SAASiB,GAAgBxkC,GACrBA,EAAKqjC,kBACDrjC,EAAKsjC,wBACDtjC,EAAKujC,kBACD,CAChB,CACA,SAAS4D,GAAcnnC,GACnBA,EAAKmnC,eACT,CACA,SAASP,GAAkB5mC,GACvBA,EAAK4mC,mBACT,CACA,SAASC,GAAmB7mC,GACxBA,EAAK8gC,eAAgB,CACzB,CACA,SAASiG,GAAoB/mC,GACzB,IAAQ5U,EAAkB4U,EAAKpL,QAAvBxJ,cACJA,GAAiBA,EAAckV,WAAWwsC,uBAC1C1hD,EAAcs8B,OAAO,uBAEzB1nB,EAAKijC,gBACT,CACA,SAASiC,GAAgBllC,GACrBA,EAAKklC,kBACLllC,EAAKyoC,YAAczoC,EAAKulC,eAAiBvlC,EAAK9J,YAAS1Q,EACvDwa,EAAKqjC,mBAAoB,CAC7B,CACA,SAASiB,GAAmBtkC,GACxBA,EAAKskC,oBACT,CACA,SAASC,GAAevkC,GACpBA,EAAKukC,gBACT,CACA,SAAS6B,GAAqBpmC,GAC1BA,EAAKomC,sBACT,CACA,SAASgB,GAAoBpK,GACzBA,EAAM+P,oBACV,CACA,SAASlC,GAAar6B,EAAQjsB,EAAO5C,GACjC6uB,EAAOygB,UAAYrU,GAAUr4B,EAAM0sC,UAAW,EAAGtvC,GACjD6uB,EAAOxgB,MAAQ4sB,GAAUr4B,EAAMyL,MAAO,EAAGrO,GACzC6uB,EAAOzY,OAASxT,EAAMwT,OACtByY,EAAOwgB,YAAczsC,EAAMysC,WAC/B,CACA,SAASgc,GAAQx8B,EAAQvI,EAAMyU,EAAI/6B,GAC/B6uB,EAAOjqB,IAAMq2B,GAAU3U,EAAK1hB,IAAKm2B,EAAGn2B,IAAK5E,GACzC6uB,EAAOlqB,IAAMs2B,GAAU3U,EAAK3hB,IAAKo2B,EAAGp2B,IAAK3E,EAC7C,CACA,SAASopD,GAAOv6B,EAAQvI,EAAMyU,EAAI/6B,GAC9BqrD,GAAQx8B,EAAO7hB,EAAGsZ,EAAKtZ,EAAG+tB,EAAG/tB,EAAGhN,GAChCqrD,GAAQx8B,EAAO5hB,EAAGqZ,EAAKrZ,EAAG8tB,EAAG9tB,EAAGjN,EACpC,CACA,SAASgpD,GAAoB3qC,GACzB,OAAQA,EAAK4gC,sBAAwDp7C,IAArCwa,EAAK4gC,gBAAgBlC,WACzD,CACA,IAAM+G,GAA0B,CAC5Bv+B,SAAU,IACVC,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB8lC,GAAoB,SAACC,GAAM,MAA0B,qBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAU1qD,cAAcuL,SAASi/C,EAAO,EAMhDG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrE5mD,KAAK8J,MACLiN,GACN,SAASkwC,GAAU1c,GAEfA,EAAKrqC,IAAM8mD,GAAWzc,EAAKrqC,KAC3BqqC,EAAKtqC,IAAM+mD,GAAWzc,EAAKtqC,IAC/B,CACA,SAAS4hD,GAASpV,GACdwa,GAAUxa,EAAInkC,GACd2+C,GAAUxa,EAAIlkC,EAClB,CACA,SAASw8C,GAA0BC,EAAe1K,EAAUj3C,GACxD,MAA0B,aAAlB2hD,GACe,oBAAlBA,IACIxa,GAAOmP,GAAYW,GAAWX,GAAYt2C,GAAS,GAChE,CEr+CA,IAAM6jD,GAAyB3K,GAAqB,CAChDC,qBAAsB,SAAC77C,EAAK0gC,GAAM,OAAK3pB,GAAY/W,EAAK,SAAU0gC,EAAO,EACzEqb,cAAe,iBAAO,CAClBp0C,EAAG1M,SAASurD,gBAAgBC,YAAcxrD,SAASyrD,KAAKD,WACxD7+C,EAAG3M,SAASurD,gBAAgBG,WAAa1rD,SAASyrD,KAAKC,UAC1D,EACD3K,kBAAmB,kBAAM,CAAI,ICN3B7L,GAAqB,CACvBvrC,aAASpG,GAEPooD,GAAqBhL,GAAqB,CAC5CG,cAAe,SAACj2C,GAAQ,MAAM,CAC1B6B,EAAG7B,EAAS2gD,WACZ7+C,EAAG9B,EAAS6gD,UACf,EACD7K,cAAe,WACX,IAAK3L,GAAmBvrC,QAAS,CAC7B,IAAMiiD,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAa9gD,MAAMd,QACnB4hD,EAAanR,WAAW,CAAE+K,cAAc,IACxCtQ,GAAmBvrC,QAAUiiD,CACjC,CACA,OAAO1W,GAAmBvrC,OAC9B,EACAq3C,eAAgB,SAACn2C,EAAUzJ,GACvByJ,EAASgI,MAAMpF,eAAsBlK,IAAVnC,EAAsBA,EAAQ,MAC7D,EACA2/C,kBAAmB,SAACl2C,GAAQ,OAAK1E,QAAuD,UAA/C6D,OAAO8d,iBAAiBjd,GAAUghD,SAAqB,IClB9F1kD,GAAO,CACTI,IAAK,CACDuW,QAASu6B,IAEblxC,KAAM,CACF2W,QAASi6B,GACTkJ,eAAgB0K,GAChB7iD,cAAAA,KCXFgjD,GAAuB,CAAEniD,QAAS,MAClCoiD,GAA2B,CAAEpiD,SAAS,GCF5C,IAAMqiD,GAAqB,IAAIxqC,QCQzByqC,GAAa,GAAHrmD,QAAA6lB,EAAAA,GAAAA,GAAO1B,IAAmB,CAAEyD,GAAOiB,K,kCCkB7Cy9B,GAAelnD,OAAOuS,KAAK7P,GAC3BykD,GAAcD,GAAarqD,OAC3BuqD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB1mD,EAAa9D,OAK/ByqD,GAAa,WACf,SAAAA,EAAA1oD,GAAwH,IAAAmb,EAAA,KAA1G3V,EAAMxF,EAANwF,OAAQtD,EAAKlC,EAALkC,MAAOwD,EAAe1F,EAAf0F,gBAAiBC,EAAmB3F,EAAnB2F,oBAAqBK,EAAqBhG,EAArBgG,sBAAuBV,EAAWtF,EAAXsF,YAAgByJ,EAAOrP,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACzC,EAAAA,EAAAA,GAAA,KAAAyrD,GAClHxrD,KAAK2+B,iBAAmB,SAACpa,EAIzBgG,EAAYplB,EAAM7E,GACd,OAAO,IAAI2d,EAAKoM,iBAAiB9F,EAAWgG,EAAYplB,EAAM7E,EAAO2d,EACzE,EAKAje,KAAK6I,QAAU,KAIf7I,KAAKoX,SAAW,IAAIjX,IAIpBH,KAAKoF,eAAgB,EACrBpF,KAAK+E,uBAAwB,EAQ7B/E,KAAKmnC,mBAAqB,KAM1BnnC,KAAK8U,OAAS,IAAIlK,IAClB5K,KAAKqqB,iBAAmBA,GAIxBrqB,KAAK0H,SAAW,CAAC,EAKjB1H,KAAKyrD,mBAAqB,IAAI7gD,IAM9B5K,KAAK0rD,iBAAmB,CAAC,EAIzB1rD,KAAKqkC,OAAS,CAAC,EAMfrkC,KAAK2rD,uBAAyB,CAAC,EAC/B3rD,KAAK4rD,aAAe,kBAAM3tC,EAAK0mB,OAAO,SAAU1mB,EAAKrM,aAAa,EAClE5R,KAAKqJ,OAAS,WACL4U,EAAKpV,UAEVoV,EAAK4tC,eACL5tC,EAAK6tC,eAAe7tC,EAAKpV,QAASoV,EAAKlG,YAAakG,EAAKjZ,MAAM+M,MAAOkM,EAAKvG,YAC/E,EACA1X,KAAKm9C,eAAiB,kBAAM3iC,GAAAA,OAAayD,EAAK5U,QAAQ,GAAO,EAAK,EAClE,IAAQuI,EAA8BxJ,EAA9BwJ,aAAcmG,EAAgB3P,EAAhB2P,YACtB/X,KAAK4R,aAAeA,EACpB5R,KAAK+rD,YAAUpkD,EAAAA,EAAAA,GAAA,GAAQiK,GACvB5R,KAAKgsD,cAAgBhnD,EAAMU,SAAOiC,EAAAA,EAAAA,GAAA,GAAQiK,GAAiB,CAAC,EAC5D5R,KAAK+X,YAAcA,EACnB/X,KAAKsI,OAASA,EACdtI,KAAKgF,MAAQA,EACbhF,KAAKwI,gBAAkBA,EACvBxI,KAAK6mB,MAAQve,EAASA,EAAOue,MAAQ,EAAI,EACzC7mB,KAAKyI,oBAAsBA,EAC3BzI,KAAK6R,QAAUA,EACf7R,KAAK8I,sBAAwBzD,QAAQyD,GACrC9I,KAAK+E,sBAAwBA,EAAsBC,GACnDhF,KAAKoF,cAAgBA,EAAcJ,GAC/BhF,KAAKoF,gBACLpF,KAAKynC,gBAAkB,IAAItnC,KAE/BH,KAAK0pC,uBAAyBrkC,QAAQiD,GAAUA,EAAOO,SAWvD,IAAAojD,EAA+CjsD,KAAKkY,4BAA4BlT,EAAO,CAAC,GAAhF6hC,EAAUolB,EAAVplB,WAAeqlB,GAAmBn2C,EAAAA,GAAAA,GAAAk2C,EAAAj2C,IAC1C,IAAK,IAAM3V,KAAO6rD,EAAqB,CACnC,IAAM5rD,EAAQ4rD,EAAoB7rD,QACRoC,IAAtBmP,EAAavR,IAAsBoL,EAAcnL,KACjDA,EAAMyK,IAAI6G,EAAavR,IAAM,GACzBojC,GAAwBoD,IACxBA,EAAWpmC,IAAIJ,GAG3B,CACJ,CAoXC,OAnXDD,EAAAA,EAAAA,GAAAorD,EAAA,EAAAnrD,IAAA,8BAAAC,MAOA,SAA4B6rD,EAAQC,GAChC,MAAO,CAAC,CACZ,GAAC,CAAA/rD,IAAA,QAAAC,MACD,SAAMyJ,GAAU,IAAAqU,EAAA,KACZpe,KAAK6I,QAAUkB,EACfmhD,GAAmBngD,IAAIhB,EAAU/J,MAC7BA,KAAK0X,aAAe1X,KAAK0X,WAAW3N,UACpC/J,KAAK0X,WAAW1N,MAAMD,GAEtB/J,KAAKsI,QAAUtI,KAAKoF,gBAAkBpF,KAAK+E,wBAC3C/E,KAAKqsD,sBAAwBrsD,KAAKsI,OAAOgkD,gBAAgBtsD,OAE7DA,KAAK8U,OAAOrR,SAAQ,SAACnD,EAAOD,GAAG,OAAK+d,EAAKmuC,kBAAkBlsD,EAAKC,EAAM,IACjE2qD,GAAyBpiD,SCzKtC,WAEI,GADAoiD,GAAyBpiD,SAAU,EAC9B5J,EAEL,GAAIiK,OAAOsjD,WAAY,CACnB,IAAMC,EAAmBvjD,OAAOsjD,WAAW,4BACrCE,EAA8B,WAAH,OAAU1B,GAAqBniD,QAAU4jD,EAAiBtuC,OAAO,EAClGsuC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEI1B,GAAqBniD,SAAU,CAEvC,CD6JY+jD,GAEJ5sD,KAAKmnC,mBAC4B,UAA7BnnC,KAAKyI,sBAE8B,WAA7BzI,KAAKyI,qBAEDuiD,GAAqBniD,SAI/B7I,KAAKsI,QACLtI,KAAKsI,OAAO8O,SAAS3W,IAAIT,MAC7BA,KAAKgJ,OAAOhJ,KAAKgF,MAAOhF,KAAKwI,gBACjC,GAAC,CAAAnI,IAAA,UAAAC,MACD,WAQI,IAAK,IAAMD,KAPX6qD,GAAAA,OAA0BlrD,KAAK6I,SAC/B7I,KAAK0X,YAAc1X,KAAK0X,WAAWzN,UACnCwQ,GAAYza,KAAK4rD,cACjBnxC,GAAYza,KAAKqJ,QACjBrJ,KAAKyrD,mBAAmBhoD,SAAQ,SAACb,GAAM,OAAKA,GAAQ,IACpD5C,KAAKqsD,uBAAyBrsD,KAAKqsD,wBACnCrsD,KAAKsI,QAAUtI,KAAKsI,OAAO8O,SAAStW,OAAOd,MACzBA,KAAKqkC,OACnBrkC,KAAKqkC,OAAOhkC,GAAKW,QAErB,IAAK,IAAMX,KAAOL,KAAK0H,SACnB1H,KAAK0H,SAASrH,GAAK4J,UAEvBjK,KAAK6I,QAAU,IACnB,GAAC,CAAAxI,IAAA,oBAAAC,MACD,SAAkBD,EAAKC,GAAO,IAAAmlC,EAAA,KACpBonB,EAAmBvhD,EAAe9K,IAAIH,GACtCysD,EAAiBxsD,EAAM2kC,GAAG,UAAU,SAAC8nB,GACvCtnB,EAAK7zB,aAAavR,GAAO0sD,EACzBtnB,EAAKzgC,MAAM+sB,UAAYvX,GAAAA,UAAgBirB,EAAKmmB,cACxCiB,GAAoBpnB,EAAK/tB,aACzB+tB,EAAK/tB,WAAW8oC,kBAAmB,EAE3C,IACMwM,EAAwB1sD,EAAM2kC,GAAG,gBAAiBjlC,KAAKm9C,gBAC7Dn9C,KAAKyrD,mBAAmB1gD,IAAI1K,GAAK,WAC7BysD,IACAE,IACI1sD,EAAMkvB,OACNlvB,EAAMo9B,MACd,GACJ,GAAC,CAAAr9B,IAAA,mBAAAC,MACD,SAAiB2sD,GAIb,OAAKjtD,KAAK6I,SACL7I,KAAKktD,0BACNltD,KAAK0M,OAASugD,EAAMvgD,KAGjB1M,KAAKktD,yBAAyBltD,KAAK6I,QAASokD,EAAMpkD,SAF9C,CAGf,GAAC,CAAAxI,IAAA,eAAAC,MACD,SAAA6J,EAA6CR,EAAUtC,EAAmBqC,GAetE,IAfgG,IAC5FyjD,EACAnlD,EAF4FktC,EAAA,KAAxEkY,GAALjjD,EAARiN,UAA0BrB,EAAAA,GAAAA,GAAA5L,EAAA44B,KAe5BhgC,EAAI,EAAGA,EAAIsoD,GAAatoD,IAAK,CAClC,IAAMoC,EAAOimD,GAAaroD,GAC1BsqD,EAA2GzmD,EAAmBzB,GAAtH2B,EAASumD,EAATvmD,UAAoBwmD,EAAkBD,EAA3BrwC,QAA6BmjC,EAAckN,EAAdlN,eAA+BoN,EAAsBF,EAArCrlD,cAC5Dm4C,IACAgN,EAA4BhN,GAC5Br5C,EAAUsmD,MACLptD,KAAK0H,SAASvC,IAASmoD,IACxBttD,KAAK0H,SAASvC,GAAQ,IAAImoD,EAAmBttD,OAE7CutD,IACAvlD,EAAgBulD,GAG5B,CACA,IAAmB,SAAdvtD,KAAK0M,MAAiC,QAAd1M,KAAK0M,QAC7B1M,KAAK0X,YACNy1C,EAA2B,CAC3BntD,KAAK0X,WAAa,IAAIy1C,EAA0BntD,KAAK4R,aAAc5R,KAAKsI,QAAUtI,KAAKsI,OAAOoP,YAC9F,IAAQxP,EAAuEklD,EAAvEllD,SAAUvB,EAA6DymD,EAA7DzmD,OAAQN,EAAqD+mD,EAArD/mD,KAAMmtC,EAA+C4Z,EAA/C5Z,gBAAiBkR,EAA8B0I,EAA9B1I,aAAczB,EAAgBmK,EAAhBnK,WAC/DjjD,KAAK0X,WAAWiiC,WAAW,CACvBzxC,SAAAA,EACAvB,OAAAA,EACA29C,oBAAqBj/C,QAAQgB,IACxBmtC,GAAmBxvC,EAAYwvC,GACpCnrC,cAAerI,KACfm9C,eAAgB,kBAAMjI,EAAKiI,gBAAgB,EAQ3CmL,cAAiC,kBAAX3hD,EAAsBA,EAAS,OACrD8hD,uBAAwB/+C,EACxBg7C,aAAAA,EACAzB,WAAAA,GAER,CACA,OAAOj7C,CACX,GAAC,CAAA3H,IAAA,iBAAAC,MACD,WACI,IAAK,IAAMD,KAAOL,KAAK0H,SAAU,CAC7B,IAAM8lD,EAAUxtD,KAAK0H,SAASrH,GAC1BmtD,EAAQtwC,UACRswC,EAAQxkD,UAGRwkD,EAAQxjD,QACRwjD,EAAQtwC,WAAY,EAE5B,CACJ,GAAC,CAAA7c,IAAA,eAAAC,MACD,WACIN,KAAKytD,MAAMztD,KAAK+X,YAAa/X,KAAK4R,aAAc5R,KAAK6R,QAAS7R,KAAKgF,MACvE,GACA,CAAA3E,IAAA,qBAAAC,MAKA,WACI,OAAON,KAAK6I,QACN7I,KAAK0tD,2BAA2B1tD,KAAK6I,QAAS7I,KAAKgF,O3B3SxC,CACrB4G,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,G2B8SrC,GAAC,CAAAlD,IAAA,iBAAAC,MACD,SAAeD,GACX,OAAOL,KAAK4R,aAAavR,EAC7B,GAAC,CAAAA,IAAA,iBAAAC,MACD,SAAeD,EAAKC,GAChBN,KAAK4R,aAAavR,GAAOC,CAC7B,GACA,CAAAD,IAAA,SAAAC,MAIA,SAAO0E,EAAOwD,IACNxD,EAAM8M,mBAAqB9R,KAAKgF,MAAM8M,oBACtC9R,KAAKm9C,iBAETn9C,KAAKmY,UAAYnY,KAAKgF,MACtBhF,KAAKgF,MAAQA,EACbhF,KAAKqrC,oBAAsBrrC,KAAKwI,gBAChCxI,KAAKwI,gBAAkBA,EAIvB,IAAK,IAAIzF,EAAI,EAAGA,EAAIuoD,GAAkBvqD,OAAQgC,IAAK,CAC/C,IAAM1C,EAAMirD,GAAkBvoD,GAC1B/C,KAAK2rD,uBAAuBtrD,KAC5BL,KAAK2rD,uBAAuBtrD,YACrBL,KAAK2rD,uBAAuBtrD,IAEvC,IAAMstD,EAAW3oD,EAAM,KAAO3E,GAC1BstD,IACA3tD,KAAK2rD,uBAAuBtrD,GAAOL,KAAKilC,GAAG5kC,EAAKstD,GAExD,CACA3tD,KAAK0rD,iBEpVb,SAAqCl0C,EAAS4L,EAAMC,GAChD,IAAQwjB,EAAezjB,EAAfyjB,WACR,IAAK,IAAMxmC,KAAO+iB,EAAM,CACpB,IAAMwqC,EAAYxqC,EAAK/iB,GACjBwtD,EAAYxqC,EAAKhjB,GACvB,GAAIoL,EAAcmiD,GAKdp2C,EAAQyuB,SAAS5lC,EAAKutD,GAClBnqB,GAAwBoD,IACxBA,EAAWpmC,IAAIJ,QAUlB,GAAIoL,EAAcoiD,GAKnBr2C,EAAQyuB,SAAS5lC,EAAKmqB,GAAYojC,EAAW,CAAEp+B,MAAOhY,KAClDisB,GAAwBoD,IACxBA,EAAWjkC,OAAOvC,QAGrB,GAAIwtD,IAAcD,EAMnB,GAAIp2C,EAAQwuB,SAAS3lC,GAAM,CACvB,IAAMytD,EAAgBt2C,EAAQyQ,SAAS5nB,IAEtCytD,EAAcjpB,aAAeipB,EAAc/iD,IAAI6iD,EACpD,KACK,CACD,IAAMb,EAAcv1C,EAAQu2C,eAAe1tD,GAC3CmX,EAAQyuB,SAAS5lC,EAAKmqB,QAA4B/nB,IAAhBsqD,EAA4BA,EAAca,EAAW,CAAEp+B,MAAOhY,IACpG,CAER,CAEA,IAAK,IAAMnX,KAAOgjB,OACI5gB,IAAd2gB,EAAK/iB,IACLmX,EAAQw2C,YAAY3tD,GAE5B,OAAO+iB,CACX,CF6RgC6qC,CAA4BjuD,KAAMA,KAAKkY,4BAA4BlT,EAAOhF,KAAKmY,WAAYnY,KAAK0rD,kBACpH1rD,KAAKkuD,wBACLluD,KAAKkuD,wBAEb,GAAC,CAAA7tD,IAAA,WAAAC,MACD,WACI,OAAON,KAAKgF,KAChB,GACA,CAAA3E,IAAA,aAAAC,MAGA,SAAW6E,GACP,OAAOnF,KAAKgF,MAAMM,SAAWtF,KAAKgF,MAAMM,SAASH,QAAQ1C,CAC7D,GACA,CAAApC,IAAA,uBAAAC,MAGA,WACI,OAAON,KAAKgF,MAAMmV,UACtB,GAAC,CAAA9Z,IAAA,wBAAAC,MACD,WACI,OAAON,KAAKgF,MAAMrG,kBACtB,GAAC,CAAA0B,IAAA,wBAAAC,MACD,WACI,OAAON,KAAKoF,cACNpF,KACAA,KAAKsI,OACDtI,KAAKsI,OAAO6lD,6BACZ1rD,CACd,GAAC,CAAApC,IAAA,oBAAAC,MACD,WAAyC,IAAvB8tD,EAAa5rD,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,IAAAA,UAAA,GAC3B,GAAI4rD,EACA,OAAOpuD,KAAKsI,OAAStI,KAAKsI,OAAO4gC,yBAAsBzmC,EAE3D,IAAKzC,KAAK+E,sBAAuB,CAC7B,IAAMU,EAAUzF,KAAKsI,QACftI,KAAKsI,OAAO4gC,qBACZ,CAAC,EAIP,YAH2BzmC,IAAvBzC,KAAKgF,MAAMU,UACXD,EAAQC,QAAU1F,KAAKgF,MAAMU,SAE1BD,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACR1C,EAAI,EAAGA,EAAIwoD,GAAiBxoD,IAAK,CACtC,IAAMoC,EAAON,EAAa9B,GACpBiD,EAAOhG,KAAKgF,MAAMG,IACpBb,EAAe0B,KAAkB,IAATA,KACxBP,EAAQN,GAAQa,EAExB,CACA,OAAOP,CACX,GACA,CAAApF,IAAA,kBAAAC,MAGA,SAAgBke,GACZ,IAAM6vC,EAAqBruD,KAAKmuD,wBAChC,GAAIE,EAGA,OAFAA,EAAmB5mB,iBACf4mB,EAAmB5mB,gBAAgBhnC,IAAI+d,GACpC,kBAAM6vC,EAAmB5mB,gBAAgB3mC,OAAO0d,EAAM,CAErE,GACA,CAAAne,IAAA,WAAAC,MAGA,SAASD,EAAKC,GAENA,IAAUN,KAAK8U,OAAOjK,IAAIxK,KAC1BL,KAAKguD,YAAY3tD,GACjBL,KAAKusD,kBAAkBlsD,EAAKC,IAEhCN,KAAK8U,OAAO/J,IAAI1K,EAAKC,GACrBN,KAAK4R,aAAavR,GAAOC,EAAMuK,KACnC,GACA,CAAAxK,IAAA,cAAAC,MAGA,SAAYD,GACRL,KAAK8U,OAAOhU,OAAOT,GACnB,IAAM6kC,EAAcllC,KAAKyrD,mBAAmB5gD,IAAIxK,GAC5C6kC,IACAA,IACAllC,KAAKyrD,mBAAmB3qD,OAAOT,WAE5BL,KAAK4R,aAAavR,GACzBL,KAAKsuD,2BAA2BjuD,EAAKL,KAAK+X,YAC9C,GACA,CAAA1X,IAAA,WAAAC,MAGA,SAASD,GACL,OAAOL,KAAK8U,OAAOtU,IAAIH,EAC3B,GAAC,CAAAA,IAAA,WAAAC,MACD,SAASD,EAAKiuB,GACV,GAAItuB,KAAKgF,MAAM8P,QAAU9U,KAAKgF,MAAM8P,OAAOzU,GACvC,OAAOL,KAAKgF,MAAM8P,OAAOzU,GAE7B,IAAIC,EAAQN,KAAK8U,OAAOjK,IAAIxK,GAK5B,YAJcoC,IAAVnC,QAAwCmC,IAAjB6rB,IACvBhuB,EAAQkqB,GAA6B,OAAjB8D,OAAwB7rB,EAAY6rB,EAAc,CAAEkB,MAAOxvB,OAC/EA,KAAKimC,SAAS5lC,EAAKC,IAEhBA,CACX,GACA,CAAAD,IAAA,YAAAC,MAKA,SAAUD,EAAK8S,GACX,IAAIsB,ED7bWlQ,EC8bXjE,OAAmCmC,IAA3BzC,KAAK4R,aAAavR,IAAuBL,KAAK6I,QAEI,QAAvD4L,EAAKzU,KAAKuuD,uBAAuBvuD,KAAKgF,MAAO3E,UAAyB,IAAPoU,EAAgBA,EAAKzU,KAAKwuD,sBAAsBxuD,KAAK6I,QAASxI,EAAKL,KAAK6R,SADxI7R,KAAK4R,aAAavR,GAaxB,YAXcoC,IAAVnC,GAAiC,OAAVA,IACF,kBAAVA,IACN4lB,GAAkB5lB,IAAUylB,GAAkBzlB,IAE/CA,EAAQyM,WAAWzM,IDrcZiE,ECucajE,GDvcP6qD,GAAWhiC,KAAKH,GAAczkB,KCucbopB,GAAQxiB,KAAKgI,KAC3C7S,EAAQwtB,GAAkBztB,EAAK8S,KAEnCnT,KAAKyuD,cAAcpuD,EAAKoL,EAAcnL,GAASA,EAAMuK,MAAQvK,IAE1DmL,EAAcnL,GAASA,EAAMuK,MAAQvK,CAChD,GACA,CAAAD,IAAA,gBAAAC,MAIA,SAAcD,EAAKC,GACfN,KAAK+rD,WAAW1rD,GAAOC,CAC3B,GACA,CAAAD,IAAA,gBAAAC,MAIA,SAAcD,GACV,IAAIoU,EAAImZ,EACAloB,EAAY1F,KAAKgF,MAAjBU,QACFgpD,EAAsC,kBAAZhpD,GAA2C,kBAAZA,EAC2E,QAAnIkoB,EAAKnV,GAAwBzY,KAAKgF,MAAOU,EAAyC,QAA/B+O,EAAKzU,KAAKwI,uBAAoC,IAAPiM,OAAgB,EAASA,EAAGjK,eAA4B,IAAPojB,OAAgB,EAASA,EAAGvtB,QACxKoC,EAIN,GAAIiD,QAAgCjD,IAArBisD,EACX,OAAOA,EAMX,IAAMv7C,EAASnT,KAAKuuD,uBAAuBvuD,KAAKgF,MAAO3E,GACvD,YAAeoC,IAAX0Q,GAAyB1H,EAAc0H,QAMR1Q,IAA5BzC,KAAKgsD,cAAc3rD,SACDoC,IAArBisD,OACEjsD,EACAzC,KAAK+rD,WAAW1rD,GARX8S,CASf,GAAC,CAAA9S,IAAA,KAAAC,MACD,SAAG2a,EAAW3Y,GAIV,OAHKtC,KAAKqkC,OAAOppB,KACbjb,KAAKqkC,OAAOppB,GAAa,IAAI4oB,IAE1B7jC,KAAKqkC,OAAOppB,GAAWxa,IAAI6B,EACtC,GAAC,CAAAjC,IAAA,SAAAC,MACD,SAAO2a,GACH,GAAIjb,KAAKqkC,OAAOppB,GAAY,SAAA0zC,EAAAvyC,EAAA5Z,UAAAzB,OADXihD,EAAI,IAAAx9C,MAAA4X,EAAA,EAAAA,EAAA,KAAAwyC,EAAA,EAAAA,EAAAxyC,EAAAwyC,IAAJ5M,EAAI4M,EAAA,GAAApsD,UAAAosD,IAEjBD,EAAA3uD,KAAKqkC,OAAOppB,IAAW0pB,OAAM5mB,MAAA4wC,EAAI3M,EACrC,CACJ,KAACwJ,CAAA,CAjec,GGvCbqD,GAAgB,SAAAC,IAAAlxC,EAAAA,GAAAA,GAAAixC,EAAAC,GAAA,IAAAjxC,GAAAC,EAAAA,GAAAA,GAAA+wC,GAClB,SAAAA,IAAc,IAAA5wC,EAEmC,OAFnCle,EAAAA,EAAAA,GAAA,KAAA8uD,IACV5wC,EAAAJ,EAAAE,MAAA,KAASvb,YACJ6nB,iBAAmBiF,GAAqBrR,CACjD,CAeC,OAfA7d,EAAAA,EAAAA,GAAAyuD,EAAA,EAAAxuD,IAAA,2BAAAC,MACD,SAAyB2b,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE8yC,wBAAwB7yC,GAAS,GAAK,CACnD,GAAC,CAAA7b,IAAA,yBAAAC,MACD,SAAuB0E,EAAO3E,GAC1B,OAAO2E,EAAM+M,MAAQ/M,EAAM+M,MAAM1R,QAAOoC,CAC5C,GAAC,CAAApC,IAAA,6BAAAC,MACD,SAA2BD,EAAGyC,GAAmB,IAAfkP,EAAIlP,EAAJkP,KAAMD,EAAKjP,EAALiP,aAC7BC,EAAK3R,UACL0R,EAAM1R,EACjB,KAACwuD,CAAA,CAnBiB,CAASrD,ICS9B,IACKwD,GAAiB,SAAAC,IAAArxC,EAAAA,GAAAA,GAAAoxC,EAAAC,GAAA,IAAApxC,GAAAC,EAAAA,GAAAA,GAAAkxC,GACnB,SAAAA,IAAc,IAAA/wC,EAES,OAFTle,EAAAA,EAAAA,GAAA,KAAAivD,IACV/wC,EAAAJ,EAAAE,MAAA,KAASvb,YACJkK,KAAO,OAAOuR,CACvB,CAsCC,OAtCA7d,EAAAA,EAAAA,GAAA4uD,EAAA,EAAA3uD,IAAA,wBAAAC,MACD,SAAsByJ,EAAU1J,GAC5B,GAAIiL,EAAe9K,IAAIH,GAAM,CACzB,IAAM6uD,EAAc9/B,GAAoB/uB,GACxC,OAAO6uD,GAAcA,EAAYhiD,SAAe,CACpD,CAEI,IAdcsK,EAcR23C,GAdQ33C,EAcyBzN,EAbxCb,OAAO8d,iBAAiBxP,IAcjBlX,GAAS6L,EAAkB9L,GAC3B8uD,EAAcloC,iBAAiB5mB,GAC/B8uD,EAAc9uD,KAAS,EAC7B,MAAwB,kBAAVC,EAAqBA,EAAMkM,OAASlM,CAE1D,GAAC,CAAAD,IAAA,6BAAAC,MACD,SAA2ByJ,EAAQjH,GAC/B,OAAO+tB,GAAmB9mB,EAD2BjH,EAAlBnE,mBAEvC,GAAC,CAAA0B,IAAA,QAAAC,MACD,SAAMyX,EAAanG,EAAcC,EAAS7M,GACtC2M,GAAgBoG,EAAanG,EAAcC,EAAS7M,EAAM8M,kBAC9D,GAAC,CAAAzR,IAAA,8BAAAC,MACD,SAA4B0E,EAAOmT,GAC/B,OAAOD,GAA4BlT,EAAOmT,EAC9C,GAAC,CAAA9X,IAAA,yBAAAC,MACD,WAAyB,IAAA8d,EAAA,KACjBpe,KAAKovD,oBACLpvD,KAAKovD,2BACEpvD,KAAKovD,mBAEhB,IAAQh4C,EAAapX,KAAKgF,MAAlBoS,SACJ3L,EAAc2L,KACdpX,KAAKovD,kBAAoBh4C,EAAS6tB,GAAG,UAAU,SAAC3N,GACxClZ,EAAKvV,UACLuV,EAAKvV,QAAQwmD,YAAc,GAAHvqD,OAAMwyB,GACtC,IAER,GAAC,CAAAj3B,IAAA,iBAAAC,MACD,SAAeyJ,EAAUgO,EAAaN,EAAWC,GAC7CH,GAAWxN,EAAUgO,EAAaN,EAAWC,EACjD,KAACs3C,CAAA,CA1CkB,CAASH,ICF1BS,GAAgB,SAAAL,IAAArxC,EAAAA,GAAAA,GAAA0xC,EAAAL,GAAA,IAAApxC,GAAAC,EAAAA,GAAAA,GAAAwxC,GAClB,SAAAA,IAAc,IAAArxC,EAGY,OAHZle,EAAAA,EAAAA,GAAA,KAAAuvD,IACVrxC,EAAAJ,EAAAE,MAAA,KAASvb,YACJkK,KAAO,MACZuR,EAAK3I,UAAW,EAAM2I,CAC1B,CA2BC,OA3BA7d,EAAAA,EAAAA,GAAAkvD,EAAA,EAAAjvD,IAAA,yBAAAC,MACD,SAAuB0E,EAAO3E,GAC1B,OAAO2E,EAAM3E,EACjB,GAAC,CAAAA,IAAA,wBAAAC,MACD,SAAsByJ,EAAU1J,GAC5B,GAAIiL,EAAe9K,IAAIH,GAAM,CACzB,IAAM6uD,EAAc9/B,GAAoB/uB,GACxC,OAAO6uD,GAAcA,EAAYhiD,SAAe,CACpD,CAEA,OADA7M,EAAOwX,GAAoBrX,IAAIH,GAA0BA,EAAnBb,EAAYa,GAC3C0J,EAASwlD,aAAalvD,EACjC,GAAC,CAAAA,IAAA,6BAAAC,MACD,WACI,MhClBiB,CACrBsL,EAFsB,CAAEpI,IAAK,EAAGD,IAAK,GAGrCsI,EAHsB,CAAErI,IAAK,EAAGD,IAAK,GgCoBrC,GAAC,CAAAlD,IAAA,8BAAAC,MACD,SAA4B0E,EAAOmT,GAC/B,OAAOD,GAA4BlT,EAAOmT,EAC9C,GAAC,CAAA9X,IAAA,QAAAC,MACD,SAAMyX,EAAanG,EAAcC,EAAS7M,GACtCqQ,GAAc0C,EAAanG,EAAcC,EAAS7R,KAAKsV,SAAUtQ,EAAM8M,kBAC3E,GAAC,CAAAzR,IAAA,iBAAAC,MACD,SAAeyJ,EAAUgO,EAAaN,EAAWC,GAC7CI,GAAU/N,EAAUgO,EAAaN,EAAWC,EAChD,GAAC,CAAArX,IAAA,QAAAC,MACD,SAAMyJ,GACF/J,KAAKsV,SAAWA,GAASvL,EAAS+Q,UAClC2U,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,GAAA4/B,EAAAnrD,WAAA,cAAAE,KAAA,KAAY0F,EAChB,KAACulD,CAAA,CAhCiB,CAAST,ICPzBW,GAAyB,SAAC/nD,EAAWoK,GACvC,OAAO5G,EAAexD,GAChB,IAAI6nD,GAAiBz9C,EAAS,CAAEY,4BAA4B,IAC5D,IAAIu8C,GAAkBn9C,EAAS,CAAEY,4BAA4B,GACvE,ECLM9L,GAAS,CACXA,OAAQ,CACJw5C,eAAgB0K,GAChB7iD,cAAAA,KCGFX,IAAiBM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBm/B,IACA5jB,IACA7c,IACAM,IAQD8oD,GAAuBnlD,GAAkB,SAAC7C,EAAW0R,GAAM,OChBjE,SAA+B1R,EAAS3E,EAAkCuE,EAAmBC,GAAqB,IAAAooD,EAAA5sD,EAAtE8R,mBAAAA,OAAkB,IAAA86C,GAAQA,EAC5DC,EAAa1kD,EAAexD,GAC5BiT,GACAK,GACN,OAAApT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOgoD,GAAU,IACbtoD,kBAAAA,EACAE,UAAW0P,GAAgBrC,GAC3BtN,oBAAAA,EACAG,UAAAA,GAER,CDKsEmoD,CAAsBnoD,EAAW0R,EAAQ9R,GAAmBmoD,GAAuB,G","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removeNonTranslationalTransform(element));\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.teardown();\n        const { onStop } = this.options;\n        onStop && onStop();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, motionValue, name } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.20\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.20\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.20 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","_classCallCheck","this","order","scheduled","Set","_createClass","key","value","process","has","add","push","index","indexOf","splice","delete","length","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","remove","frameData","_ref","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","wake","keepAlive","immediate","_createRenderBatcher","queueMicrotask","microtask","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","isTransitionDefined","when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from","elapsed","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","_ref$repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","parseCSSVariable","match","exec","_match","_slicedToArray","token1","token2","fallback","getVariableValue","depth","_parseCSSVariable","_parseCSSVariable2","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","getValue","positionalValues","_ref3","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","measureInitialState","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","_toConsumableArray","currentValue","valueAsRead","readValue","scheduleResolve","isColorString","testProp","splitColor","aName","bName","cName","_v$match","_v$match2","c","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","_analyseComplexValue","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","_KeyframeResolver","owner","_get","_getPrototypeOf","keyframe","resolveNoneKeyframes","_unresolvedKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","_ref$autoplay","autoplay","_ref$delay","_ref$type","_ref$repeat","_ref$repeatDelay","isStopped","updateFinishedPromise","_resolved","_this$options","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","then","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","findSpring","envelope","derivative","_ref$duration","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","_definition","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","interpolate","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","_BaseAnimation","_ref$KeyframeResolver","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","onResolved","onKeyframesResolved","resolveKeyframes","keyframes$1","mapPercentToKeyframes","mirroredGenerator","_this$options2","_this$options2$type","_this$options2$repeat","_this$options2$repeat2","_this$options2$veloci","generatorFactory","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","_this$options$autopla","play","pause","sample","_this$options3","speed","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isOddIteration","isAnimationFinished","finish","driver","newSpeed","hasChanged","resume","_this$options4","_this$options4$driver","onPlay","tick","teardown","onStop","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","_this$options2$durati","requiresPregeneratedKeyframes","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","_excluded2","sampleTime","setWithVelocity","HTMLElement","animateMotionValue","isHandoff","valueTransition","_transition$elapsed","shouldSkip","supports","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","setMotionValue","hasValue","addValue","setTarget","_ref$transitionEnd","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","_ref2$delay","transitionOverride","_targetAndTransition$","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","buildResolvedTypeValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","_this$getProps4","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetSkewAndRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","read","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}